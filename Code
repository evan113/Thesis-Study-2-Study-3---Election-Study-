---
title: "STUDY 3 - ELECTION STUDY"
author: "Anonymous"
date: "2023-07-31"
output: html_document
---
## Load packages

```{r}
library(tidyverse)
library(httr)
library(haven)
library(readxl)
library(ggplot2)
library(ggpubr)
library(PerformanceAnalytics)
library(psych)
library(lavaan)
library(gt)
library(gto)
library(officer)
library(semTools)
library(broom)
library(semPlot)
library(semoutput) # devtools::install_github("dr-JT/semoutput")
library(sjPlot)
library(semPower)
library(sjstats)
library(semTable)
library(apaTables)
library(lme4)
library(lmerTest)
library(lmtest) ## likelihood ratio test for model comparisons based on the recommendations of 
## Gonzales & Griffin (2001) because the LRT will always yield identical results across identical 
## identifications regardless of sample size - it is also invariant to different methods of imposing
## model constraints for model identification
```

## Power analysis for path analysis

## Calculating DF using df = m*(m+1) / 2 - 2*m - X \* (X - 1)/2 - g - b for different portions of model

## fluctuate between 20 - 130

## Preacher, K. J., & Coffman, D. L. (2006, May). Computing power and minimum sample size for RMSEA

```{r}
#Computation of minimum sample size for test of fit

rmsea0 <- 0.02 #null hypothesized RMSEA
rmseaa <- 0.08 #alternative hypothesized RMSEA
d <- 20 #degrees of freedom - as DF get smaller sample size needs to be larger (IE. test at the smallest predicted DF)
alpha <- 0.05 #alpha level
desired <- 0.8 #desired power

#initialize values
pow <- 0.0
n <- 0
#begin loop for finding initial level of n
while (pow<desired) {
  n <- n+100
  ncp0 <- (n-1)*d*rmsea0^2
  ncpa <- (n-1)*d*rmseaa^2
  #compute power
  if(rmsea0<rmseaa) {
      cval <- qchisq(alpha,d,ncp=ncp0,lower.tail=F)
      pow <- pchisq(cval,d,ncp=ncpa,lower.tail=F)
  }
  else {
      cval <- qchisq(1-alpha,d,ncp=ncp0,lower.tail=F)
      pow <- 1-pchisq(cval,d,ncp=ncpa,lower.tail=F)
  }
}

#begin loop for interval halving
foo <- -1
newn <- n
interval <- 200
powdiff <- pow - desired
while (powdiff>.001) {
  interval <- interval*.5
  newn <- newn + foo*interval*.5
  ncp0 <- (newn-1)*d*rmsea0^2
  ncpa <- (newn-1)*d*rmseaa^2
  #compute power
  if(rmsea0<rmseaa) {
      cval <- qchisq(alpha,d,ncp=ncp0,lower.tail=F)
      pow <- pchisq(cval,d,ncp=ncpa,lower.tail=F)
  }
  else {
      cval <- qchisq(1-alpha,d,ncp=ncp0,lower.tail=F)
      pow <- 1-pchisq(cval,d,ncp=ncpa,lower.tail=F)
  }
  powdiff <- abs(pow-desired)
  if (pow<desired) {
    foo <- 1
  }
  if (pow>desired) {
    foo <- -1
  }
}

minn <- newn
print(minn)

## Recommended  sample - 214 to acquire a precise RMSEA between .02 and .08 (cutoff) 
```

## Monte carlo simulation using ideal samples for sensitivity analysis

## Required per country sample size is 198 with power = .80

## power analysis above with sample size of 214 = .83

## Ideal per country sample size is 500 with power = .99

```{r}
library(pwr)

# Set parameters for the simulation
true_effect_size <- .2
population_sd <- 1
desired_power <- 0.80   # Desired power (e.g., 0.80 for 80% power)
alpha <- 0.05           # Significance level

# Function to perform a single simulation and calculate power
simulate_path_analysis <- function(n) {
  # Generate data with assumed parameters
  x <- rnorm(n, mean = 0, sd = 1)
  error <- rnorm(n, mean = 0, sd = population_sd)
  y <- true_effect_size * x + error
  

  # For illustration purposes, we use pwr.t.test from the 'pwr' package to calculate power
  power <- pwr.t.test(n = n, d = true_effect_size, sig.level = alpha, power = NULL, type = "paired")$power
  
  return(power)
}

# Set the number of simulations
num_simulations <- 1000

# Create a vector to store the power values from each simulation
simulation_results <- numeric(num_simulations)

# Run the Monte Carlo simulations
for (i in 1:num_simulations) {
  simulation_results[i] <- simulate_path_analysis(n = 500)
}

# Calculate the average power across all simulations
average_power <- mean(simulation_results)

# Find the required sample size to achieve the desired power
required_sample_size <- uniroot(function(n) simulate_path_analysis(n) - desired_power, c(10, 10000))$root

# Print the results
cat("Average Power:", round(average_power, 3), "\n")
cat("Required Sample Size:", round(required_sample_size), "\n")

## post hoc power analysis
## assigning df to model with least amount of degrees of freedom (sensitive to low df)
power <- semPower(type = "post-hoc", .08, "RMSEA", alpha = .05, N = 264, df = 27)
summary(power)
```

## Load data

```{r}
Wave_1 <- read_excel("Thesis Study 2 - NEW ZEALAND - PROLIFIC (WAVE 1).xlsx")
Wave_2 <- read_excel("Thesis Study 2 - NEW ZEALAND - PROLIFIC (WAVE 2).xlsx")
Wave_3 <- read_excel("Thesis Study 2 - NEW ZEALAND - PROLIFIC (WAVE 3).xlsx")
Wave_4 <- read_excel("Thesis Study 2 - NEW ZEALAND - PROLIFIC (WAVE 4).xlsx")
```

## Cleaning data (dropping columns)

```{r}
Wave_1 <- Wave_1[-1, -c(1:11, 13:14, 21, 100:101)]
Wave_2 <- Wave_2[-1, -c(1:11, 13, 28, 104:105)]
Wave_3 <- Wave_3[-1, -c(1:11, 13, 93, 103:104)]
Wave_4 <- Wave_4[-1, -c(1:11, 13, 108, 118:119)]

colnames(Wave_1)[colnames(Wave_1) == "PROLIFIC_ID"] <- "ID"
colnames(Wave_2)[colnames(Wave_2) == "Prolific_ID"] <- "ID"
colnames(Wave_3)[colnames(Wave_3) == "PROLIFIC_ID"] <- "ID"
colnames(Wave_4)[colnames(Wave_4) == "Prolific_ID"] <- "ID"
```

## Merging data by ID (Waves 1 - 4)

```{r}
W1_W2 <- merge(Wave_1, Wave_2, by = "ID", all = TRUE)
W1_W2_W3 <- merge(W1_W2, Wave_3, by = "ID", all = TRUE)
FULLDATA <- merge(W1_W2_W3, Wave_4, by = "ID", all = TRUE)

FULLDATA$ID <- as.factor(FULLDATA$ID)
```

## converting items to numeric and adjusting responses due to qualtrics coding error

```{r}
## Global Trust inventory (W1 - W4)
FULLDATA$GTI_W1_1 <- as.numeric(FULLDATA$GTI_W1_1)
FULLDATA$GTI_W1_2 <- as.numeric(FULLDATA$GTI_W1_2)
FULLDATA$GTI_W1_3 <- as.numeric(FULLDATA$GTI_W1_3)
FULLDATA$GTI_W1_4 <- as.numeric(FULLDATA$GTI_W1_4)
FULLDATA$GTI_W1_5 <- as.numeric(FULLDATA$GTI_W1_5)
FULLDATA$GTI_W1_6 <- as.numeric(FULLDATA$GTI_W1_6)
FULLDATA$GTI_W2_1 <- as.numeric(FULLDATA$GTI_W2_1)
FULLDATA$GTI_W2_2 <- as.numeric(FULLDATA$GTI_W2_2)
FULLDATA$GTI_W2_3 <- as.numeric(FULLDATA$GTI_W2_3)
FULLDATA$GTI_W2_4 <- as.numeric(FULLDATA$GTI_W2_4)
FULLDATA$GTI_W2_5 <- as.numeric(FULLDATA$GTI_W2_5)
FULLDATA$GTI_W2_6 <- as.numeric(FULLDATA$GTI_W2_6)
FULLDATA$GTI_W3_1 <- as.numeric(FULLDATA$GTI_W3_1)
FULLDATA$GTI_W3_2 <- as.numeric(FULLDATA$GTI_W3_2)
FULLDATA$GTI_W3_3 <- as.numeric(FULLDATA$GTI_W3_3)
FULLDATA$GTI_W3_4 <- as.numeric(FULLDATA$GTI_W3_4)
FULLDATA$GTI_W3_5 <- as.numeric(FULLDATA$GTI_W3_5)
FULLDATA$GTI_W3_6 <- as.numeric(FULLDATA$GTI_W3_6)
FULLDATA$GTI_W4_1 <- as.numeric(FULLDATA$GTI_W4_1)
FULLDATA$GTI_W4_2 <- as.numeric(FULLDATA$GTI_W4_2)
FULLDATA$GTI_W4_3 <- as.numeric(FULLDATA$GTI_W4_3)
FULLDATA$GTI_W4_4 <- as.numeric(FULLDATA$GTI_W4_4)
FULLDATA$GTI_W4_5 <- as.numeric(FULLDATA$GTI_W4_5)
FULLDATA$GTI_W4_6 <- as.numeric(FULLDATA$GTI_W4_6)

## Event Impact (W1 - W4)
FULLDATA$CEN_EVENT_IMP_W1_1 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W1_1)
FULLDATA$CEN_EVENT_IMP_W1_2 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W1_2)
FULLDATA$CEN_EVENT_IMP_W1_3 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W1_3)
FULLDATA$CEN_EVENT_IMP_W2_1 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W2_1)
FULLDATA$CEN_EVENT_IMP_W2_2 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W2_2)
FULLDATA$CEN_EVENT_IMP_W2_3 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W2_3)
FULLDATA$CEN_EVENT_IMP_W3_1 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W3_1)
FULLDATA$CEN_EVENT_IMP_W3_2 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W3_2)
FULLDATA$CEN_EVENT_IMP_W3_3 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W3_3)
FULLDATA$CEN_EVENT_IMP_W4_1 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W4_1)
FULLDATA$CEN_EVENT_IMP_W4_2 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W4_2)
FULLDATA$CEN_EVENT_IMP_W4_3 <- as.numeric(FULLDATA$CEN_EVENT_IMP_W4_3)

## Event Jaws and response (W1 - W4)
FULLDATA$CEN_GOV_Response_W1 <- as.numeric(FULLDATA$CEN_GOV_Response_W1)
FULLDATA$CEN_GOV_Response_W2 <- as.numeric(FULLDATA$CEN_GOV_Response_W2)
FULLDATA$CEN_GOV_Response_W3 <- as.numeric(FULLDATA$CEN_GOV_Response_W3)
FULLDATA$CEN_GOV_Response_W4 <- as.numeric(FULLDATA$CEN_GOV_Response_W4)



FULLDATA$CEN_JAWS_W1_1 <- as.numeric(FULLDATA$CEN_JAWS_W1_1)
FULLDATA$CEN_JAWS_W1_2 <- as.numeric(FULLDATA$CEN_JAWS_W1_2)
FULLDATA$CEN_JAWS_W1_3 <- as.numeric(FULLDATA$CEN_JAWS_W1_3)
FULLDATA$CEN_JAWS_W2_1 <- as.numeric(FULLDATA$CEN_JAWS_W2_1)
FULLDATA$CEN_JAWS_W2_2 <- as.numeric(FULLDATA$CEN_JAWS_W2_2)
FULLDATA$CEN_JAWS_W2_3 <- as.numeric(FULLDATA$CEN_JAWS_W2_3)
FULLDATA$CEN_JAWS_W3_1 <- as.numeric(FULLDATA$CEN_JAWS_W3_1)
FULLDATA$CEN_JAWS_W3_2 <- as.numeric(FULLDATA$CEN_JAWS_W3_2)
FULLDATA$CEN_JAWS_W3_3 <- as.numeric(FULLDATA$CEN_JAWS_W3_3)
FULLDATA$CEN_JAWS_W4_1 <- as.numeric(FULLDATA$CEN_JAWS_W4_1)
FULLDATA$CEN_JAWS_W4_2 <- as.numeric(FULLDATA$CEN_JAWS_W4_2)
FULLDATA$CEN_JAWS_W4_3 <- as.numeric(FULLDATA$CEN_JAWS_W4_3)

##Indignity (W1 - W4)
FULLDATA$Indignity_W1_1 <- as.numeric(FULLDATA$Indignity_W1_1)
FULLDATA$Indignity_W1_2 <- as.numeric(FULLDATA$Indignity_W1_2)
FULLDATA$Indignity_W1_3 <- as.numeric(FULLDATA$Indignity_W1_3)
FULLDATA$Indignity_W1_4 <- as.numeric(FULLDATA$Indignity_W1_4)
FULLDATA$Indignity_W2_1 <- as.numeric(FULLDATA$Indignity_W2_1)
FULLDATA$Indignity_W2_2 <- as.numeric(FULLDATA$Indignity_W2_2)
FULLDATA$Indignity_W2_3 <- as.numeric(FULLDATA$Indignity_W2_3)
FULLDATA$Indignity_W2_4 <- as.numeric(FULLDATA$Indignity_W2_4)
FULLDATA$Indignity_W3_1 <- as.numeric(FULLDATA$Indignity_W3_1)
FULLDATA$Indignity_W3_2 <- as.numeric(FULLDATA$Indignity_W3_2)
FULLDATA$Indignity_W3_3 <- as.numeric(FULLDATA$Indignity_W3_3)
FULLDATA$Indignity_W3_4 <- as.numeric(FULLDATA$Indignity_W3_4)
FULLDATA$Indignity_W4_1 <- as.numeric(FULLDATA$Indignity_W4_1)
FULLDATA$Indignity_W4_2 <- as.numeric(FULLDATA$Indignity_W4_2)
FULLDATA$Indignity_W4_3 <- as.numeric(FULLDATA$Indignity_W4_3)
FULLDATA$Indignity_W4_4 <- as.numeric(FULLDATA$Indignity_W4_4)

## System Justification (W1 - W4)
FULLDATA$SJ_W1_1 <- as.numeric(FULLDATA$SJ_W1_1)
FULLDATA$SJ_W1_2 <- as.numeric(FULLDATA$SJ_W1_2)
FULLDATA$SJ_W1_3 <- as.numeric(FULLDATA$SJ_W1_3)
FULLDATA$SJ_W1_4 <- as.numeric(FULLDATA$SJ_W1_4)
FULLDATA$SJ_W2_1 <- as.numeric(FULLDATA$SJ_W2_1)
FULLDATA$SJ_W2_2 <- as.numeric(FULLDATA$SJ_W2_2)
FULLDATA$SJ_W2_3 <- as.numeric(FULLDATA$SJ_W2_3)
FULLDATA$SJ_W2_4 <- as.numeric(FULLDATA$SJ_W2_4)
FULLDATA$SJ_W3_1 <- as.numeric(FULLDATA$SJ_W3_1)
FULLDATA$SJ_W3_2 <- as.numeric(FULLDATA$SJ_W3_2)
FULLDATA$SJ_W3_3 <- as.numeric(FULLDATA$SJ_W3_3)
FULLDATA$SJ_W3_4 <- as.numeric(FULLDATA$SJ_W3_4)
FULLDATA$SJ_W4_1 <- as.numeric(FULLDATA$SJ_W4_1)
FULLDATA$SJ_W4_2 <- as.numeric(FULLDATA$SJ_W4_2)
FULLDATA$SJ_W4_3 <- as.numeric(FULLDATA$SJ_W4_3)
FULLDATA$SJ_W4_4 <- as.numeric(FULLDATA$SJ_W4_4)

## General Conspiracy Mentality (W1 - W4)
FULLDATA$GCM_W1_1 <- as.numeric(FULLDATA$GCM_W1_1)
FULLDATA$GCM_W1_2 <- as.numeric(FULLDATA$GCM_W1_2)
FULLDATA$GCM_W1_3 <- as.numeric(FULLDATA$GCM_W1_3)
FULLDATA$GCM_W1_4 <- as.numeric(FULLDATA$GCM_W1_4)
FULLDATA$GCM_W1_5 <- as.numeric(FULLDATA$GCM_W1_5)
FULLDATA$GCM_W1_6 <- as.numeric(FULLDATA$GCM_W1_6)
FULLDATA$GCM_W2_1 <- as.numeric(FULLDATA$GCM_W2_1)
FULLDATA$GCM_W2_2 <- as.numeric(FULLDATA$GCM_W2_2)
FULLDATA$GCM_W2_3 <- as.numeric(FULLDATA$GCM_W2_3)
FULLDATA$GCM_W2_4 <- as.numeric(FULLDATA$GCM_W2_4)
FULLDATA$GCM_W2_5 <- as.numeric(FULLDATA$GCM_W2_5)
FULLDATA$GCM_W2_6 <- as.numeric(FULLDATA$GCM_W2_6)
FULLDATA$GCM_W3_1 <- as.numeric(FULLDATA$GCM_W3_1)
FULLDATA$GCM_W3_2 <- as.numeric(FULLDATA$GCM_W3_2)
FULLDATA$GCM_W3_3 <- as.numeric(FULLDATA$GCM_W3_3)
FULLDATA$GCM_W3_4 <- as.numeric(FULLDATA$GCM_W3_4)
FULLDATA$GCM_W3_5 <- as.numeric(FULLDATA$GCM_W3_5)
FULLDATA$GCM_W3_6 <- as.numeric(FULLDATA$GCM_W3_6)
FULLDATA$GCM_W4_1 <- as.numeric(FULLDATA$GCM_W4_1)
FULLDATA$GCM_W4_2 <- as.numeric(FULLDATA$GCM_W4_2)
FULLDATA$GCM_W4_3 <- as.numeric(FULLDATA$GCM_W4_3)
FULLDATA$GCM_W4_4 <- as.numeric(FULLDATA$GCM_W4_4)
FULLDATA$GCM_W4_5 <- as.numeric(FULLDATA$GCM_W4_5)
FULLDATA$GCM_W4_6 <- as.numeric(FULLDATA$GCM_W4_6)

FULLDATA$GCM_CT_Social_W2 <- as.numeric(FULLDATA$GCM_CT_Social_W2)
FULLDATA$GCM_CT_Social_W3 <- as.numeric(FULLDATA$GCM_CT_Social_W3)
FULLDATA$GCM_CT_Social_W4 <- as.numeric(FULLDATA$GCM_CT_Social_W4)



## COVID CT (W1 - W4)
FULLDATA$Covid_CT_W1_1 <- as.numeric(FULLDATA$Covid_CT_W1_1)
FULLDATA$Covid_CT_W1_2 <- as.numeric(FULLDATA$Covid_CT_W1_2)
FULLDATA$Covid_CT_W1_3 <- as.numeric(FULLDATA$Covid_CT_W1_3)
FULLDATA$Covid_CT_W1_4 <- as.numeric(FULLDATA$Covid_CT_W1_4)
FULLDATA$Covid_CT_W2_1 <- as.numeric(FULLDATA$Covid_CT_W2_1)
FULLDATA$Covid_CT_W2_2 <- as.numeric(FULLDATA$Covid_CT_W2_2)
FULLDATA$Covid_CT_W2_3 <- as.numeric(FULLDATA$Covid_CT_W2_3)
FULLDATA$Covid_CT_W2_4 <- as.numeric(FULLDATA$Covid_CT_W2_4)
FULLDATA$Covid_CT_W3_1 <- as.numeric(FULLDATA$Covid_CT_W3_1)
FULLDATA$Covid_CT_W3_2 <- as.numeric(FULLDATA$Covid_CT_W3_2)
FULLDATA$Covid_CT_W3_3 <- as.numeric(FULLDATA$Covid_CT_W3_3)
FULLDATA$Covid_CT_W3_4 <- as.numeric(FULLDATA$Covid_CT_W3_4)
FULLDATA$Covid_CT_W4_1 <- as.numeric(FULLDATA$Covid_CT_W4_1)
FULLDATA$Covid_CT_W4_2 <- as.numeric(FULLDATA$Covid_CT_W4_2)
FULLDATA$Covid_CT_W4_3 <- as.numeric(FULLDATA$Covid_CT_W4_3)
FULLDATA$Covid_CT_W4_4 <- as.numeric(FULLDATA$Covid_CT_W4_4)

FULLDATA$Covid_CT_SOCIAL_W2 <- as.numeric(FULLDATA$Covid_CT_SOCIAL_W2)
FULLDATA$Covid_CT_SOCIAL_W3 <- as.numeric(FULLDATA$Covid_CT_SOCIAL_W3)
FULLDATA$Covid_CT_SOCIAL_W4 <- as.numeric(FULLDATA$Covid_CT_SOCIAL_W4)


## Life Satisfaction (W1 - W4)
FULLDATA$Life_Sat_W1_1 <- as.numeric(FULLDATA$Life_Sat_W1_1)
FULLDATA$Life_Sat_W1_2 <- as.numeric(FULLDATA$Life_Sat_W1_2)
FULLDATA$Life_Sat_W2_1 <- as.numeric(FULLDATA$Life_Sat_W2_1)
FULLDATA$Life_Sat_W2_2 <- as.numeric(FULLDATA$Life_Sat_W2_2)
FULLDATA$Life_Sat_W3_1 <- as.numeric(FULLDATA$Life_Sat_W3_1)
FULLDATA$Life_Sat_W3_2 <- as.numeric(FULLDATA$Life_Sat_W3_2)

## Political Encounters (W1 - W4)
FULLDATA$Pol_Inst_Enc_W1_1 <- as.numeric(FULLDATA$Pol_Inst_Enc_W1_1)
FULLDATA$Pol_Inst_Enc_W1_2 <- as.numeric(FULLDATA$Pol_Inst_Enc_W1_2)
FULLDATA$Pol_Inst_Enc_W1_3 <- as.numeric(FULLDATA$Pol_Inst_Enc_W1_3)
FULLDATA$Pol_Inst_Enc_W1_4 <- as.numeric(FULLDATA$Pol_Inst_Enc_W1_4)
FULLDATA$Pol_Inst_Enc_W1_5 <- as.numeric(FULLDATA$Pol_Inst_Enc_W1_5)
FULLDATA$Pol_Inst_Enc_W1_6 <- as.numeric(FULLDATA$Pol_Inst_Enc_W1_6)
FULLDATA$Pol_Inst_Enc_W2_1 <- as.numeric(FULLDATA$Pol_Inst_Enc_W2_1)
FULLDATA$Pol_Inst_Enc_W2_2 <- as.numeric(FULLDATA$Pol_Inst_Enc_W2_2)
FULLDATA$Pol_Inst_Enc_W2_3 <- as.numeric(FULLDATA$Pol_Inst_Enc_W2_3)
FULLDATA$Pol_Inst_Enc_W2_4 <- as.numeric(FULLDATA$Pol_Inst_Enc_W2_4)
FULLDATA$Pol_Inst_Enc_W2_5 <- as.numeric(FULLDATA$Pol_Inst_Enc_W2_5)
FULLDATA$Pol_Inst_Enc_W2_6 <- as.numeric(FULLDATA$Pol_Inst_Enc_W2_6)
FULLDATA$Pol_Inst_Enc_W3_1 <- as.numeric(FULLDATA$Pol_Inst_Enc_W3_1)
FULLDATA$Pol_Inst_Enc_W3_2 <- as.numeric(FULLDATA$Pol_Inst_Enc_W3_2)
FULLDATA$Pol_Inst_Enc_W3_3 <- as.numeric(FULLDATA$Pol_Inst_Enc_W3_3)
FULLDATA$Pol_Inst_Enc_W3_4 <- as.numeric(FULLDATA$Pol_Inst_Enc_W3_4)
FULLDATA$Pol_Inst_Enc_W3_5 <- as.numeric(FULLDATA$Pol_Inst_Enc_W3_5)
FULLDATA$Pol_Inst_Enc_W3_6 <- as.numeric(FULLDATA$Pol_Inst_Enc_W3_6)
FULLDATA$Pol_Inst_Enc_W4_1 <- as.numeric(FULLDATA$Pol_Inst_Enc_W4_1)
FULLDATA$Pol_Inst_Enc_W4_2 <- as.numeric(FULLDATA$Pol_Inst_Enc_W4_2)
FULLDATA$Pol_Inst_Enc_W4_3 <- as.numeric(FULLDATA$Pol_Inst_Enc_W4_3)
FULLDATA$Pol_Inst_Enc_W4_4 <- as.numeric(FULLDATA$Pol_Inst_Enc_W4_4)
FULLDATA$Pol_Inst_Enc_W4_5 <- as.numeric(FULLDATA$Pol_Inst_Enc_W4_5)
FULLDATA$Pol_Inst_Enc_W4_6 <- as.numeric(FULLDATA$Pol_Inst_Enc_W4_6)

## Media Usage and Partisanship (W1 - W4)
FULLDATA$MASS_MEDIA_1_W1 <- as.numeric(FULLDATA$MASS_MEDIA_1_W1)
FULLDATA$MASS_MEDIA_2_W1 <- as.numeric(FULLDATA$MASS_MEDIA_2_W1)
FULLDATA$MASS_MEDIA_3_W1 <- as.numeric(FULLDATA$MASS_MEDIA_3_W1)
FULLDATA$MASS_MEDIA_4_W1 <- as.numeric(FULLDATA$MASS_MEDIA_4_W1)
FULLDATA$MASS_MEDIA_5_W1 <- as.numeric(FULLDATA$MASS_MEDIA_5_W1)
FULLDATA$MASS_MEDIA_6_W1 <- as.numeric(FULLDATA$MASS_MEDIA_6_W1)
FULLDATA$MASS_MEDIA_7_W1 <- as.numeric(FULLDATA$MASS_MEDIA_7_W1)
FULLDATA$MASS_MEDIA_1_W2 <- as.numeric(FULLDATA$MASS_MEDIA_1_W2)
FULLDATA$MASS_MEDIA_2_W2 <- as.numeric(FULLDATA$MASS_MEDIA_2_W2)
FULLDATA$MASS_MEDIA_3_W2 <- as.numeric(FULLDATA$MASS_MEDIA_3_W2)
FULLDATA$MASS_MEDIA_4_W2 <- as.numeric(FULLDATA$MASS_MEDIA_4_W2)
FULLDATA$MASS_MEDIA_5_W2 <- as.numeric(FULLDATA$MASS_MEDIA_5_W2)
FULLDATA$MASS_MEDIA_6_W2 <- as.numeric(FULLDATA$MASS_MEDIA_6_W2)
FULLDATA$MASS_MEDIA_7_W2 <- as.numeric(FULLDATA$MASS_MEDIA_7_W2)
FULLDATA$MASS_MEDIA_1_W3 <- as.numeric(FULLDATA$MASS_MEDIA_1_W3)
FULLDATA$MASS_MEDIA_2_W3 <- as.numeric(FULLDATA$MASS_MEDIA_2_W3)
FULLDATA$MASS_MEDIA_3_W3 <- as.numeric(FULLDATA$MASS_MEDIA_3_W3)
FULLDATA$MASS_MEDIA_4_W3 <- as.numeric(FULLDATA$MASS_MEDIA_4_W3)
FULLDATA$MASS_MEDIA_5_W3 <- as.numeric(FULLDATA$MASS_MEDIA_5_W3)
FULLDATA$MASS_MEDIA_6_W3 <- as.numeric(FULLDATA$MASS_MEDIA_6_W3)
FULLDATA$MASS_MEDIA_7_W3 <- as.numeric(FULLDATA$MASS_MEDIA_7_W3)
FULLDATA$MASS_MEDIA_1_W4 <- as.numeric(FULLDATA$MASS_MEDIA_1_W4)
FULLDATA$MASS_MEDIA_2_W4 <- as.numeric(FULLDATA$MASS_MEDIA_2_W4)
FULLDATA$MASS_MEDIA_3_W4 <- as.numeric(FULLDATA$MASS_MEDIA_3_W4)
FULLDATA$MASS_MEDIA_4_W4 <- as.numeric(FULLDATA$MASS_MEDIA_4_W4)
FULLDATA$MASS_MEDIA_5_W4 <- as.numeric(FULLDATA$MASS_MEDIA_5_W4)
FULLDATA$MASS_MEDIA_6_W4 <- as.numeric(FULLDATA$MASS_MEDIA_6_W4)
FULLDATA$MASS_MEDIA_7_W4 <- as.numeric(FULLDATA$MASS_MEDIA_7_W4)

FULLDATA$TV_Partisan_W1 <- as.numeric(FULLDATA$TV_Partisan_W1)
FULLDATA$TV_Partisan_W2 <- as.numeric(FULLDATA$TV_Partisan_W2)
FULLDATA$TV_Partisan_W3 <- as.numeric(FULLDATA$TV_Partisan_W3)
FULLDATA$TV_Partisan_W4 <- as.numeric(FULLDATA$TV_Partisan_W4)
FULLDATA$NP_NA_Partisan_W1 <- as.numeric(FULLDATA$NP_NA_Partisan_W1)
FULLDATA$NP_NA_Partisan_W2 <- as.numeric(FULLDATA$NP_NA_Partisan_W2)
FULLDATA$NP_NA_Partisan_W3 <- as.numeric(FULLDATA$NP_NA_Partisan_W3)
FULLDATA$NP_NA_Partisan_W4 <- as.numeric(FULLDATA$NP_NA_Partisan_W4)
FULLDATA$TR_Partisan_W1 <- as.numeric(FULLDATA$TR_Partisan_W1)
FULLDATA$TR_Partisan_W2 <- as.numeric(FULLDATA$TR_Partisan_W2)
FULLDATA$TR_Partisan_W3 <- as.numeric(FULLDATA$TR_Partisan_W3)
FULLDATA$TR_Partisan_W4 <- as.numeric(FULLDATA$TR_Partisan_W4)
FULLDATA$PODCAST_Partisan_W1 <- as.numeric(FULLDATA$PODCAST_Partisan_W1)
FULLDATA$PODCAST_Partisan_W2 <- as.numeric(FULLDATA$PODCAST_Partisan_W2)
FULLDATA$PODCAST_Partisan_W3 <- as.numeric(FULLDATA$PODCAST_Partisan_W3)
FULLDATA$PODCAST_Partisan_W4 <- as.numeric(FULLDATA$PODCAST_Partisan_W4)
FULLDATA$SM_Partisan_W1 <- as.numeric(FULLDATA$SM_Partisan_W1)
FULLDATA$SM_Partisan_W2 <- as.numeric(FULLDATA$SM_Partisan_W2)
FULLDATA$SM_Partisan_W3 <- as.numeric(FULLDATA$SM_Partisan_W3)
FULLDATA$SM_Partisan_W4 <- as.numeric(FULLDATA$SM_Partisan_W4)


vars_to_transform <- c(
  "TV_Partisan_W1", "TV_Partisan_W2", "TV_Partisan_W3", "TV_Partisan_W4",
  "NP_NA_Partisan_W1", "NP_NA_Partisan_W2", "NP_NA_Partisan_W3", "NP_NA_Partisan_W4",
  "TR_Partisan_W1", "TR_Partisan_W2", "TR_Partisan_W3", "TR_Partisan_W4",
  "PODCAST_Partisan_W1", "PODCAST_Partisan_W2", "PODCAST_Partisan_W3", "PODCAST_Partisan_W4",
  "SM_Partisan_W1", "SM_Partisan_W2", "SM_Partisan_W3", "SM_Partisan_W4"
)

# Loop through each variable and perform the transformation
for (var in vars_to_transform) {
  # Identify NAs in the variable
  na_indices <- is.na(FULLDATA[[var]])
  
  # Exclude NAs from min-max scaling
  if (any(!na_indices)) {
    min_val <- min(FULLDATA[[var]], na.rm = TRUE)
    max_val <- max(FULLDATA[[var]], na.rm = TRUE)
    
    # Min-max scaling to transform the variable to a scale from 1 to 11
    FULLDATA[[var]][!na_indices] <- round(1 + 10 * (FULLDATA[[var]][!na_indices] - min_val) / (max_val - min_val))
  }
}


## Political Orientation and Supported Political Party (W1 - W4)
FULLDATA$Pol_Orientation_W1 <- as.numeric(FULLDATA$Pol_Orientation_W1)
FULLDATA$Pol_Orientation_W2 <- as.numeric(FULLDATA$Pol_Orientation_W2)
FULLDATA$Pol_Orientation_W3 <- as.numeric(FULLDATA$Pol_Orientation_W3)
FULLDATA$Pol_Orientation_W4 <- as.numeric(FULLDATA$Pol_Orientation_W4)

FULLDATA$Pol_Party_sup_W1 <- as.numeric(FULLDATA$Pol_Party_sup_W1)
FULLDATA$Pol_Party_sup_W2 <- as.numeric(FULLDATA$Pol_Party_sup_W2)
FULLDATA$Pol_Party_sup_W3 <- as.numeric(FULLDATA$Pol_Party_sup_W3)
FULLDATA$Pol_Party_sup_W4 <- as.numeric(FULLDATA$Pol_Party_sup_W4)
FULLDATA$Pol_Party_com_W1 <- as.numeric(FULLDATA$Pol_Party_com_W1)
FULLDATA$Pol_Party_com_W2 <- as.numeric(FULLDATA$Pol_Party_com_W2)
FULLDATA$Pol_Party_com_W3 <- as.numeric(FULLDATA$Pol_Party_com_W3)
FULLDATA$Pol_Party_com_W4 <- as.numeric(FULLDATA$Pol_Party_com_W4)
FULLDATA$Pol_Party_ties_W1 <- as.numeric(FULLDATA$Pol_Party_ties_W1)
FULLDATA$Pol_Party_ties_W2 <- as.numeric(FULLDATA$Pol_Party_ties_W2)
FULLDATA$Pol_Party_ties_W3 <- as.numeric(FULLDATA$Pol_Party_ties_W3)
FULLDATA$Pol_Party_ties_W4 <- as.numeric(FULLDATA$Pol_Party_ties_W4)


## Vote intent and election win certainty
FULLDATA$Vote_Intent <- as.factor(FULLDATA$Vote_Intent)
FULLDATA$Election_Win <- as.factor(FULLDATA$Election_Win)
FULLDATA$Election_Win_Certain_1 <- as.numeric(FULLDATA$Election_Win_Certain_1)

## Subjective SES (W1 - W4)
FULLDATA$Subjective_SES_W1 <- as.numeric(FULLDATA$Subjective_SES_W1)
FULLDATA$Subjective_SES_W2 <- as.numeric(FULLDATA$Subjective_SES_W2)
FULLDATA$Subjective_SES_W3 <- as.numeric(FULLDATA$Subjective_SES_W3)
FULLDATA$Subjective_SES_W4 <- as.numeric(FULLDATA$Subjective_SES_W4)


## Education
FULLDATA$Education <- as.numeric(FULLDATA$Education)

## Personal and societal optimism (W1 - W4)
FULLDATA$General_Optimism_W1_1 <- as.numeric(FULLDATA$General_Optimism_W1_1)
FULLDATA$General_Optimism_W1_2 <- as.numeric(FULLDATA$General_Optimism_W1_2)
FULLDATA$General_Optimism_W2_1 <- as.numeric(FULLDATA$General_Optimism_W2_1)
FULLDATA$General_Optimism_W2_2 <- as.numeric(FULLDATA$General_Optimism_W2_2)
FULLDATA$General_Optimism_W3_1 <- as.numeric(FULLDATA$General_Optimism_W3_1)
FULLDATA$General_Optimism_W3_2 <- as.numeric(FULLDATA$General_Optimism_W3_2)
FULLDATA$General_Optimism_W4_1 <- as.numeric(FULLDATA$General_Optimism_W4_1)
FULLDATA$General_Optimism_W4_2 <- as.numeric(FULLDATA$General_Optimism_W4_2)

## Governmental Distrust (W1 - W4)
FULLDATA$Distrust_W1_1 <- as.numeric(FULLDATA$Distrust_W1_1)
FULLDATA$Distrust_W1_2 <- as.numeric(FULLDATA$Distrust_W1_2)
FULLDATA$Distrust_W1_3 <- as.numeric(FULLDATA$Distrust_W1_3)
FULLDATA$Distrust_W1_4 <- as.numeric(FULLDATA$Distrust_W1_4)
FULLDATA$Distrust_W1_5 <- as.numeric(FULLDATA$Distrust_W1_5)
FULLDATA$Distrust_W1_6 <- as.numeric(FULLDATA$Distrust_W1_6)
FULLDATA$Distrust_W1_7 <- as.numeric(FULLDATA$Distrust_W1_7)
FULLDATA$Distrust_W1_8 <- as.numeric(FULLDATA$Distrust_W1_8)
FULLDATA$Distrust_W1_9 <- as.numeric(FULLDATA$Distrust_W1_9)
FULLDATA$Distrust_W2_1 <- as.numeric(FULLDATA$Distrust_W2_1)
FULLDATA$Distrust_W2_2 <- as.numeric(FULLDATA$Distrust_W2_2)
FULLDATA$Distrust_W2_3 <- as.numeric(FULLDATA$Distrust_W2_3)
FULLDATA$Distrust_W2_4 <- as.numeric(FULLDATA$Distrust_W2_4)
FULLDATA$Distrust_W2_5 <- as.numeric(FULLDATA$Distrust_W2_5)
FULLDATA$Distrust_W2_6 <- as.numeric(FULLDATA$Distrust_W2_6)
FULLDATA$Distrust_W2_7 <- as.numeric(FULLDATA$Distrust_W2_7)
FULLDATA$Distrust_W2_8 <- as.numeric(FULLDATA$Distrust_W2_8)
FULLDATA$Distrust_W2_9 <- as.numeric(FULLDATA$Distrust_W2_9)
FULLDATA$Distrust_W3_1 <- as.numeric(FULLDATA$Distrust_W3_1)
FULLDATA$Distrust_W3_2 <- as.numeric(FULLDATA$Distrust_W3_2)
FULLDATA$Distrust_W3_3 <- as.numeric(FULLDATA$Distrust_W3_3)
FULLDATA$Distrust_W3_4 <- as.numeric(FULLDATA$Distrust_W3_4)
FULLDATA$Distrust_W3_5 <- as.numeric(FULLDATA$Distrust_W3_5)
FULLDATA$Distrust_W3_6 <- as.numeric(FULLDATA$Distrust_W3_6)
FULLDATA$Distrust_W3_7 <- as.numeric(FULLDATA$Distrust_W3_7)
FULLDATA$Distrust_W3_8 <- as.numeric(FULLDATA$Distrust_W3_8)
FULLDATA$Distrust_W3_9 <- as.numeric(FULLDATA$Distrust_W3_9)
FULLDATA$Distrust_W4_1 <- as.numeric(FULLDATA$Distrust_W4_1)
FULLDATA$Distrust_W4_2 <- as.numeric(FULLDATA$Distrust_W4_2)
FULLDATA$Distrust_W4_3 <- as.numeric(FULLDATA$Distrust_W4_3)
FULLDATA$Distrust_W4_4 <- as.numeric(FULLDATA$Distrust_W4_4)
FULLDATA$Distrust_W4_5 <- as.numeric(FULLDATA$Distrust_W4_5)
FULLDATA$Distrust_W4_6 <- as.numeric(FULLDATA$Distrust_W4_6)
FULLDATA$Distrust_W4_7 <- as.numeric(FULLDATA$Distrust_W4_7)
FULLDATA$Distrust_W4_8 <- as.numeric(FULLDATA$Distrust_W4_8)
FULLDATA$Distrust_W4_9 <- as.numeric(FULLDATA$Distrust_W4_9)

## Vote Behavior and Election results affect/impact
FULLDATA$Vote_Behavior_W2 <- as.factor(FULLDATA$Vote_Behavior_W2)
FULLDATA$Vote_Party_W2 <- as.factor(FULLDATA$Vote_Party_W2)

FULLDATA$Election_JAWS_W2_1 <- as.numeric(FULLDATA$Election_JAWS_W2_1)
FULLDATA$Election_JAWS_W2_2 <- as.numeric(FULLDATA$Election_JAWS_W2_2)
FULLDATA$Election_JAWS_W2_3 <- as.numeric(FULLDATA$Election_JAWS_W2_3)
FULLDATA$Election_JAWS_W3_1 <- as.numeric(FULLDATA$Election_JAWS_W3_1)
FULLDATA$Election_JAWS_W3_2 <- as.numeric(FULLDATA$Election_JAWS_W3_2)
FULLDATA$Election_JAWS_W3_3 <- as.numeric(FULLDATA$Election_JAWS_W3_3)
FULLDATA$Election_JAWS_W4_1 <- as.numeric(FULLDATA$Election_JAWS_W4_1)
FULLDATA$Election_JAWS_W4_2 <- as.numeric(FULLDATA$Election_JAWS_W4_2)
FULLDATA$Election_JAWS_W4_3 <- as.numeric(FULLDATA$Election_JAWS_W4_3)

FULLDATA <- FULLDATA %>%
  mutate(
    Election_JAWS_W2_2 = recode(Election_JAWS_W2_2, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    Election_JAWS_W2_3 = recode(Election_JAWS_W2_3, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    Election_JAWS_W3_2 = recode(Election_JAWS_W3_2, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    Election_JAWS_W3_3 = recode(Election_JAWS_W3_3, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    Election_JAWS_W4_2 = recode(Election_JAWS_W4_2, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    Election_JAWS_W4_3 = recode(Election_JAWS_W4_3, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1)
  )

FULLDATA$Election_IMP_W2_1 <- as.numeric(FULLDATA$Election_IMP_W2_1)
FULLDATA$Election_IMP_W2_2 <- as.numeric(FULLDATA$Election_IMP_W2_2)
FULLDATA$Election_IMP_W2_3 <- as.numeric(FULLDATA$Election_IMP_W2_3)
FULLDATA$Election_IMP_W2_4 <- as.numeric(FULLDATA$Election_IMP_W2_4)
FULLDATA$Election_Imp_W3_1 <- as.numeric(FULLDATA$Election_Imp_W3_1)
FULLDATA$Election_Imp_W3_2 <- as.numeric(FULLDATA$Election_Imp_W3_2)
FULLDATA$Election_Imp_W3_3 <- as.numeric(FULLDATA$Election_Imp_W3_3)
FULLDATA$Election_Imp_W3_4 <- as.numeric(FULLDATA$Election_Imp_W3_4)
FULLDATA$Election_IMP_W4_1 <- as.numeric(FULLDATA$Election_IMP_W4_1)
FULLDATA$Election_IMP_W4_2 <- as.numeric(FULLDATA$Election_IMP_W4_2)
FULLDATA$Election_IMP_W4_3 <- as.numeric(FULLDATA$Election_IMP_W4_3)
FULLDATA$Election_IMP_W4_4 <- as.numeric(FULLDATA$Election_IMP_W4_4)

FULLDATA$CEN_Event_Feel_Code_W1 <- as.factor(FULLDATA$CEN_Event_Feel_Code_W1)
FULLDATA$CEN_Event_Feel_Code_W2 <- as.factor(FULLDATA$CEN_Event_Feel_Code_W2)
FULLDATA$CEN_Event_Feel_Code_W3 <- as.factor(FULLDATA$CEN_Event_Feel_Code_W3)
FULLDATA$CEN_Event_Feel_Code_W4 <- as.factor(FULLDATA$CEN_Event_Feel_Code_W4)

FULLDATA$CEN_GOV_Response_W1 <- as.numeric(FULLDATA$CEN_GOV_Response_W1)
FULLDATA$CEN_GOV_Response_W2 <- as.numeric(FULLDATA$CEN_GOV_Response_W2)
FULLDATA$CEN_GOV_Response_W3 <- as.numeric(FULLDATA$CEN_GOV_Response_W3)
FULLDATA$CEN_GOV_Response_W4 <- as.numeric(FULLDATA$CEN_GOV_Response_W4)


## Emotional Appraisal 
## Reverse coding negative emotional items per instructions from
## https://paulspector.com/assessments/pauls-no-cost-assessments/job-related-affective-well-being-scale-jaws/


FULLDATA <- FULLDATA %>%
  mutate(
    CEN_JAWS_W1_2 = recode(CEN_JAWS_W1_2, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    CEN_JAWS_W1_3 = recode(CEN_JAWS_W1_3, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    CEN_JAWS_W2_2 = recode(CEN_JAWS_W2_2, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    CEN_JAWS_W2_3 = recode(CEN_JAWS_W2_3, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1), 
    CEN_JAWS_W3_2 = recode(CEN_JAWS_W3_2, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    CEN_JAWS_W3_3 = recode(CEN_JAWS_W3_3, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    CEN_JAWS_W4_2 = recode(CEN_JAWS_W4_2, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1),
    CEN_JAWS_W4_3 = recode(CEN_JAWS_W4_3, '1' = 5, '2' = 4, '3' = 3, '4' = 2, '5' = 1)
  )

## Political Efficacy (internal and external - items 1-4 = internal and items 5 - 7 = external)
## Internal Political Efficacy 
FULLDATA$POL_EFFICACY_W4_1 <- as.numeric(FULLDATA$POL_EFFICACY_W4_1)
FULLDATA$POL_EFFICACY_W4_2 <- as.numeric(FULLDATA$POL_EFFICACY_W4_2)
FULLDATA$POL_EFFICACY_W4_3 <- as.numeric(FULLDATA$POL_EFFICACY_W4_3)
FULLDATA$POL_EFFICACY_W4_4 <- as.numeric(FULLDATA$POL_EFFICACY_W4_4)

## External political efficacy
FULLDATA$POL_EFFICACY_W4_5 <- as.numeric(FULLDATA$POL_EFFICACY_W4_5)
FULLDATA$POL_EFFICACY_W4_6 <- as.numeric(FULLDATA$POL_EFFICACY_W4_6)
FULLDATA$POL_EFFICACY_W4_7 <- as.numeric(FULLDATA$POL_EFFICACY_W4_7)

FULLDATA <- FULLDATA %>%
      mutate(
            POL_EFFICACY_W4_5 = recode(POL_EFFICACY_W4_5, '1' = 7, '2' = 6, '3' = 5, '4' = 4, 
                                       '5' = 3, '6' = 2, '7' = 1), 
            POL_EFFICACY_W4_6 = recode(POL_EFFICACY_W4_6, '1' = 7, '2' = 6, '3' = 5, '4' = 4, 
                                       '5' = 3, '6' = 2, '7' = 1),
            POL_EFFICACY_W4_7 = recode(POL_EFFICACY_W4_7, '1' = 7, '2' = 6, '3' = 5, '4' = 4, 
                                       '5' = 3, '6' = 2, '7' = 1)
      )

FULLDATA <- FULLDATA %>%
      mutate(INTERNAL_PE_W4 = rowMeans(select(., POL_EFFICACY_W4_1, POL_EFFICACY_W4_2, POL_EFFICACY_W4_3,
                                              POL_EFFICACY_W4_4)))

FULLDATA <- FULLDATA %>%
      mutate(EXTERNAL_PE_W4 = rowMeans(select(., POL_EFFICACY_W4_5, POL_EFFICACY_W4_6, POL_EFFICACY_W4_7)))

## Societal Optimism 
FULLDATA <- FULLDATA %>%
      mutate(SO_W1 = rowMeans(select(., General_Optimism_W1_1, General_Optimism_W1_2), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(SO_W2 = rowMeans(select(., General_Optimism_W2_1, General_Optimism_W2_2), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(SO_W3 = rowMeans(select(., General_Optimism_W3_1, General_Optimism_W3_2), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(SO_W4 = rowMeans(select(., General_Optimism_W4_1, General_Optimism_W4_2), na.rm = T))

## Political Party Identity Importance
FULLDATA <- FULLDATA %>%
      mutate(PPII_W1 = rowMeans(select(., Pol_Party_sup_W1,
                                       Pol_Party_com_W1, 
                                       Pol_Party_ties_W1), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PPII_W2 = rowMeans(select(., Pol_Party_sup_W2,
                                       Pol_Party_com_W2, 
                                       Pol_Party_ties_W2), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PPII_W3 = rowMeans(select(., Pol_Party_sup_W3,
                                       Pol_Party_com_W3, 
                                       Pol_Party_ties_W3), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PPII_W4 = rowMeans(select(., Pol_Party_sup_W4,
                                       Pol_Party_com_W4, 
                                       Pol_Party_ties_W4), na.rm = T))
## Political Media Activity Profile
FULLDATA <- FULLDATA %>%
      mutate(PMAP_W1 = rowMeans(select(., MASS_MEDIA_1_W1, MASS_MEDIA_2_W1,
                                       MASS_MEDIA_3_W1, MASS_MEDIA_4_W1,
                                       MASS_MEDIA_5_W1, MASS_MEDIA_6_W1, 
                                       MASS_MEDIA_7_W1), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PMAP_W2 = rowMeans(select(., MASS_MEDIA_1_W2, MASS_MEDIA_2_W2,
                                       MASS_MEDIA_3_W2, MASS_MEDIA_4_W2,
                                       MASS_MEDIA_5_W2, MASS_MEDIA_6_W2, 
                                       MASS_MEDIA_7_W2), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PMAP_W3 = rowMeans(select(., MASS_MEDIA_1_W3, MASS_MEDIA_2_W3,
                                       MASS_MEDIA_3_W3, MASS_MEDIA_4_W3,
                                       MASS_MEDIA_5_W3, MASS_MEDIA_6_W3, 
                                       MASS_MEDIA_7_W3), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PMAP_W4 = rowMeans(select(., MASS_MEDIA_1_W4, MASS_MEDIA_2_W4,
                                       MASS_MEDIA_3_W4, MASS_MEDIA_4_W4,
                                       MASS_MEDIA_5_W4, MASS_MEDIA_6_W4, 
                                       MASS_MEDIA_7_W4), na.rm = T))

## Event Impact
FULLDATA <- FULLDATA %>%
      mutate(EI_W1 = rowMeans(select(., CEN_EVENT_IMP_W1_1, CEN_EVENT_IMP_W1_2 ,CEN_EVENT_IMP_W1_3), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EI_W2 = rowMeans(select(., Election_IMP_W2_1, Election_IMP_W2_2, Election_IMP_W2_3, Election_IMP_W2_4)
                              , na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EI_W3 = rowMeans(select(., Election_Imp_W3_1, Election_Imp_W3_2 ,Election_Imp_W3_3, Election_Imp_W3_4)
                              , na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EI_W4 = rowMeans(select(., Election_IMP_W4_1, Election_IMP_W4_2, Election_IMP_W4_3, Election_IMP_W4_4),
                              na.rm = T))
#FULLDATA <- FULLDATA %>%
 #     mutate(EI_W1 = rowMeans(select(., CEN_EVENT_IMP_W1_1, CEN_EVENT_IMP_W1_2 ,CEN_EVENT_IMP_W1_3), na.rm = T))

#FULLDATA <- FULLDATA %>%
 #     mutate(EI_W2 = rowMeans(select(., CEN_EVENT_IMP_W2_1, CEN_EVENT_IMP_W2_2, CEN_EVENT_IMP_W2_3), na.rm = T))

#FULLDATA <- FULLDATA %>%
 #     mutate(EI_W3 = rowMeans(select(., CEN_EVENT_IMP_W3_1, CEN_EVENT_IMP_W3_2 ,CEN_EVENT_IMP_W3_3), na.rm = T))

#FULLDATA <- FULLDATA %>%
 #     mutate(EI_W4 = rowMeans(select(., CEN_EVENT_IMP_W4_1, CEN_EVENT_IMP_W4_2, CEN_EVENT_IMP_W4_3), na.rm = T))

## Emotion Appraisal
FULLDATA <- FULLDATA %>%
      mutate(EMOTION_APPRAISAL_W1 = rowMeans(select(., CEN_JAWS_W1_1, CEN_JAWS_W1_2, CEN_JAWS_W1_3), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EMOTION_APPRAISAL_W2 = rowMeans(select(., Election_JAWS_W2_1, Election_JAWS_W2_2, Election_JAWS_W2_3), 
                                             na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EMOTION_APPRAISAL_W3 = rowMeans(select(., Election_JAWS_W3_1, Election_JAWS_W3_2, Election_JAWS_W3_3), 
                                             na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EMOTION_APPRAISAL_W4 = rowMeans(select(., Election_JAWS_W4_1, Election_JAWS_W4_2, Election_JAWS_W4_3), na.rm = T))


#FULLDATA <- FULLDATA %>%
 #     mutate(EMOTION_APPRAISAL_W1 = rowMeans(select(., CEN_JAWS_W1_1, CEN_JAWS_W1_2, CEN_JAWS_W1_3), na.rm = T))

#FULLDATA <- FULLDATA %>%
 #     mutate(EMOTION_APPRAISAL_W2 = rowMeans(select(., CEN_JAWS_W2_1, CEN_JAWS_W2_2, CEN_JAWS_W2_3), na.rm = T))

#FULLDATA <- FULLDATA %>%
 #     mutate(EMOTION_APPRAISAL_W3 = rowMeans(select(., CEN_JAWS_W3_1, CEN_JAWS_W3_2, CEN_JAWS_W3_3), na.rm = T))

#FULLDATA <- FULLDATA %>%
 #     mutate(EMOTION_APPRAISAL_W4 = rowMeans(select(., CEN_JAWS_W4_1, CEN_JAWS_W4_2, CEN_JAWS_W4_3), na.rm = T))

## System Justification
FULLDATA <- FULLDATA %>%
      mutate(SJ_W1 = rowMeans(select(., SJ_W1_1, SJ_W1_2, 
                                     SJ_W1_3, SJ_W1_4),
                              na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(SJ_W2 = rowMeans(select(., SJ_W2_1, SJ_W2_2,
                                     SJ_W2_3, SJ_W2_4),
                              na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(SJ_W3 = rowMeans(select(., SJ_W3_1, SJ_W3_2, 
                                     SJ_W3_3, SJ_W3_4),
                              na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(SJ_W4 = rowMeans(select(., SJ_W4_1, SJ_W4_2,
                                     SJ_W4_3, SJ_W4_4),
                              na.rm = T))
## Systemic Trust
FULLDATA <- FULLDATA %>%
      mutate(ST_W1 = rowMeans(select(., GTI_W1_1, GTI_W1_2, GTI_W1_3, GTI_W1_4, GTI_W1_5, GTI_W1_6),
                              na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(ST_W2 = rowMeans(select(., GTI_W2_1, GTI_W2_2, GTI_W2_3, GTI_W2_4, GTI_W2_5, GTI_W2_6),
                              na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(ST_W3 = rowMeans(select(., GTI_W3_1, GTI_W3_2, GTI_W3_3, GTI_W3_4, GTI_W3_5, GTI_W3_6),
                              na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(ST_W4 = rowMeans(select(., GTI_W4_1, GTI_W4_2, GTI_W4_3, GTI_W4_4, GTI_W4_5, GTI_W4_6),
                              na.rm = T))

## Governmental Distrust
FULLDATA <- FULLDATA %>%
      mutate(GD_W1 = rowMeans(select(., Distrust_W1_1, Distrust_W1_2, Distrust_W1_3, Distrust_W1_4,
                                  Distrust_W1_5, Distrust_W1_6, Distrust_W1_7, Distrust_W1_8,
                                  Distrust_W1_9), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(GD_W2 = rowMeans(select(., Distrust_W2_1, Distrust_W2_2, Distrust_W2_3, Distrust_W2_4,
                                  Distrust_W2_5, Distrust_W2_6, Distrust_W2_7, Distrust_W2_8,
                                  Distrust_W2_9), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(GD_W3 = rowMeans(select(., Distrust_W3_1, Distrust_W3_2, Distrust_W3_3, Distrust_W3_4,
                                  Distrust_W3_5, Distrust_W3_6, Distrust_W3_7, Distrust_W3_8,
                                  Distrust_W3_9), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(GD_W4 = rowMeans(select(., Distrust_W4_1, Distrust_W4_2, Distrust_W4_3, Distrust_W4_4,
                                  Distrust_W4_5, Distrust_W4_6, Distrust_W4_7, Distrust_W4_8,
                                  Distrust_W4_9), na.rm = T))

## General Conspiracy Mentality
FULLDATA <- FULLDATA %>%
      mutate(GCM_W1 = rowMeans(select(., GCM_W1_1, GCM_W1_2, GCM_W1_3, GCM_W1_4, GCM_W1_5, GCM_W1_6),
                               na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(GCM_W2 = rowMeans(select(., GCM_W2_1, GCM_W2_2, GCM_W2_3, GCM_W2_4, GCM_W2_5, GCM_W2_6), 
                               na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(GCM_W3 = rowMeans(select(., GCM_W3_1, GCM_W3_2, GCM_W3_3, GCM_W3_4, GCM_W3_5, GCM_W3_6),
                               na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(GCM_W4 = rowMeans(select(., GCM_W4_1, GCM_W4_2, GCM_W4_3, GCM_W4_4, GCM_W4_5, GCM_W4_6),
                               na.rm = T))

## Political Partisan Media Profile
FULLDATA <- FULLDATA %>%
      mutate(PPMP_W1 = rowMeans(select(., TV_Partisan_W1, NP_NA_Partisan_W1, TR_Partisan_W1, 
                                       PODCAST_Partisan_W1, SM_Partisan_W1), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PPMP_W2 = rowMeans(select(., TV_Partisan_W2, NP_NA_Partisan_W2, TR_Partisan_W2, 
                                       PODCAST_Partisan_W2, SM_Partisan_W2), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PPMP_W3 = rowMeans(select(., TV_Partisan_W3, NP_NA_Partisan_W3, TR_Partisan_W3, 
                                       PODCAST_Partisan_W3, SM_Partisan_W3), na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(PPMP_W4 = rowMeans(select(., TV_Partisan_W4, NP_NA_Partisan_W4, TR_Partisan_W4, 
                                       PODCAST_Partisan_W4, SM_Partisan_W4), na.rm = T))

## Covid-19 conspiracy beliefs
FULLDATA <- FULLDATA %>%
      mutate(CCB_W1 = rowMeans(select(., Covid_CT_W1_1, Covid_CT_W1_2, Covid_CT_W1_3, Covid_CT_W1_4), 
                               na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(CCB_W2 = rowMeans(select(., Covid_CT_W2_1, Covid_CT_W2_2, Covid_CT_W2_3, Covid_CT_W2_4), 
                               na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(CCB_W3 = rowMeans(select(., Covid_CT_W3_1, Covid_CT_W3_2, Covid_CT_W3_3, Covid_CT_W3_4), 
                               na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(CCB_W4 = rowMeans(select(., Covid_CT_W4_1, Covid_CT_W4_2, Covid_CT_W4_3, Covid_CT_W4_4), 
                               na.rm = T))
```

## Assigning numerical codes to qualitative codes (W1 - W4)

## Do not run if analyzying descriptives below

```{r}
FULLDATA$EA_W1 <- ifelse(FULLDATA$CEN_Event_Feel_Code_W1 == "NEGATIVE", 1,
                                   ifelse(FULLDATA$CEN_Event_Feel_Code_W1 == "NEUTRAL", 0,
                                          ifelse(FULLDATA$CEN_Event_Feel_Code_W1 == "POSITIVE", -1,
                                                 as.character(FULLDATA$CEN_Event_Feel_Code_W1))))

FULLDATA$EA_W2 <- ifelse(FULLDATA$CEN_Event_Feel_Code_W2 == "NEGATIVE", 1,
                                   ifelse(FULLDATA$CEN_Event_Feel_Code_W2 == "NEUTRAL", 0,
                                          ifelse(FULLDATA$CEN_Event_Feel_Code_W2 == "POSITIVE", -1,
                                                 as.character(FULLDATA$CEN_Event_Feel_Code_W2))))

FULLDATA$EA_W3 <- ifelse(FULLDATA$CEN_Event_Feel_Code_W3 == "NEGATIVE", 1,
                                   ifelse(FULLDATA$CEN_Event_Feel_Code_W3 == "NEUTRAL", 0,
                                          ifelse(FULLDATA$CEN_Event_Feel_Code_W3 == "POSITIVE", -1,
                                                 as.character(FULLDATA$CEN_Event_Feel_Code_W3))))

FULLDATA$EA_W4 <- ifelse(FULLDATA$CEN_Event_Feel_Code_W4 == "NEGATIVE", 1,
                                   ifelse(FULLDATA$CEN_Event_Feel_Code_W4 == "NEUTRAL", 0,
                                          ifelse(FULLDATA$CEN_Event_Feel_Code_W4 == "POSITIVE", -1,
                                                 as.character(FULLDATA$CEN_Event_Feel_Code_W4))))

FULLDATA$EA_W1 <- as.numeric(FULLDATA$EA_W1)
FULLDATA$EA_W2 <- as.numeric(FULLDATA$EA_W2)
FULLDATA$EA_W3 <- as.numeric(FULLDATA$EA_W3)
FULLDATA$EA_W4 <- as.numeric(FULLDATA$EA_W4)

FULLDATA$Event_W1 <- ifelse(FULLDATA$CEN_Event_Code_W1 == "CLIMATE CHANGE", 1,
                            ifelse(FULLDATA$CEN_Event_Code_W1 == "COVID-19", 2,
                                   ifelse(FULLDATA$CEN_Event_Code_W1 == "ECONOMY", 3,
                                          ifelse(FULLDATA$CEN_Event_Code_W1 == "POLITICS", 4,
                                                 as.character(FULLDATA$CEN_Event_Code_W1)))))

FULLDATA$Event_W2 <- ifelse(FULLDATA$CEN_Event_Code_W2 == "CLIMATE CHANGE", 1,
                            ifelse(FULLDATA$CEN_Event_Code_W2 == "COVID-19", 2,
                                   ifelse(FULLDATA$CEN_Event_Code_W2 == "ECONOMY", 3,
                                          ifelse(FULLDATA$CEN_Event_Code_W2 == "POLITICS", 4,
                                                 as.character(FULLDATA$CEN_Event_Code_W2)))))

FULLDATA$Event_W3 <- ifelse(FULLDATA$CEN_Event_Code_W3 == "CLIMATE CHANGE", 1,
                            ifelse(FULLDATA$CEN_Event_Code_W3 == "COVID-19", 2,
                                   ifelse(FULLDATA$CEN_Event_Code_W3 == "ECONOMY", 3,
                                          ifelse(FULLDATA$CEN_Event_Code_W3 == "POLITICS", 4,
                                                 as.character(FULLDATA$CEN_Event_Code_W3)))))

FULLDATA$Event_W4 <- ifelse(FULLDATA$CEN_Event_Code_W4 == "CLIMATE CHANGE", 1,
                            ifelse(FULLDATA$CEN_Event_Code_W4 == "COVID-19", 2,
                                   ifelse(FULLDATA$CEN_Event_Code_W4 == "ECONOMY", 3,
                                          ifelse(FULLDATA$CEN_Event_Code_W4 == "POLITICS", 4,
                                                 as.character(FULLDATA$CEN_Event_Code_W4)))))

FULLDATA$CEN_Event_Code_W1 <- as.factor(FULLDATA$CEN_Event_Code_W1)
FULLDATA$CEN_Event_Code_W2 <- as.factor(FULLDATA$CEN_Event_Code_W2)
FULLDATA$CEN_Event_Code_W3 <- as.factor(FULLDATA$CEN_Event_Code_W3)
FULLDATA$CEN_Event_Code_W4 <- as.factor(FULLDATA$CEN_Event_Code_W4)
FULLDATA$Event_W1 <- as.numeric(FULLDATA$Event_W1)
FULLDATA$Event_W2 <- as.numeric(FULLDATA$Event_W2)
FULLDATA$Event_W3 <- as.numeric(FULLDATA$Event_W3)
FULLDATA$Event_W4 <- as.numeric(FULLDATA$Event_W4)

FULLDATA$Media_Type <- ifelse(FULLDATA$MM_USE_CODE == "OLD MEDIA", 0,
                              ifelse(FULLDATA$MM_USE_CODE == "NEW MEDIA", 1,
                                     as.character(FULLDATA$MM_USE_CODE)))

FULLDATA$Media_Type <- as.numeric(FULLDATA$Media_Type)
```

## Creating Factor like political orientation variable right vs left leaning

## turning event codes into factors/groups to explore descriptive differences

```{r}
## Creating new variable that converts political orientation from a continuous variable to a factor (left vs right)
FULLDATA$Pol_Orientation_W1[FULLDATA$Pol_Orientation_W1 == 12] <- 11
FULLDATA$Pol_Orientation_W2[FULLDATA$Pol_Orientation_W2 == 12] <- 11
FULLDATA$Pol_Orientation_W3[FULLDATA$Pol_Orientation_W3 == 12] <- 11
FULLDATA$Pol_Orientation_W4[FULLDATA$Pol_Orientation_W4 == 12] <- 11


FULLDATA$Political_Orientation_group_W1 <- cut(FULLDATA$Pol_Orientation_W1, 
                                               breaks = c(-Inf, 6.5, Inf), 
                                               labels = c("Right Leaning", "Left Leaning"), 
                                               include.lowest = TRUE)

FULLDATA$Political_Orientation_group_W1 <- as.factor(FULLDATA$Political_Orientation_group_W1)

FULLDATA$Political_Orientation_group_W2 <- cut(FULLDATA$Pol_Orientation_W2, 
                                               breaks = c(-Inf, 6.5, Inf), 
                                               labels = c("Right Leaning", "Left Leaning"), 
                                               include.lowest = TRUE)

FULLDATA$Political_Orientation_group_W2 <- as.factor(FULLDATA$Political_Orientation_group_W2)

FULLDATA$Political_Orientation_group_W3 <- cut(FULLDATA$Pol_Orientation_W3, 
                                               breaks = c(-Inf, 6.5, Inf), 
                                               labels = c("Right Leaning", "Left Leaning"), 
                                               include.lowest = TRUE)

FULLDATA$Political_Orientation_group_W3 <- as.factor(FULLDATA$Political_Orientation_group_W3)

FULLDATA$Political_Orientation_group_W4 <- cut(FULLDATA$Pol_Orientation_W4, 
                                               breaks = c(-Inf, 6.5, Inf), 
                                               labels = c("Right Leaning", "Left Leaning"), 
                                               include.lowest = TRUE)

FULLDATA$Political_Orientation_group_W4 <- as.factor(FULLDATA$Political_Orientation_group_W4)

FULLDATA$CEN_Event_Code_W1 <- as.factor(FULLDATA$CEN_Event_Code_W1)
FULLDATA$CEN_Event_Code_W2 <- as.factor(FULLDATA$CEN_Event_Code_W2)
FULLDATA$CEN_Event_Code_W3 <- as.factor(FULLDATA$CEN_Event_Code_W3)
FULLDATA$CEN_Event_Code_W4 <- as.factor(FULLDATA$CEN_Event_Code_W4)
```

## Getting descriptive statistics of sample at W1

```{r}
FULLDATA$Gender <- as.factor(FULLDATA$Gender)
FULLDATA$Gender2 <- factor(FULLDATA$Gender, levels = c(1, 2, 3),
                              labels = c("Male", "Female", "Non-Binary"))

FULLDATA$Pol_Party_W1 <- as.factor(FULLDATA$Pol_Party_W1)
FULLDATA$Pol_Party2_W1 <- factor(FULLDATA$Pol_Party_W1, levels = c(1, 2, 3, 4, 5, 6, 7, 8),
                                 labels = c("Labour", "National", "Greens", "ACT", "NZ First",
                                            "Māori Party", "TOP", "Other"))

FULLDATA$Pol_Party_W2 <- as.factor(FULLDATA$Pol_Party_W2)
FULLDATA$Pol_Party2_W2 <- factor(FULLDATA$Pol_Party_W2, levels = c(1, 2, 3, 4, 5, 6, 7, 8),
                                 labels = c("Labour", "National", "Greens", "ACT", "NZ First",
                                            "Māori Party", "TOP", "Other"))

FULLDATA$Pol_Party_W3 <- as.factor(FULLDATA$Pol_Party_W3)
FULLDATA$Pol_Party2_W3 <- factor(FULLDATA$Pol_Party_W3, levels = c(1, 2, 3, 4, 5, 6, 7, 8),
                                 labels = c("Labour", "National", "Greens", "ACT", "NZ First",
                                            "Māori Party", "TOP", "Other"))

FULLDATA$Pol_Party_W4 <- as.factor(FULLDATA$Pol_Party_W4)
FULLDATA$Pol_Party2_W4 <- factor(FULLDATA$Pol_Party_W4, levels = c(1, 2, 3, 4, 5, 6, 7, 8),
                                 labels = c("Labour", "National", "Greens", "ACT", "NZ First",
                                            "Māori Party", "TOP", "Other"))

FULLDATA$Age <- as.numeric(FULLDATA$Age)
FULLDATA$Education <- as.factor(FULLDATA$Education)

summary(FULLDATA$Gender2)
summary(FULLDATA$Age)
summary(FULLDATA$Education)
summary(FULLDATA$Pol_Party2_W1)
summary(FULLDATA$Pol_Party2_W2)
summary(FULLDATA$Pol_Party2_W3)
summary(FULLDATA$Pol_Party2_W4)
summary(FULLDATA$Subjective_SES_W1)

summary(FULLDATA$CEN_Event_Code_W1)
summary(FULLDATA$CEN_Event_Code_W2)
summary(FULLDATA$CEN_Event_Code_W3)
summary(FULLDATA$CEN_Event_Code_W4)



prop.table(table(FULLDATA$Gender2))
prop.table(table(FULLDATA$Education))


# Assuming 'Political_Orientation_group_W1' is a factor variable
prop.table(table(FULLDATA$Political_Orientation_group_W1))
prop.table(table(FULLDATA$Political_Orientation_group_W2))
prop.table(table(FULLDATA$Political_Orientation_group_W3))
prop.table(table(FULLDATA$Political_Orientation_group_W4))

prop.table(table(FULLDATA$Pol_Party2_W1))
prop.table(table(FULLDATA$Pol_Party2_W2))
prop.table(table(FULLDATA$Pol_Party2_W3))
prop.table(table(FULLDATA$Pol_Party2_W4))
```


# Calculating Cronbach alpha for all scales of interest at w = 1

```{r}
library(ltm)

## Societal Optimism (.72)
cronbachalphaSO <- subset(FULLDATA,
                          select = c(General_Optimism_W1_1, General_Optimism_W1_2))
cronbach.alpha(cronbachalphaSO, na.rm = T)

## Political Party Identity Importance (.90)
cronbachalphaPPII <- subset(FULLDATA,
                            select = c(Pol_Party_sup_W1, Pol_Party_com_W1, Pol_Party_ties_W1 ))
cronbach.alpha(cronbachalphaPPII, na.rm = T)

## Political Media Activity Profile (.62)
cronbachalphaPMAP <- subset(FULLDATA, 
                            select = c(MASS_MEDIA_1_W1, MASS_MEDIA_2_W1, MASS_MEDIA_3_W1,
                                       MASS_MEDIA_4_W1, MASS_MEDIA_5_W1, MASS_MEDIA_6_W1,
                                       MASS_MEDIA_7_W1))
cronbach.alpha(cronbachalphaPMAP, na.rm = T)

## Event Impact (.61)
cronbachalphaEI <- subset(FULLDATA,
                          select = c(CEN_EVENT_IMP_W1_1, CEN_EVENT_IMP_W1_2, CEN_EVENT_IMP_W1_3))
cronbach.alpha(cronbachalphaEI, na.rm = T)

## Emotion Appraisal (.79)
cronbachalphaEA <- subset(FULLDATA,
                          select = c(CEN_JAWS_W1_1, CEN_JAWS_W1_2, CEN_JAWS_W1_3))
cronbach.alpha(cronbachalphaEA, na.rm = T)

## System Justification (.82)
cronbachalphaSJ <- subset(FULLDATA, 
                          select = c(SJ_W1_1, SJ_W1_2, SJ_W1_3, SJ_W1_4))
cronbach.alpha(cronbachalphaSJ, na.rm = T)

## Systemic Trust (.83)
cronbachalphaST <- subset(FULLDATA,
                          select = c(GTI_W1_1, GTI_W1_2, GTI_W1_3, GTI_W1_4, GTI_W1_5, GTI_W1_6))
cronbach.alpha(cronbachalphaST, na.rm = T)

## Governmental Distrust (.79)
cronbachalphaGD <- subset(FULLDATA,
                          select = c(Distrust_W1_1, Distrust_W1_2, Distrust_W1_3, Distrust_W1_4,
                                     Distrust_W1_5, Distrust_W1_6, Distrust_W1_7, Distrust_W1_8,
                                     Distrust_W1_9))
cronbach.alpha(cronbachalphaGD, na.rm = T)

## General Conspiracy Mentality (.87)
cronbachalphaGCM <- subset(FULLDATA,
                           select = c(GCM_W1_1, GCM_W1_2, GCM_W1_3, GCM_W1_4, GCM_W1_5, GCM_W1_6))
cronbach.alpha(cronbachalphaGCM, na.rm = T)

## Political Partisan Media Profile (.98)
cronbachalphaPPMP <- subset(FULLDATA,
                            select = c(SM_Partisan_W1, PODCAST_Partisan_W1, TV_Partisan_W1, 
                                       NP_NA_Partisan_W1, TR_Partisan_W1))
cronbach.alpha(cronbachalphaPPMP, na.rm = T)

## Covid conspiracy beliefs (.92)
cronbachalphaCCB <- subset(FULLDATA, 
                           select = c(Covid_CT_W1_1, Covid_CT_W1_2, Covid_CT_W1_3, Covid_CT_W1_4))
cronbach.alpha(cronbachalphaCCB, na.rm = T)

## Internal Political efficacy (.89)
cronbachalphaIPE <- subset(FULLDATA,
                           select = c(POL_EFFICACY_W4_1, POL_EFFICACY_W4_2, POL_EFFICACY_W4_3, POL_EFFICACY_W4_4))
cronbach.alpha(cronbachalphaIPE, na.rm = T)

## External political efficacy (.85)
cronbachalphaEPE <- subset(FULLDATA,
                           select = c(POL_EFFICACY_W4_5, POL_EFFICACY_W4_6, POL_EFFICACY_W4_7))
cronbach.alpha(cronbachalphaEPE, na.rm = T)

```

## EXPLORATORY MANOVA ANALYSIS

## Grouping variables - media type and coded events

```{r}
library(effectsize)
attach(FULLDATA)

YVARS_W1 <- cbind(SJ_W1, GCM_W1, CCB_W1, CEN_GOV_Response_W1, ST_W1, GD_W1)
YVARS_W2 <- cbind(SJ_W2, GCM_W2, CCB_W2, CEN_GOV_Response_W2, ST_W2, GD_W2)
YVARS_W3 <- cbind(SJ_W3, GCM_W3, CCB_W3, CEN_GOV_Response_W3, ST_W3, GD_W3)
YVARS_W4 <- cbind(SJ_W4, GCM_W4, CCB_W4, CEN_GOV_Response_W4, ST_W4, GD_W4)

EVENT_FACTOR_W1 <- factor(CEN_Event_Code_W1) 
EVENT_FACTOR_W2 <- factor(CEN_Event_Code_W2)
EVENT_FACTOR_W3 <- factor(CEN_Event_Code_W3)
EVENT_FACTOR_W4 <- factor(CEN_Event_Code_W4)
MEDIA_FACTOR <- factor(MM_USE_CODE)
PO_FACTOR_W1 <- factor(Political_Orientation_group_W1)
PO_FACTOR_W2 <- factor(Political_Orientation_group_W2)
PO_FACTOR_W3 <- factor(Political_Orientation_group_W3)
PO_FACTOR_W4 <- factor(Political_Orientation_group_W4)

## Event tests
test1 <- manova(YVARS_W1 ~ EVENT_FACTOR_W1 * PO_FACTOR_W1, data = FULLDATA)

summary(test1, test = "Pillai", intercept = T)
summary.aov(test1, intercept = T) 

## calculate eta squared for each individual DV
SJ_eta <- aov(SJ_W1 ~ EVENT_FACTOR_W1*PO_FACTOR_W1, data = FULLDATA)
effectsize::eta_squared(SJ_eta, partial = T)
GCM_eta <- aov(GCM_W1 ~ EVENT_FACTOR_W1*PO_FACTOR_W1, data = FULLDATA)
effectsize::eta_squared(GCM_eta, partial = T)
CCB_eta <- aov(CCB_W1 ~ EVENT_FACTOR_W1*PO_FACTOR_W1, data = FULLDATA)
effectsize::eta_squared(CCB_eta, partial = T)
response_eta <- aov(CEN_GOV_Response_W1 ~ EVENT_FACTOR_W1*PO_FACTOR_W1, data = FULLDATA)
effectsize::eta_squared(response_eta, partial = T)
ST_eta <- aov(ST_W1 ~ EVENT_FACTOR_W1*PO_FACTOR_W1, data = FULLDATA)
effectsize::eta_squared(ST_eta, partial = T)
GD_eta <- aov(GD_W1 ~ EVENT_FACTOR_W1*PO_FACTOR_W1, data = FULLDATA)
effectsize::eta_squared(GD_eta, partial = T)


FULLDATA %>%
        group_by(CEN_Event_Code_W1, Political_Orientation_group_W1) %>%
        summarise(mean = mean(SJ_W1, na.rm = T),
                  sd = sd(SJ_W1, na.rm = T),
                  miss = mean(is.na(SJ_W1)))

FULLDATA %>%
        group_by(CEN_Event_Code_W1, Political_Orientation_group_W1) %>%
        summarise(mean = mean(GCM_W1, na.rm = T),
                  sd = sd(GCM_W1, na.rm = T),
                  miss = mean(is.na(GCM_W1)))
FULLDATA %>%
        group_by(CEN_Event_Code_W1, Political_Orientation_group_W1) %>%
        summarise(mean = mean(CCB_W1, na.rm = T),
                  sd = sd(CCB_W1, na.rm = T),
                  miss = mean(is.na(CCB_W1)))

FULLDATA %>%
      group_by(CEN_Event_Code_W1, Political_Orientation_group_W1) %>%
      summarise(mean = mean(CEN_GOV_Response_W1, na.rm = T),
                sd = sd(CEN_GOV_Response_W1, na.rm = T),
                miss = mean(is.na(CEN_GOV_Response_W1)))

FULLDATA %>%
      group_by(CEN_Event_Code_W1, Political_Orientation_group_W1) %>%
      summarise(mean = mean(ST_W1, na.rm = T),
                sd = sd(ST_W1, na.rm = T),
                miss = mean(is.na(ST_W1)))

FULLDATA %>%
      group_by(CEN_Event_Code_W1, Political_Orientation_group_W1) %>%
      summarise(mean = mean(GD_W1, na.rm = T),
                sd = sd(GD_W1, na.rm = T),
                miss = mean(is.na(GD_W1)))

test2 <- manova(YVARS_W2 ~ EVENT_FACTOR_W2 * PO_FACTOR_W2, data = FULLDATA)
summary(test2, test = "Pillai", intercept = T)
summary.aov(test2, intercept = T)
eta_squared(test2)

SJ_eta <- aov(SJ_W2 ~ EVENT_FACTOR_W2*PO_FACTOR_W2, data = FULLDATA)
effectsize::eta_squared(SJ_eta, partial = T)
GCM_eta <- aov(GCM_W2 ~ EVENT_FACTOR_W2*PO_FACTOR_W2, data = FULLDATA)
effectsize::eta_squared(GCM_eta, partial = T)
CCB_eta <- aov(CCB_W2 ~ EVENT_FACTOR_W2*PO_FACTOR_W2, data = FULLDATA)
effectsize::eta_squared(CCB_eta, partial = T)
response_eta <- aov(CEN_GOV_Response_W2 ~ EVENT_FACTOR_W2*PO_FACTOR_W2, data = FULLDATA)
effectsize::eta_squared(response_eta, partial = T)
ST_eta <- aov(ST_W2 ~ EVENT_FACTOR_W2*PO_FACTOR_W2, data = FULLDATA)
effectsize::eta_squared(ST_eta, partial = T)
GD_eta <- aov(GD_W2 ~ EVENT_FACTOR_W2*PO_FACTOR_W2, data = FULLDATA)
effectsize::eta_squared(GD_eta, partial = T)

FULLDATA %>%
        group_by(CEN_Event_Code_W2, Political_Orientation_group_W2) %>%
        summarise(mean = mean(SJ_W2, na.rm = T),
                  sd = sd(SJ_W2, na.rm = T),
                  miss = mean(is.na(SJ_W2)))
FULLDATA %>%
        group_by(CEN_Event_Code_W2, Political_Orientation_group_W2) %>%
        summarise(mean = mean(GCM_W2, na.rm = T),
                  sd = sd(GCM_W2, na.rm = T),
                  miss = mean(is.na(GCM_W2)))
FULLDATA %>%
        group_by(CEN_Event_Code_W2, Political_Orientation_group_W2) %>%
        summarise(mean = mean(CCB_W2, na.rm = T),
                  sd = sd(CCB_W2, na.rm = T),
                  miss = mean(is.na(CCB_W2)))

FULLDATA %>%
      group_by(CEN_Event_Code_W2, Political_Orientation_group_W2) %>%
      summarise(mean = mean(CEN_GOV_Response_W2, na.rm = T),
                sd = sd(CEN_GOV_Response_W2, na.rm = T),
                miss = mean(is.na(CEN_GOV_Response_W2)))

FULLDATA %>%
      group_by(CEN_Event_Code_W2, Political_Orientation_group_W2) %>%
      summarise(mean = mean(ST_W2, na.rm = T),
                sd = sd(ST_W2, na.rm = T),
                miss = mean(is.na(ST_W2)))

FULLDATA %>%
      group_by(CEN_Event_Code_W2, Political_Orientation_group_W2) %>%
      summarise(mean = mean(GD_W2, na.rm = T),
                sd = sd(GD_W2, na.rm = T),
                miss = mean(is.na(GD_W2)))

test3 <- manova(YVARS_W3 ~ EVENT_FACTOR_W3 * PO_FACTOR_W3, data = FULLDATA)
summary(test3, test = "Pillai", intercept = T)
summary.aov(test3, intercept = T)
eta_squared(test3)

SJ_eta <- aov(SJ_W3 ~ EVENT_FACTOR_W3*PO_FACTOR_W3, data = FULLDATA)
effectsize::eta_squared(SJ_eta, partial = T)
GCM_eta <- aov(GCM_W3 ~ EVENT_FACTOR_W3*PO_FACTOR_W3, data = FULLDATA)
effectsize::eta_squared(GCM_eta, partial = T)
CCB_eta <- aov(CCB_W3 ~ EVENT_FACTOR_W3*PO_FACTOR_W3, data = FULLDATA)
effectsize::eta_squared(CCB_eta, partial = T)
response_eta <- aov(CEN_GOV_Response_W3 ~ EVENT_FACTOR_W3*PO_FACTOR_W3, data = FULLDATA)
effectsize::eta_squared(response_eta, partial = T)
ST_eta <- aov(ST_W3 ~ EVENT_FACTOR_W3*PO_FACTOR_W3, data = FULLDATA)
effectsize::eta_squared(ST_eta, partial = T)
GD_eta <- aov(GD_W3 ~ EVENT_FACTOR_W3*PO_FACTOR_W3, data = FULLDATA)
effectsize::eta_squared(GD_eta, partial = T)

FULLDATA %>%
        group_by(CEN_Event_Code_W3, Political_Orientation_group_W3) %>%
        summarise(mean = mean(SJ_W3, na.rm = T),
                  sd = sd(SJ_W3, na.rm = T),
                  miss = mean(is.na(SJ_W3)))
FULLDATA %>%
        group_by(CEN_Event_Code_W3, Political_Orientation_group_W3) %>%
        summarise(mean = mean(GCM_W3, na.rm = T),
                  sd = sd(GCM_W3, na.rm = T),
                  miss = mean(is.na(GCM_W3)))
FULLDATA %>%
        group_by(CEN_Event_Code_W3, Political_Orientation_group_W3) %>%
        summarise(mean = mean(CCB_W3, na.rm = T),
                  sd = sd(CCB_W3, na.rm = T),
                  miss = mean(is.na(CCB_W3)))

FULLDATA %>%
      group_by(CEN_Event_Code_W3, Political_Orientation_group_W3) %>%
      summarise(mean = mean(CEN_GOV_Response_W3, na.rm = T),
                sd = sd(CEN_GOV_Response_W3, na.rm = T),
                miss = mean(is.na(CEN_GOV_Response_W3)))

FULLDATA %>%
      group_by(CEN_Event_Code_W3, Political_Orientation_group_W3) %>%
      summarise(mean = mean(ST_W3, na.rm = T),
                sd = sd(ST_W3, na.rm = T),
                miss = mean(is.na(ST_W3)))

FULLDATA %>%
      group_by(CEN_Event_Code_W3, Political_Orientation_group_W3) %>%
      summarise(mean = mean(GD_W3, na.rm = T),
                sd = sd(GD_W3, na.rm = T),
                miss = mean(is.na(GD_W3)))

test4 <- manova(YVARS_W4 ~ EVENT_FACTOR_W4 * PO_FACTOR_W4, data = FULLDATA)
summary(test4, test = "Pillai", intercept = T)
summary.aov(test4, intercept = T)
eta_squared(test4)

SJ_eta <- aov(SJ_W4 ~ EVENT_FACTOR_W4*PO_FACTOR_W4, data = FULLDATA)
effectsize::eta_squared(SJ_eta, partial = T)
GCM_eta <- aov(GCM_W4 ~ EVENT_FACTOR_W4*PO_FACTOR_W4, data = FULLDATA)
effectsize::eta_squared(GCM_eta, partial = T)
CCB_eta <- aov(CCB_W4 ~ EVENT_FACTOR_W4*PO_FACTOR_W4, data = FULLDATA)
effectsize::eta_squared(CCB_eta, partial = T)
response_eta <- aov(CEN_GOV_Response_W4 ~ EVENT_FACTOR_W4*PO_FACTOR_W4, data = FULLDATA)
effectsize::eta_squared(response_eta, partial = T)
ST_eta <- aov(ST_W4 ~ EVENT_FACTOR_W4*PO_FACTOR_W4, data = FULLDATA)
effectsize::eta_squared(ST_eta, partial = T)
GD_eta <- aov(GD_W4 ~ EVENT_FACTOR_W4*PO_FACTOR_W4, data = FULLDATA)
effectsize::eta_squared(GD_eta, partial = T)

FULLDATA %>%
        group_by(CEN_Event_Code_W4, Political_Orientation_group_W4) %>%
        summarise(mean = mean(SJ_W4, na.rm = T),
                  sd = sd(SJ_W4, na.rm = T),
                  miss = mean(is.na(SJ_W4)))
FULLDATA %>%
        group_by(CEN_Event_Code_W4, Political_Orientation_group_W4) %>%
        summarise(mean = mean(GCM_W4, na.rm = T),
                  sd = sd(GCM_W4, na.rm = T),
                  miss = mean(is.na(GCM_W4)))
FULLDATA %>%
        group_by(CEN_Event_Code_W4, Political_Orientation_group_W4) %>%
        summarise(mean = mean(CCB_W4, na.rm = T),
                  sd = sd(CCB_W4, na.rm = T),
                  miss = mean(is.na(CCB_W4)))

FULLDATA %>%
      group_by(CEN_Event_Code_W4) %>%
      summarise(mean = mean(CEN_GOV_Response_W4, na.rm = T),
                sd = sd(CEN_GOV_Response_W4, na.rm = T),
                miss = mean(is.na(CEN_GOV_Response_W4)))

FULLDATA %>%
      group_by(CEN_Event_Code_W4) %>%
      summarise(mean = mean(ST_W4, na.rm = T),
                sd = sd(ST_W4, na.rm = T),
                miss = mean(is.na(ST_W4)))

FULLDATA %>%
      group_by(CEN_Event_Code_W4) %>%
      summarise(mean = mean(GD_W4, na.rm = T),
                sd = sd(GD_W4, na.rm = T),
                miss = mean(is.na(GD_W4)))

## Media tests
test5 <- manova(YVARS_W1 ~ MM_USE_CODE, data = FULLDATA)
summary(test5, test = "Pillai", intercept = T)
summary.aov(test5, intercept = T)
eta_squared(test5)

FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(SJ_W1, na.rm = T),
                  sd = sd(SJ_W1, na.rm = T),
                  miss = mean(is.na(SJ_W1)))

FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(GCM_W1, na.rm = T),
                  sd = sd(GCM_W1, na.rm = T),
                  miss = mean(is.na(GCM_W1)))

FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(CCB_W1, na.rm = T),
                  sd = sd(CCB_W1, na.rm = T),
                  miss = mean(is.na(CCB_W1)))

test6 <- manova(YVARS_W2 ~ MM_USE_CODE, data = FULLDATA)
summary(test6, test = "Pillai", intercept = T)
summary.aov(test6, intercept = T)
eta_squared(test6)

FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(SJ_W2, na.rm = T),
                  sd = sd(SJ_W2, na.rm = T),
                  miss = mean(is.na(SJ_W2)))
FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(GCM_W2, na.rm = T),
                  sd = sd(GCM_W2, na.rm = T),
                  miss = mean(is.na(GCM_W2)))
FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(CCB_W2, na.rm = T),
                  sd = sd(CCB_W2, na.rm = T),
                  miss = mean(is.na(CCB_W2)))

test7 <- manova(YVARS_W3 ~ MM_USE_CODE, data = FULLDATA)
summary(test7, test = "Pillai", intercept = T)
summary.aov(test7, intercept = T)
eta_squared(test7)

FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(SJ_W3, na.rm = T),
                  sd = sd(SJ_W3, na.rm = T),
                  miss = mean(is.na(SJ_W3)))
FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(GCM_W3, na.rm = T),
                  sd = sd(GCM_W3, na.rm = T),
                  miss = mean(is.na(GCM_W3)))
FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(CCB_W3, na.rm = T),
                  sd = sd(CCB_W3, na.rm = T),
                  miss = mean(is.na(CCB_W3)))

test8 <- manova(YVARS_W4 ~ MM_USE_CODE, data = FULLDATA)
summary(test8, test = "Pillai", intercept = T)
summary.aov(test8, intercept = T)
eta_squared(test8)

FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(SJ_W4, na.rm = T),
                  sd = sd(SJ_W4, na.rm = T),
                  miss = mean(is.na(SJ_W4)))
FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(GCM_W4, na.rm = T),
                  sd = sd(GCM_W4, na.rm = T),
                  miss = mean(is.na(GCM_W4)))
FULLDATA %>%
        group_by(MM_USE_CODE) %>%
        summarise(mean = mean(CCB_W4, na.rm = T),
                  sd = sd(CCB_W4, na.rm = T),
                  miss = mean(is.na(CCB_W4)))

## Political orientation tests
test9 <- manova(YVARS_W1 ~ PO_FACTOR_W1, data = FULLDATA)
summary(test9, test = "Pillai", intercept = T)
summary.aov(test9, intercept = T)
eta_squared(test9)

FULLDATA %>%
        group_by(Political_Orientation_group_W1) %>%
        summarise(mean = mean(SJ_W1, na.rm = T),
                  sd = sd(SJ_W1, na.rm = T),
                  miss = mean(is.na(SJ_W1)))

FULLDATA %>%
        group_by(Political_Orientation_group_W1) %>%
        summarise(mean = mean(GCM_W1, na.rm = T),
                  sd = sd(GCM_W1, na.rm = T),
                  miss = mean(is.na(GCM_W1)))

FULLDATA %>%
        group_by(Political_Orientation_group_W1) %>%
        summarise(mean = mean(CCB_W1, na.rm = T),
                  sd = sd(CCB_W1, na.rm = T),
                  miss = mean(is.na(CCB_W1)))

test10 <- manova(YVARS_W2 ~ PO_FACTOR_W2, data = FULLDATA)
summary(test10, test = "Pillai", intercept = T)
summary.aov(test10, intercept = T)
eta_squared(test10)

FULLDATA %>%
        group_by(Political_Orientation_group_W2) %>%
        summarise(mean = mean(SJ_W2, na.rm = T),
                  sd = sd(SJ_W2, na.rm = T),
                  miss = mean(is.na(SJ_W2)))
FULLDATA %>%
        group_by(Political_Orientation_group_W2) %>%
        summarise(mean = mean(GCM_W2, na.rm = T),
                  sd = sd(GCM_W2, na.rm = T),
                  miss = mean(is.na(GCM_W2)))
FULLDATA %>%
        group_by(Political_Orientation_group_W2) %>%
        summarise(mean = mean(CCB_W2, na.rm = T),
                  sd = sd(CCB_W2, na.rm = T),
                  miss = mean(is.na(CCB_W2)))

test11 <- manova(YVARS_W3 ~ PO_FACTOR_W3, data = FULLDATA)
summary(test11, test = "Pillai", intercept = T)
summary.aov(test11, intercept = T)
eta_squared(test11)

FULLDATA %>%
        group_by(Political_Orientation_group_W3) %>%
        summarise(mean = mean(SJ_W3, na.rm = T),
                  sd = sd(SJ_W3, na.rm = T),
                  miss = mean(is.na(SJ_W3)))
FULLDATA %>%
        group_by(Political_Orientation_group_W3) %>%
        summarise(mean = mean(GCM_W3, na.rm = T),
                  sd = sd(GCM_W3, na.rm = T),
                  miss = mean(is.na(GCM_W3)))
FULLDATA %>%
        group_by(Political_Orientation_group_W3) %>%
        summarise(mean = mean(CCB_W3, na.rm = T),
                  sd = sd(CCB_W3, na.rm = T),
                  miss = mean(is.na(CCB_W3)))


test12 <- manova(YVARS_W4 ~ PO_FACTOR_W4, data = FULLDATA)
summary(test12, test = "Pillai", intercept = T)
summary.aov(test12, intercept = T)
eta_squared(test12)

FULLDATA %>%
        group_by(Political_Orientation_group_W4) %>%
        summarise(mean = mean(SJ_W4, na.rm = T),
                  sd = sd(SJ_W4, na.rm = T),
                  miss = mean(is.na(SJ_W4)))
FULLDATA %>%
        group_by(Political_Orientation_group_W4) %>%
        summarise(mean = mean(GCM_W4, na.rm = T),
                  sd = sd(GCM_W4, na.rm = T),
                  miss = mean(is.na(GCM_W4)))
FULLDATA %>%
        group_by(Political_Orientation_group_W4) %>%
        summarise(mean = mean(CCB_W4, na.rm = T),
                  sd = sd(CCB_W4, na.rm = T),
                  miss = mean(is.na(CCB_W4)))


## Correlations for external political efficacy

FULLDATA %>%
  drop_na(SJ_W1, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(SJ_W1, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(SJ_W1, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(SJ_W1, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(SJ_W1, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(SJ_W2, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(SJ_W2, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(SJ_W2, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(SJ_W2, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(SJ_W2, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(SJ_W3, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(SJ_W3, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(SJ_W3, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(SJ_W3, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(SJ_W3, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(SJ_W4, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(SJ_W4, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(SJ_W4, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(SJ_W4, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(SJ_W4, EXTERNAL_PE_W4)$conf.int[2])


FULLDATA %>%
  drop_na(ST_W1, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(ST_W1, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(ST_W1, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(ST_W1, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(ST_W1, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(ST_W2, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(ST_W2, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(ST_W2, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(ST_W2, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(ST_W2, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(ST_W3, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(ST_W3, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(ST_W3, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(ST_W3, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(ST_W3, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(ST_W4, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(ST_W4, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(ST_W4, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(ST_W4, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(ST_W4, EXTERNAL_PE_W4)$conf.int[2])

FULLDATA %>%
  drop_na(GD_W1, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(GD_W1, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(GD_W1, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(GD_W1, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(GD_W1, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(GD_W2, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(GD_W2, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(GD_W2, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(GD_W2, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(GD_W2, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(GD_W3, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(GD_W3, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(GD_W3, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(GD_W3, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(GD_W3, EXTERNAL_PE_W4)$conf.int[2])
FULLDATA %>%
  drop_na(GD_W4, EXTERNAL_PE_W4) %>%
  summarise(correlation_coefficient = cor(GD_W4, EXTERNAL_PE_W4, method = "pearson"),
            p_value = cor.test(GD_W4, EXTERNAL_PE_W4)$p.value,
            lower_ci = cor.test(GD_W4, EXTERNAL_PE_W4)$conf.int[1],
            upper_ci = cor.test(GD_W4, EXTERNAL_PE_W4)$conf.int[2])
```

## Converting dataset into long format for exploratory repeated measure ANOVA
```{r}
## Create dataset to convert to long format
FULLDATA_LONG <- subset(FULLDATA, select = c("ID", "CEN_Event_Code_W1", "CEN_Event_Code_W2", 
                                             "CEN_Event_Code_W3", "CEN_Event_Code_W4", 
                                             "CEN_GOV_Response_W1", "CEN_GOV_Response_W2", 
                                             "CEN_GOV_Response_W3", "CEN_GOV_Response_W4", 
                                             "Political_Orientation_group_W1", "Political_Orientation_group_W2", 
                                             "Political_Orientation_group_W3", "Political_Orientation_group_W4",
                                             "SJ_W1", "SJ_W2", "SJ_W3", "SJ_W4", "ST_W1", "ST_W2", 
                                             "ST_W3", "ST_W4", "GD_W1", "GD_W2", "GD_W3", "GD_W4",
                                             "GCM_W1", "GCM_W2", "GCM_W3", "GCM_W4", "CCB_W1", 
                                             "CCB_W2", "CCB_W3", "CCB_W4"
                                             ))


# Reshape the entire dataset from wide to long format
FULLDATA_LONG <- FULLDATA_LONG %>%
  pivot_longer(cols = -ID, 
               names_to = c(".value", "EVENT"),
               names_sep = "_W") %>%
  rename(EVENT = EVENT) %>%
  arrange(ID, EVENT)
```

## Exploratory repeated measures anova
```{r}
options(scipen = 999)

mod_response <- lmer(CEN_GOV_Response ~ CEN_Event_Code*Political_Orientation_group + (1|ID), data = FULLDATA_LONG)
anova(mod_response)
effectsize::eta_squared(mod_response, partial = T)

mod_SJ <- lmer(SJ ~ CEN_Event_Code*Political_Orientation_group + (1|ID), data = FULLDATA_LONG)
anova(mod_SJ)
effectsize::eta_squared(mod_SJ, partial = T)

mod_ST <- lmer(ST ~ CEN_Event_Code*Political_Orientation_group + (1|ID), data = FULLDATA_LONG)
anova(mod_ST)
effectsize::eta_squared(mod_ST, partial = T)

mod_GD <- lmer(GD ~ CEN_Event_Code*Political_Orientation_group + (1|ID), data = FULLDATA_LONG)
anova(mod_GD)
effectsize::eta_squared(mod_GD, partial = T)

mod_GCM <- lmer(GCM ~ CEN_Event_Code*Political_Orientation_group + (1|ID), data = FULLDATA_LONG)
anova(mod_GCM)
effectsize::eta_squared(mod_GCM, partial = T)

mod_CCB <- lmer(CCB ~ CEN_Event_Code*Political_Orientation_group + (1|ID), data = FULLDATA_LONG)
anova(mod_CCB)
plot_model(mod_CCB)
effectsize::eta_squared(mod_CCB, partial = T)
```


## Creating dataset for Matt/Peer-review (Thesis Study 2 and 3)
```{r}
library(writexl)
THESIS_STUDY2_DATA <- subset(FULLDATA, select = c("ID", "SO_W1", "SO_W2", "SO_W3", "SO_W4", "PPII_W1", 
                                                  "PPII_W2", "PPII_W3", "PPII_W4", "PMAP_W1", "PMAP_W2",
                                                  "PMAP_W3", "PMAP_W4", "EA_W1", "EA_W2", "EA_W3", "EA_W4",
                                                  "EI_W1", "EI_W2", "EI_W3", "EI_W4", "Pol_Orientation_W1", 
                                                  "Pol_Orientation_W2", "Pol_Orientation_W3", 
                                                  "Pol_Orientation_W4", "EMOTION_APPRAISAL_W1", 
                                                  "EMOTION_APPRAISAL_W2", "EMOTION_APPRAISAL_W3", 
                                                  "EMOTION_APPRAISAL_W4", "SJ_W1", "SJ_W2", "SJ_W3",
                                                  "SJ_W4", "ST_W1", "ST_W2", "ST_W3", "ST_W4", "GD_W1",
                                                  "GD_W2", "GD_W3", "GD_W4", "GCM_W1", "GCM_W2", 
                                                  "GCM_W3", "GCM_W4", "PPMP_W1", "PPMP_W2", "PPMP_W3", 
                                                  "PPMP_W4", "CCB_W1", "CCB_W2", "CCB_W3", "CCB_W4",
                                                  "Political_Orientation_group_W1", "Political_Orientation_group_W2",
                                                  "Political_Orientation_group_W3", "Political_Orientation_group_W4"))

write_sav(THESIS_STUDY2_DATA, "THESIS_STUDY2.xlsx")

THESIS_STUDY3_DATA <- subset(FULLDATA, select = c("ID", "Age", "Gender", "Gender2", "Education",
                                                  "Subjective_SES_W1", "Subjective_SES_W2", "Subjective_SES_W3", 
                                                  "Subjective_SES_W4", "Life_Sat_W1_1", "Life_Sat_W1_2",
                                                  "Life_Sat_W2_1", "Life_Sat_W2_2", "Life_Sat_W3_1",
                                                  "Life_Sat_W3_2", "Life_Sat_W4_1", "Life_Sat_W4_2",
                                                  "SJ_W1_1", "SJ_W1_2", "SJ_W1_3", "SJ_W1_4", "SJ_W2_1",
                                                  "SJ_W2_2", "SJ_W2_3", "SJ_W2_4", "SJ_W3_1", "SJ_W3_2",
                                                  "SJ_W3_3", "SJ_W3_4", "SJ_W4_1", "SJ_W4_2", "SJ_W4_3", 
                                                  "SJ_W4_4", "SJ_W1", "SJ_W2", "SJ_W3", "SJ_W4", 
                                                  "Pol_Orientation_W1", "Pol_Orientation_W2", 
                                                  "Pol_Orientation_W3", "Pol_Orientation_W4",
                                                  "Political_Orientation_group_W1", "Political_Orientation_group_W2",
                                                  "Political_Orientation_group_W3", "Political_Orientation_group_W4"))

write_xlsx(THESIS_STUDY3_DATA, "THESIS_STUDY3.xlsx")
```

## Centering IV variables for Mod 1

```{r}
## Event affect does not need to be centered since it is dummy coded as pos = -1, neutral = 0, neg = 1)

## Societal Optimism
FULLDATA$SO_W1 <- scale(FULLDATA$SO_W1, center = T, scale = T)
FULLDATA$SO_W2 <- scale(FULLDATA$SO_W2, center = T, scale = T)
FULLDATA$SO_W3 <- scale(FULLDATA$SO_W3, center = T, scale = T)
FULLDATA$SO_W4 <- scale(FULLDATA$SO_W4, center = T, scale = T)

## Political Party Identity Importance
FULLDATA$PPII_W1 <- scale(FULLDATA$PPII_W1, center = T, scale = T)
FULLDATA$PPII_W2 <- scale(FULLDATA$PPII_W2, center = T, scale = T)
FULLDATA$PPII_W3 <- scale(FULLDATA$PPII_W3, center = T, scale = T)
FULLDATA$PPII_W4 <- scale(FULLDATA$PPII_W4, center = T, scale = T)

## Political Media Activity Profile
FULLDATA$PMAP_W1 <- scale(FULLDATA$PMAP_W1, center = T, scale = T)
FULLDATA$PMAP_W2 <- scale(FULLDATA$PMAP_W2, center = T, scale = T)
FULLDATA$PMAP_W3 <- scale(FULLDATA$PMAP_W3, center = T, scale = T)
FULLDATA$PMAP_W4 <- scale(FULLDATA$PMAP_W4, center = T, scale = T)

```

## Code for RI-CLPM

# We use Mulder and Hamaker recommendations for Lavaan code within

# <https://jeroendmulder.github.io/RI-CLPM/lavaan.html>

# with the corresponding paper at the following doi

# <https://doi.org/10.1080/10705511.2020.1784738>

## H1A - H1D - RLCPM 1

```{r}
options(max.print=1000000)

##Specify unconstrained model 
RICLPM1_m1 <- '
    # Create between components (random intercepts)
    SO =~ 1*SO_W1 + 1*SO_W2 + 1*SO_W3 + 1*SO_W4
    PPII =~ 1*PPII_W1 + 1*PPII_W2 + 1*PPII_W3 + 1*PPII_W4
    EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
    PMAP =~ 1*PMAP_W1 + 1*PMAP_W2 + 1*PMAP_W3 + 1*PMAP_W4
    EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
    

  # Create within-person-centered variables
wSO1 =~ 1*SO_W1
wSO2 =~ 1*SO_W2
wSO3 =~ 1*SO_W3
wSO4 =~ 1*SO_W4
wPPII1 =~ 1*PPII_W1
wPPII2 =~ 1*PPII_W2
wPPII3 =~ 1*PPII_W3
wPPII4 =~ 1*PPII_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wPMAP1 =~ 1*PMAP_W1
wPMAP2 =~ 1*PMAP_W2
wPMAP3 =~ 1*PMAP_W3
wPMAP4 =~ 1*PMAP_W4
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4


  # Estimate lagged effects between within-person-centered variables 
wSO2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wPPII2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wEA2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wPMAP2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wEI2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wSO3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wPPII3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wEA3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wPMAP3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wEI3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wSO4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wPPII4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wEA4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wPMAP4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wEI4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

## Estimate lagged effects between between-person variables
EI ~ SO 
EI ~ PPII 
EI ~ EA 
EI ~ PMAP 

# Estimate covariance between within-person variables at wave 1
wSO1 ~~ wPPII1
wSO1 ~~ wEA1  
wSO1 ~~ wPMAP1
wSO1 ~~ wEI1
wPPII1 ~~ wEA1
wPPII1 ~~ wPMAP1
wPPII1 ~~ wEI1
wEA1 ~~ wPMAP1
wEA1 ~~ wEI1
wPMAP1 ~~ wEI1

# Estimate covariances between residuals of within-person centered variables waves 2 and 3
wSO2 ~~ wPPII2
wSO2 ~~ wEA2  
wSO2 ~~ wPMAP2
wSO2 ~~ wEI2
wPPII2 ~~ wEA2
wPPII2 ~~ wPMAP2
wPPII2 ~~ wEI2
wEA2 ~~ wPMAP2
wEA2 ~~ wEI2
wPMAP2 ~~ wEI2
wSO3 ~~ wPPII3
wSO3 ~~ wEA3 
wSO3 ~~ wPMAP3
wSO3 ~~ wEI3
wPPII3 ~~ wEA3
wPPII3 ~~ wPMAP3
wPPII3 ~~ wEI3
wEA3 ~~ wPMAP3
wEA3 ~~ wEI3
wPMAP3 ~~ wEI3
wSO4 ~~ wPPII4
wSO4 ~~ wEA4
wSO4 ~~ wPMAP4
wSO4 ~~ wEI4
wPPII4 ~~ wEA4
wPPII4 ~~ wPMAP4
wPPII4 ~~ wEI4
wEA4 ~~ wPMAP4
wEA4 ~~ wEI4
wPMAP4 ~~ wEI4

  # Estimate variance and covariance of random intercepts
SO ~~ SO
PPII ~~ PPII
EA ~~ EA
PMAP ~~ PMAP
EI ~~ EI
SO ~~ PPII
SO ~~ EA
SO ~~ PMAP
SO ~~ EI
PPII ~~ EA
PPII ~~ PMAP
PPII ~~ EI
EA ~~ PMAP
EA ~~ EI
PMAP ~~ EI

# Estimate (residual) variance of within-person centered variables
wSO1 ~~ wSO1
wSO2 ~~ wSO2
wSO3 ~~ wSO3
wSO4 ~~ wSO4
wPPII1 ~~ wPPII1
wPPII2 ~~ wPPII2
wPPII3 ~~ wPPII3
wPPII4 ~~ wPPII4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wPMAP1 ~~ wPMAP1
wPMAP2 ~~ wPMAP2
wPMAP3 ~~ wPMAP3
wPMAP4 ~~ wPMAP4
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4

# further mods
wEA1 ~~ wEA2
'

# Fit the model
RICLPM1_m1.fit <- lavaan(RICLPM1_m1, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                       missing = "fiml", estimator = "MLR")

# Summarize the results
summary(RICLPM1_m1.fit, fit.measures = T, standardized = T)
resid(RICLPM1_m1.fit, type = "standardized")


# Specify  partially constrained  model
RICLPM1_m2 <- '
    # Create between components (random intercepts)
    SO =~ 1*SO_W1 + 1*SO_W2 + 1*SO_W3 + 1*SO_W4
    PPII =~ 1*PPII_W1 + 1*PPII_W2 + 1*PPII_W3 + 1*PPII_W4
    EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
    PMAP =~ 1*PMAP_W1 + 1*PMAP_W2 + 1*PMAP_W3 + 1*PMAP_W4
    EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
    

  # Create within-person-centered variables
wSO1 =~ 1*SO_W1
wSO2 =~ 1*SO_W2
wSO3 =~ 1*SO_W3
wSO4 =~ 1*SO_W4
wPPII1 =~ 1*PPII_W1
wPPII2 =~ 1*PPII_W2
wPPII3 =~ 1*PPII_W3
wPPII4 =~ 1*PPII_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wPMAP1 =~ 1*PMAP_W1
wPMAP2 =~ 1*PMAP_W2
wPMAP3 =~ 1*PMAP_W3
wPMAP4 =~ 1*PMAP_W4
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4

# Constrained intercepts over time 
SO_W1 + SO_W2 + SO_W3 + SO_W4 ~ i_so*1
PPII_W1 + PPII_W2 + PPII_W3 + PPII_W4 ~ i_ppii*1
EA_W1 + EA_W2 + EA_W3 + EA_W4 ~ i_ea*1
PMAP_W1 + PMAP_W2 + PMAP_W3 + PMAP_W4 ~ i_pmap*1
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1


 # Estimate lagged effects between within-person-centered variables (constrained)
wSO2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPPII2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEA2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPMAP2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEI2 ~ cl_y1*wSO1 + cl_y2*wPPII1 + cl_y3*wEA1 + cl_y4*wPMAP1 + ar_y*wEI1

wSO3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPPII3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEA3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPMAP3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEI3 ~ cl_y1*wSO2 + cl_y2*wPPII2 + cl_y3*wEA2 + cl_y4*wPMAP2 + ar_y*wEI2

wSO4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPPII4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEA4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPMAP4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEI4 ~ cl_y1*wSO3 + cl_y2*wPPII3 + cl_y3*wEA3 + cl_y4*wPMAP3 + ar_y*wEI3

## Estimate laged effects between between-person variables
EI ~ SO 
EI ~ PPII 
EI ~ EA 
EI ~ PMAP 

# Estimate covariance between within-person variables at wave 1
wSO1 ~~ wPPII1
wSO1 ~~ wEA1  
wSO1 ~~ wPMAP1
wSO1 ~~ wEI1
wPPII1 ~~ wEA1
wPPII1 ~~ wPMAP1
wPPII1 ~~ wEI1
wEA1 ~~ wPMAP1
wEA1 ~~ wEI1
wPMAP1 ~~ wEI1

# Estimate covariances between residuals of within-person centered variables waves 2 and 3
wSO2 ~~ wPPII2
wSO2 ~~ wEA2  
wSO2 ~~ wPMAP2
wSO2 ~~ wEI2
wPPII2 ~~ wEA2
wPPII2 ~~ wPMAP2
wPPII2 ~~ wEI2
wEA2 ~~ wPMAP2
wEA2 ~~ wEI2
wPMAP2 ~~ wEI2
wSO3 ~~ wPPII3
wSO3 ~~ wEA3 
wSO3 ~~ wPMAP3
wSO3 ~~ wEI3
wPPII3 ~~ wEA3
wPPII3 ~~ wPMAP3
wPPII3 ~~ wEI3
wEA3 ~~ wPMAP3
wEA3 ~~ wEI3
wPMAP3 ~~ wEI3
wSO4 ~~ wPPII4
wSO4 ~~ wEA4
wSO4 ~~ wPMAP4
wSO4 ~~ wEI4
wPPII4 ~~ wEA4
wPPII4 ~~ wPMAP4
wPPII4 ~~ wEI4
wEA4 ~~ wPMAP4
wEA4 ~~ wEI4
wPMAP4 ~~ wEI4

  # Estimate variance and covariance of random intercepts
SO ~~ SO
PPII ~~ PPII
EA ~~ EA
PMAP ~~ PMAP
EI ~~ EI
SO ~~ PPII
SO ~~ EA
SO ~~ PMAP
SO ~~ EI
PPII ~~ EA
PPII ~~ PMAP
PPII ~~ EI
EA ~~ PMAP
EA ~~ EI
PMAP ~~ EI

# Estimate (residual) variance of within-person centered variables
wSO1 ~~ wSO1
wSO2 ~~ wSO2
wSO3 ~~ wSO3
wSO4 ~~ wSO4
wPPII1 ~~ wPPII1
wPPII2 ~~ wPPII2
wPPII3 ~~ wPPII3
wPPII4 ~~ wPPII4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wPMAP1 ~~ wPMAP1
wPMAP2 ~~ wPMAP2
wPMAP3 ~~ wPMAP3
wPMAP4 ~~ wPMAP4
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4

 # Constrain covariance of the between factors and exogenous within factors to 0. 
SO + PPII + EA + PMAP + EI ~~ 0*wSO1 + 0*wPPII1 + 0*wEA1 + 0*wPMAP1 + 0*wEI1

# further mods
wEA1 ~~ wEA2
'

# Fit the model
RICLPM1_m2.fit <- lavaan(RICLPM1_m2, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                      missing = "fiml", estimator = "MLR")

resid(RICLPM1_m2.fit, type = "standardized")

# Summarize the results
summary(RICLPM1_m2.fit, fit.measures = T, standardized = T)


# Specify  fully constrained  model
RICLPM1_m3 <- '
    # Create between components (random intercepts)
    SO =~ 1*SO_W1 + 1*SO_W2 + 1*SO_W3 + 1*SO_W4
    PPII =~ 1*PPII_W1 + 1*PPII_W2 + 1*PPII_W3 + 1*PPII_W4
    EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
    PMAP =~ 1*PMAP_W1 + 1*PMAP_W2 + 1*PMAP_W3 + 1*PMAP_W4
    EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
    

  # Create within-person-centered variables
wSO1 =~ 1*SO_W1
wSO2 =~ 1*SO_W2
wSO3 =~ 1*SO_W3
wSO4 =~ 1*SO_W4
wPPII1 =~ 1*PPII_W1
wPPII2 =~ 1*PPII_W2
wPPII3 =~ 1*PPII_W3
wPPII4 =~ 1*PPII_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wPMAP1 =~ 1*PMAP_W1
wPMAP2 =~ 1*PMAP_W2
wPMAP3 =~ 1*PMAP_W3
wPMAP4 =~ 1*PMAP_W4
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4

# Constrained intercepts over time 
SO_W1 + SO_W2 + SO_W3 + SO_W4 ~ i_so*1
PPII_W1 + PPII_W2 + PPII_W3 + PPII_W4 ~ i_ppii*1
EA_W1 + EA_W2 + EA_W3 + EA_W4 ~ i_ea*1
PMAP_W1 + PMAP_W2 + PMAP_W3 + PMAP_W4 ~ i_pmap*1
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1


 # Estimate lagged effects between within-person-centered variables (constrained)
wSO2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPPII2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEA2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPMAP2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEI2 ~ cl_y1*wSO1 + cl_y2*wPPII1 + cl_y3*wEA1 + cl_y4*wPMAP1 + ar_y*wEI1

wSO3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPPII3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEA3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPMAP3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEI3 ~ cl_y1*wSO2 + cl_y2*wPPII2 + cl_y3*wEA2 + cl_y4*wPMAP2 + ar_y*wEI2

wSO4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPPII4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEA4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPMAP4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEI4 ~ cl_y1*wSO3 + cl_y2*wPPII3 + cl_y3*wEA3 + cl_y4*wPMAP3 + ar_y*wEI3

## Estimate laged effects between between-person variables
EI ~ SO 
EI ~ PPII 
EI ~ EA 
EI ~ PMAP 

# Estimate covariance between within-person variables at wave 1
wSO1 ~~ wPPII1
wSO1 ~~ wEA1  
wSO1 ~~ wPMAP1
wSO1 ~~ wEI1
wPPII1 ~~ wEA1
wPPII1 ~~ wPMAP1
wPPII1 ~~ wEI1
wEA1 ~~ wPMAP1
wEA1 ~~ wEI1
wPMAP1 ~~ wEI1

# Estimate covariances between residuals of within-person centered variables waves 2 and 3
wSO2 ~~ wPPII2
wSO2 ~~ wEA2  
wSO2 ~~ wPMAP2
wSO2 ~~ wEI2
wPPII2 ~~ wEA2
wPPII2 ~~ wPMAP2
wPPII2 ~~ wEI2
wEA2 ~~ wPMAP2
wEA2 ~~ wEI2
wPMAP2 ~~ wEI2
wSO3 ~~ wPPII3
wSO3 ~~ wEA3 
wSO3 ~~ wPMAP3
wSO3 ~~ wEI3
wPPII3 ~~ wEA3
wPPII3 ~~ wPMAP3
wPPII3 ~~ wEI3
wEA3 ~~ wPMAP3
wEA3 ~~ wEI3
wPMAP3 ~~ wEI3
wSO4 ~~ wPPII4
wSO4 ~~ wEA4
wSO4 ~~ wPMAP4
wSO4 ~~ wEI4
wPPII4 ~~ wEA4
wPPII4 ~~ wPMAP4
wPPII4 ~~ wEI4
wEA4 ~~ wPMAP4
wEA4 ~~ wEI4
wPMAP4 ~~ wEI4

  # Estimate variance and covariance of random intercepts
SO ~~ SO
PPII ~~ PPII
EA ~~ EA
PMAP ~~ PMAP
EI ~~ EI
SO ~~ PPII
SO ~~ EA
SO ~~ PMAP
SO ~~ EI
PPII ~~ EA
PPII ~~ PMAP
PPII ~~ EI
EA ~~ PMAP
EA ~~ EI
PMAP ~~ EI

# Estimate (residual) variance of within-person centered variables starting with w = 2 (constrained)
wSO1 ~~ wSO1
wSO2 ~~ vx1*wSO2
wSO3 ~~ vx1*wSO3
wSO4 ~~ vx1*wSO4
wPPII1 ~~ wPPII1
wPPII2 ~~ vx2*wPPII2
wPPII3 ~~ vx2*wPPII3
wPPII4 ~~ vx2*wPPII4
wEA1 ~~ wEA1
wEA2 ~~ vx3*wEA2
wEA3 ~~ vx3*wEA3
wEA4 ~~ vx3*wEA4
wPMAP1 ~~ wPMAP1
wPMAP2 ~~ vx4*wPMAP2
wPMAP3 ~~ vx4*wPMAP3
wPMAP4 ~~ vx4*wPMAP4
wEI1 ~~ wEI1
wEI2 ~~ vy*wEI2
wEI3 ~~ vy*wEI3
wEI4 ~~ vy*wEI4
  
  # Constrain covariance of the between factors and exogenous within factors to 0. 
SO + PPII + EA + PMAP + EI ~~ 0*wSO1 + 0*wPPII1 + 0*wEA1 + 0*wPMAP1 + 0*wEI1

# further mods
wEA1 ~~ wEA2
'

# Fit the model
RICLPM1_m3.fit <- lavaan(RICLPM1_m3, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                      missing = "fiml", estimator = "MLR")

# Summarize the results
summary(RICLPM1_m3.fit, fit.measures = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM1_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM1_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM1_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

## Likelihood Ratio Test used to compare models Gonzales & Griffin (2001)
lrtest(RICLPM1_m1.fit, RICLPM1_m2.fit)
lrtest(RICLPM1_m3.fit, RICLPM1_m2.fit)
lrtest(RICLPM1_m1.fit, RICLPM1_m3.fit)


## MODEL 2 BEST FITTING MODEL ACCORDING TO MODEL COMPARISONS and LRT results
## Create table for mod 2

RICLPM1_m2_table <- sem_tables(RICLPM1_m2.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM1_m2_table

gtsave(RICLPM1_m2_table, "RICLPM1_m2.rtf")

```

## Creating scales for mod 2 and 3

```{r}
## Event Impact
FULLDATA$EI_W1 <- scale(FULLDATA$EI_W1, center = T, scale = T)
FULLDATA$EI_W2 <- scale(FULLDATA$EI_W2, center = T, scale = T)
FULLDATA$EI_W3 <- scale(FULLDATA$EI_W3, center = T, scale = T)
FULLDATA$EI_W4 <- scale(FULLDATA$EI_W4, center = T, scale = T)

## Political Orientation 
FULLDATA$Pol_Orientation_W1 <- scale(FULLDATA$Pol_Orientation_W1, center = T, scale = T)
FULLDATA$Pol_Orientation_W2 <- scale(FULLDATA$Pol_Orientation_W2, center = T, scale = T)
FULLDATA$Pol_Orientation_W3 <- scale(FULLDATA$Pol_Orientation_W3, center = T, scale = T)
FULLDATA$Pol_Orientation_W4 <- scale(FULLDATA$Pol_Orientation_W4, center = T, scale = T)

## Emotion Appraisal
FULLDATA$EMOTION_APPRAISAL_W1 <- scale(FULLDATA$EMOTION_APPRAISAL_W1, center = T, scale = T)
FULLDATA$EMOTION_APPRAISAL_W2 <- scale(FULLDATA$EMOTION_APPRAISAL_W2, center = T, scale = T)
FULLDATA$EMOTION_APPRAISAL_W3 <- scale(FULLDATA$EMOTION_APPRAISAL_W3, center = T, scale = T)
FULLDATA$EMOTION_APPRAISAL_W4 <- scale(FULLDATA$EMOTION_APPRAISAL_W4, center = T, scale = T)
```

## H2 to 4B - RLCPM 2-4

## removed time invariant moderator since it doesn't vary.

## See more details and reporting in supp materials

## Event impact -\> Political orientation -\> system justification

```{r}
## Specify unconstrained model
 RICLPM2_m1 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 POL =~ 1*Pol_Orientation_W1 + 1*Pol_Orientation_W2 + 1*Pol_Orientation_W3 + 1*Pol_Orientation_W4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wPOL1 =~ 1*Pol_Orientation_W1
wPOL2 =~ 1*Pol_Orientation_W2
wPOL3 =~ 1*Pol_Orientation_W3
wPOL4 =~ 1*Pol_Orientation_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ wEI1 + wPOL1 + wSJ1  
wPOL2 ~ wEI1 + wPOL1 + wSJ1 
wSJ2 ~ wEI1 + wPOL1 + wSJ1  
wEI3 ~ wEI2 + wPOL2 + wSJ2 
wPOL3 ~ wEI2 + wPOL2 + wSJ2 
wSJ3 ~ wEI2 + wPOL2 + wSJ2 
wEI4 ~ wEI3 + wPOL3 + wSJ3 
wPOL4 ~ wEI3 + wPOL3 + wSJ3 
wSJ4 ~ wEI3 + wPOL3 + wSJ3 

# Estimate lagged mediation effects between between-person variables
SJ ~ c*EI
POL ~ a*EI
SJ ~ b*POL 

# Indirect and total effects (between)
direct:= c
ab:= a*b
total:= ab+c

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wPOL1
wEI1 ~~ wSJ1  
wPOL1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wPOL2
wEI2 ~~ wSJ2  
wPOL2 ~~ wSJ2
wEI3 ~~ wPOL3
wEI3 ~~ wSJ3
wPOL3 ~~ wSJ3
wEI4 ~~ wPOL4
wEI4 ~~ wSJ4
wPOL4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wPOL1 ~~ wPOL1
wPOL2 ~~ wPOL2
wPOL3 ~~ wPOL3
wPOL4 ~~ wPOL4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
POL ~~ POL
SJ ~~ SJ
'
# Fit the model
RICLPM2_m1.fit <- lavaan(RICLPM2_m1, data = FULLDATA,  
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM2_m1.fit, fit = T, standardized = T)

# Specify partially constrained model
RICLPM2_m2 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 POL =~ 1*Pol_Orientation_W1 + 1*Pol_Orientation_W2 + 1*Pol_Orientation_W3 + 1*Pol_Orientation_W4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wPOL1 =~ 1*Pol_Orientation_W1
wPOL2 =~ 1*Pol_Orientation_W2
wPOL3 =~ 1*Pol_Orientation_W3
wPOL4 =~ 1*Pol_Orientation_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1  
wPOL2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1 
wSJ2 ~ cl_y1*wEI1 + cl_y2*wPOL1 + ar_y*wSJ1  
wEI3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wPOL3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wSJ3 ~ cl_y1*wEI2 + cl_y2*wPOL2 + ar_y*wSJ2 
wEI4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wPOL4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wSJ4 ~ cl_y1*wEI3 + cl_y2*wPOL3 + ar_y*wSJ3 

# Estimate lagged mediation effects between between-person variables
SJ ~ c*EI
POL ~ a*EI
SJ ~ b*POL 

# Indirect and total effects (between)
direct1:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
Pol_Orientation_W1 + Pol_Orientation_W2 + Pol_Orientation_W3 + Pol_Orientation_W4 ~ i_po*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wPOL1
wEI1 ~~ wSJ1  
wPOL1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wPOL2
wEI2 ~~ wSJ2  
wPOL2 ~~ wSJ2
wEI3 ~~ wPOL3
wEI3 ~~ wSJ3
wPOL3 ~~ wSJ3
wEI4 ~~ wPOL4
wEI4 ~~ wSJ4
wPOL4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wPOL1 ~~ wPOL1
wPOL2 ~~ wPOL2
wPOL3 ~~ wPOL3
wPOL4 ~~ wPOL4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
POL ~~ POL
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + POL + SJ ~~ 0*wEI1 + 0*wPOL1 + 0*wSJ1 
'

# Fit the model
RICLPM2_m2.fit <- lavaan(RICLPM2_m2, data = FULLDATA, 
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM2_m2.fit, fit = T, standardized = T)



# Specify fully constrained model
RICLPM2_m3 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 POL =~ 1*Pol_Orientation_W1 + 1*Pol_Orientation_W2 + 1*Pol_Orientation_W3 + 1*Pol_Orientation_W4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wPOL1 =~ 1*Pol_Orientation_W1
wPOL2 =~ 1*Pol_Orientation_W2
wPOL3 =~ 1*Pol_Orientation_W3
wPOL4 =~ 1*Pol_Orientation_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1  
wPOL2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1 
wSJ2 ~ cl_y1*wEI1 + cl_y2*wPOL1 + ar_y*wSJ1  
wEI3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wPOL3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wSJ3 ~ cl_y1*wEI2 + cl_y2*wPOL2 + ar_y*wSJ2 
wEI4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wPOL4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wSJ4 ~ cl_y1*wEI3 + cl_y2*wPOL3 + ar_y*wSJ3 

# Estimate lagged mediation effects between between-person variables
SJ ~ c*EI
POL ~ a*EI
SJ ~ b*POL 

# Indirect and total effects (between)
direct1:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (within)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
Pol_Orientation_W1 + Pol_Orientation_W2 + Pol_Orientation_W3 + Pol_Orientation_W4 ~ i_po*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wPOL1
wEI1 ~~ wSJ1  
wPOL1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wPOL2
wEI2 ~~ wSJ2  
wPOL2 ~~ wSJ2
wEI3 ~~ wPOL3
wEI3 ~~ wSJ3
wPOL3 ~~ wSJ3
wEI4 ~~ wPOL4
wEI4 ~~ wSJ4
wPOL4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ vx1*wEI2
wEI3 ~~ vx1*wEI3
wEI4 ~~ vx1*wEI4
wPOL1 ~~ wPOL1
wPOL2 ~~ vx2*wPOL2
wPOL3 ~~ vx2*wPOL3
wPOL4 ~~ vx2*wPOL4
wSJ1 ~~ wSJ1
wSJ2 ~~ vy*wSJ2
wSJ3 ~~ vy*wSJ3
wSJ4 ~~ vy*wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
POL ~~ POL
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + POL + SJ ~~ 0*wEI1 + 0*wPOL1 + 0*wSJ1 
'

# Fit the model
RICLPM2_m3.fit <- lavaan(RICLPM2_m3, data = FULLDATA, 
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM2_m3.fit, fit = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM2_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM2_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM2_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM2_m1.fit, RICLPM2_m2.fit)
lrtest(RICLPM2_m3.fit, RICLPM2_m2.fit)
lrtest(RICLPM2_m1.fit, RICLPM2_m3.fit)

## Best model is model 2
RICLPM2_m2_table <- sem_tables(RICLPM2_m2.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM2_m2_table

gtsave(RICLPM2_m2_table, "RICLPM2_m2.rtf")

```

## RLCPM 3

## Event impact -\> emotional appraisal -\> system justification

## Emotion Appraisal has a negative variance (lv variances are negative) only during the unconstrained model
## but model fit is poor for the partial and fully constrained model

```{r}
## Specify unconstrained model
RICLPM3_m1 <- '
  # Measurement model
    # Create between components (random intercepts)
  EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
  EA =~ 1*EMOTION_APPRAISAL_W1 + 1*EMOTION_APPRAISAL_W2 + 1*EMOTION_APPRAISAL_W3 + 1*EMOTION_APPRAISAL_W4
  SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

 # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EMOTION_APPRAISAL_W1
wEA2 =~ 1*EMOTION_APPRAISAL_W2
wEA3 =~ 1*EMOTION_APPRAISAL_W3
wEA4 =~ 1*EMOTION_APPRAISAL_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

# Estimate lagged effects between within-person-centered variables
wEI2 ~ wEI1 + wEA1 + wSJ1
wEA2 ~ wEI1 + wEA1 + wSJ1
wSJ2 ~ wEI1 + wEA1 + wSJ1
wEI3 ~ wEI2 + wEA2 + wSJ2
wEA3 ~ wEI2 + wEA2 + wSJ2
wSJ3 ~ wEI2 + wEA2 + wSJ2
wEI4 ~ wEI3 + wEA3 + wSJ3
wEA4 ~ wEI3 + wEA3 + wSJ3
wSJ4 ~ wEI3 + wEA3 + wSJ3

# Estimate lagged mediation effects between between-person variables 
SJ ~ c*EI
EA ~ a*EI
SJ ~ b*EA 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wSJ1  
wEA1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wSJ2  
wEA2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wSJ3
wEA3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wSJ4
wEA4 ~~ wSJ4

# Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
SJ ~~ SJ
'

# Fit the model
RICLPM3_m1.fit <- lavaan(RICLPM3_m1, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T)

resid(RICLPM3_m1.fit, type = "standardized")
inspect(RICLPM3_m1.fit, "modindices")

# Summarize the results
summary(RICLPM3_m1.fit, fit = T, standardized = T)

# Specify partially constrained model
RICLPM3_m2 <- '
  # Measurement model
    # Create between components (random intercepts)
  EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
  EA =~ 1*EMOTION_APPRAISAL_W1 + 1*EMOTION_APPRAISAL_W2 + 1*EMOTION_APPRAISAL_W3 + 1*EMOTION_APPRAISAL_W4
  SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

 # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EMOTION_APPRAISAL_W1
wEA2 =~ 1*EMOTION_APPRAISAL_W2
wEA3 =~ 1*EMOTION_APPRAISAL_W3
wEA4 =~ 1*EMOTION_APPRAISAL_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

# Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wEA2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wSJ2 ~ cl_y1*wEI1 + cl_y2*wEA1 + ar_y*wSJ1
wEI3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wEA3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wSJ3 ~ cl_y1*wEI2 + cl_y2*wEA2 + ar_y*wSJ2
wEI4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wEA4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wSJ4 ~ cl_y1*wEI3 + cl_y2*wEA3 + ar_y*wSJ3

# Estimate lagged mediation effects between between-person variables 
SJ ~ c*EI
EA ~ a*EI
SJ ~ b*EA 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
EMOTION_APPRAISAL_W1 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 ~ i_ea*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wSJ1  
wEA1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wSJ2  
wEA2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wSJ3
wEA3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wSJ4
wEA4 ~~ wSJ4

# Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + EA + SJ ~~ 0*wEI1 + 0*wEA1 + 0*wSJ1 
'

# Fit the model
RICLPM3_m2.fit <- lavaan(RICLPM3_m2, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM3_m2.fit, fit = T, standardized = T)

# Specify fully constrained model
RICLPM3_m3 <- '
  # Measurement model
    # Create between components (random intercepts)
  EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
  EA =~ 1*EMOTION_APPRAISAL_W1 + 1*EMOTION_APPRAISAL_W2 + 1*EMOTION_APPRAISAL_W3 + 1*EMOTION_APPRAISAL_W4
  SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

 # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EMOTION_APPRAISAL_W1
wEA2 =~ 1*EMOTION_APPRAISAL_W2
wEA3 =~ 1*EMOTION_APPRAISAL_W3
wEA4 =~ 1*EMOTION_APPRAISAL_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

# Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wEA2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wSJ2 ~ cl_y1*wEI1 + cl_y2*wEA1 + ar_y*wSJ1
wEI3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wEA3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wSJ3 ~ cl_y1*wEI2 + cl_y2*wEA2 + ar_y*wSJ2
wEI4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wEA4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wSJ4 ~ cl_y1*wEI3 + cl_y2*wEA3 + ar_y*wSJ3

# Estimate lagged mediation effects between between-person variables 
SJ ~ c*EI
EA ~ a*EI
SJ ~ b*EA 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
EMOTION_APPRAISAL_W1 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 ~ i_ea*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wSJ1  
wEA1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wSJ2  
wEA2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wSJ3
wEA3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wSJ4
wEA4 ~~ wSJ4

# Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ vx1*wEI2
wEI3 ~~ vx1*wEI3
wEI4 ~~ vx1*wEI4
wEA1 ~~ wEA1
wEA2 ~~ vx2*wEA2
wEA3 ~~ vx2*wEA3
wEA4 ~~ vx2*wEA4
wSJ1 ~~ wSJ1
wSJ2 ~~ vy*wSJ2
wSJ3 ~~ vy*wSJ3
wSJ4 ~~ vy*wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + EA + SJ ~~ 0*wEI1 + 0*wEA1 + 0*wSJ1 
'

# Fit the model
RICLPM3_m3.fit <- lavaan(RICLPM3_m3, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM3_m3.fit, fit = T, standardized = T)


# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM3_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM3_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM3_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM3_m1.fit, RICLPM3_m2.fit)
lrtest(RICLPM3_m3.fit, RICLPM3_m2.fit)
lrtest(RICLPM3_m1.fit, RICLPM3_m3.fit)

resid(RICLPM3_m1.fit, type = "standardized")
inspect(RICLPM3_m1.fit, "modindices")


## Best fit is model 2
RICLPM3_m2_table <- sem_tables(RICLPM3_m2.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM3_m2_table

gtsave(RICLPM3_m2_table, "RICLPM3_m2.rtf")
```

## Creating scales for mod 4 (Hypothesis 5)

```{r}
## System justification
FULLDATA$SJ_W1 <- scale(FULLDATA$SJ_W1, center = T, scale = T)
FULLDATA$SJ_W2 <- scale(FULLDATA$SJ_W2, center = T, scale = T)
FULLDATA$SJ_W3 <- scale(FULLDATA$SJ_W3, center = T, scale = T)
FULLDATA$SJ_W4 <- scale(FULLDATA$SJ_W4, center = T, scale = T)

## Systemic Trust
FULLDATA$ST_W1 <- scale(FULLDATA$ST_W1, center = T, scale = T)
FULLDATA$ST_W2 <- scale(FULLDATA$ST_W2, center = T, scale = T)
FULLDATA$ST_W3 <- scale(FULLDATA$ST_W3, center = T, scale = T)
FULLDATA$ST_W4 <- scale(FULLDATA$ST_W4, center = T, scale = T)

## Governmental Distrust
FULLDATA$GD_W1 <- scale(FULLDATA$GD_W1, center = T, scale = T)
FULLDATA$GD_W2 <- scale(FULLDATA$GD_W2, center = T, scale = T)
FULLDATA$GD_W3 <- scale(FULLDATA$GD_W3, center = T, scale = T)
FULLDATA$GD_W4 <- scale(FULLDATA$GD_W4, center = T, scale = T)
```

## Decided to seperate mediational models into two sep models which allowed models to converge (see below)

## H5 - RLCPM4A

## SJ -\> systemic trust -\> General conspiracy mentality

```{r}
## Specify unconstrained model
RICLPM4A_m1 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    ST =~ 1*ST_W1 + 1*ST_W2 + 1*ST_W3 + 1*ST_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wST1 =~ 1*ST_W1
wST2 =~ 1*ST_W2
wST3 =~ 1*ST_W3
wST4 =~ 1*ST_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ wSJ1 + wST1 + wGCM1
wST2 ~ wSJ1 + wST1 + wGCM1
wGCM2 ~ wSJ1 + wST1 + wGCM1
wSJ3 ~ wSJ2 + wST2 + wGCM2
wST3 ~ wSJ2 + wST2 + wGCM2
wGCM3 ~ wSJ2 + wST2 + wGCM2
wSJ4 ~ wSJ3 + wST3 + wGCM3
wST4 ~ wSJ3 + wST3 + wGCM3
wGCM4 ~ wSJ3 + wST3 + wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
ST ~ a*SJ
GCM ~ b*ST

## Direct and indirect effects
direct:= c
ab:=a*b
total1:= ab+c

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wST1
wSJ1 ~~ wGCM1
wST1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wST2
wSJ2 ~~ wGCM2
wST2 ~~ wGCM2
wSJ3 ~~ wST3
wSJ3 ~~ wGCM3
wST3 ~~ wGCM3
wSJ4 ~~ wST4
wSJ4 ~~ wGCM4
wST4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wST1 ~~ wST1
wST2 ~~ wST2
wST3 ~~ wST3
wST4 ~~ wST4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
ST ~~ ST
GCM ~~ GCM
'

# Fit the model
RICLPM4A_m1.fit <- lavaan(RICLPM4A_m1, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM4A_m1.fit, fit = T, standardized = T)


# Specify partially constrained model
RICLPM4A_m2 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    ST =~ 1*ST_W1 + 1*ST_W2 + 1*ST_W3 + 1*ST_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wST1 =~ 1*ST_W1
wST2 =~ 1*ST_W2
wST3 =~ 1*ST_W3
wST4 =~ 1*ST_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wST2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wST1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wST3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wST2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wST4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wST3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
ST ~ a*SJ
GCM ~ b*ST

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
ST_W1 + ST_W2 + ST_W3 + ST_W4 ~ i_st*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wST1
wSJ1 ~~ wGCM1
wST1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wST2
wSJ2 ~~ wGCM2
wST2 ~~ wGCM2
wSJ3 ~~ wST3
wSJ3 ~~ wGCM3
wST3 ~~ wGCM3
wSJ4 ~~ wST4
wSJ4 ~~ wGCM4
wST4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wST1 ~~ wST1
wST2 ~~ wST2
wST3 ~~ wST3
wST4 ~~ wST4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
ST ~~ ST
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + ST + GCM ~~ 0*wSJ1 + 0*wST1 + 0*wGCM1
'

# Fit the model
RICLPM4A_m2.fit <- lavaan(RICLPM4A_m2, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM4A_m2.fit, fit = T, standardized = T)


# Specify fully constrained model
RICLPM4A_m3 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    ST =~ 1*ST_W1 + 1*ST_W2 + 1*ST_W3 + 1*ST_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wST1 =~ 1*ST_W1
wST2 =~ 1*ST_W2
wST3 =~ 1*ST_W3
wST4 =~ 1*ST_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wST2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wST1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wST3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wST2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wST4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wST3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
ST ~ a*SJ
GCM ~ b*ST

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
ST_W1 + ST_W2 + ST_W3 + ST_W4 ~ i_st*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wST1
wSJ1 ~~ wGCM1
wST1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wST2
wSJ2 ~~ wGCM2
wST2 ~~ wGCM2
wSJ3 ~~ wST3
wSJ3 ~~ wGCM3
wST3 ~~ wGCM3
wSJ4 ~~ wST4
wSJ4 ~~ wGCM4
wST4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables (contrained starting with w = 2)
wSJ1 ~~ wSJ1
wSJ2 ~~ vx1*wSJ2
wSJ3 ~~ vx1*wSJ3
wSJ4 ~~ vx1*wSJ4
wST1 ~~ wST1
wST2 ~~ vx2*wST2
wST3 ~~ vx2*wST3
wST4 ~~ vx2*wST4
wGCM1 ~~ wGCM1
wGCM2 ~~ vy*wGCM2
wGCM3 ~~ vy*wGCM3
wGCM4 ~~ vy*wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
ST ~~ ST
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + ST + GCM ~~ 0*wSJ1 + 0*wST1 + 0*wGCM1
'

# Fit the model
RICLPM4A_m3.fit <- lavaan(RICLPM4A_m3, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM4A_m3.fit, fit = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM4A_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4A_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4A_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM4A_m1.fit, RICLPM4A_m2.fit)
lrtest(RICLPM4A_m3.fit, RICLPM4A_m2.fit)
lrtest(RICLPM4A_m1.fit, RICLPM4A_m3.fit)

## mod 3 (fully constrained) is the best fitting model - build table for mod 3
RICLPM4A_m2_table <- sem_tables(RICLPM4A_m3.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM4A_m2_table

gtsave(RICLPM4A_m2_table, "RICLPM4A_m2.rtf")
```

## H5 - RICLPM4B

## SJ -\> governmental distrust -\> General conspiracy mentality

```{r}
## Specify unconstrained model
RICLPM4B_m1 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    GD =~ 1*GD_W1 + 1*GD_W2 + 1*GD_W3 + 1*GD_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wGD1 =~ 1*GD_W1
wGD2 =~ 1*GD_W2
wGD3 =~ 1*GD_W3
wGD4 =~ 1*GD_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ wSJ1 + wGD1 + wGCM1
wGD2 ~ wSJ1 + wGD1 + wGCM1
wGCM2 ~ wSJ1 + wGD1 + wGCM1
wSJ3 ~ wSJ2 + wGD2 + wGCM2
wGD3 ~ wSJ2 + wGD2 + wGCM2
wGCM3 ~ wSJ2 + wGD2 + wGCM2
wSJ4 ~ wSJ3 + wGD3 + wGCM3
wGD4 ~ wSJ3 + wGD3 + wGCM3
wGCM4 ~ wSJ3 + wGD3 + wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
GD ~ a*SJ
GCM ~ b*GD 

## Direct and indirect effects
direct:= c
ab:=a*b
total:= ab+c

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wGD1
wSJ1 ~~ wGCM1
wGD1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wGD2
wSJ2 ~~ wGCM2
wGD2 ~~ wGCM2
wSJ3 ~~ wGD3
wSJ3 ~~ wGCM3
wGD3 ~~ wGCM3
wSJ4 ~~ wGD4
wSJ4 ~~ wGCM4
wGD4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wGD1 ~~ wGD1
wGD2 ~~ wGD2
wGD3 ~~ wGD3
wGD4 ~~ wGD4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
GD ~~ GD
GCM ~~ GCM
'

# Fit the model
RICLPM4B_m1.fit <- lavaan(RICLPM4B_m1, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T, )

# Summarize the results
summary(RICLPM4B_m1.fit, fit = T, standardized = T)

## Specify partially constrained model
RICLPM4B_m2 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    GD =~ 1*GD_W1 + 1*GD_W2 + 1*GD_W3 + 1*GD_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wGD1 =~ 1*GD_W1
wGD2 =~ 1*GD_W2
wGD3 =~ 1*GD_W3
wGD4 =~ 1*GD_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGD2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wGD1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGD3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wGD2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGD4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wGD3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
GD ~ a*SJ
GCM ~ b*GD 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
GD_W1 + GD_W2 + GD_W3 + GD_W4 ~ i_GD*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wGD1
wSJ1 ~~ wGCM1
wGD1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wGD2
wSJ2 ~~ wGCM2
wGD2 ~~ wGCM2
wSJ3 ~~ wGD3
wSJ3 ~~ wGCM3
wGD3 ~~ wGCM3
wSJ4 ~~ wGD4
wSJ4 ~~ wGCM4
wGD4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wGD1 ~~ wGD1
wGD2 ~~ wGD2
wGD3 ~~ wGD3
wGD4 ~~ wGD4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
GD ~~ GD
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + GD + GCM ~~ 0*wSJ1 + 0*wGD1 + 0*wGCM1
'

# Fit the model
RICLPM4B_m2.fit <- lavaan(RICLPM4B_m2, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T, )

# Summarize the results
summary(RICLPM4B_m2.fit, fit = T, standardized = T)

## Specify fully constrained model
RICLPM4B_m3 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    GD =~ 1*GD_W1 + 1*GD_W2 + 1*GD_W3 + 1*GD_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wGD1 =~ 1*GD_W1
wGD2 =~ 1*GD_W2
wGD3 =~ 1*GD_W3
wGD4 =~ 1*GD_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGD2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wGD1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGD3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wGD2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGD4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wGD3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
GD ~ a*SJ
GCM ~ b*GD 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
GD_W1 + GD_W2 + GD_W3 + GD_W4 ~ i_GD*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wGD1
wSJ1 ~~ wGCM1
wGD1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wGD2
wSJ2 ~~ wGCM2
wGD2 ~~ wGCM2
wSJ3 ~~ wGD3
wSJ3 ~~ wGCM3
wGD3 ~~ wGCM3
wSJ4 ~~ wGD4
wSJ4 ~~ wGCM4
wGD4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables (constrained from w = 2)
wSJ1 ~~ wSJ1
wSJ2 ~~ vx1*wSJ2
wSJ3 ~~ vx1*wSJ3
wSJ4 ~~ vx1*wSJ4
wGD1 ~~ wGD1
wGD2 ~~ vx2*wGD2
wGD3 ~~ vx2*wGD3
wGD4 ~~ vx2*wGD4
wGCM1 ~~ wGCM1
wGCM2 ~~ vy*wGCM2
wGCM3 ~~ vy*wGCM3
wGCM4 ~~ vy*wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
GD ~~ GD
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + GD + GCM ~~ 0*wSJ1 + 0*wGD1 + 0*wGCM1
'

# Fit the model
RICLPM4B_m3.fit <- lavaan(RICLPM4B_m3, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T, )

# Summarize the results
summary(RICLPM4B_m3.fit, fit = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM4B_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4B_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4B_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM4B_m1.fit, RICLPM4B_m2.fit)
lrtest(RICLPM4B_m3.fit, RICLPM4B_m2.fit)
lrtest(RICLPM4B_m1.fit, RICLPM4B_m3.fit)

# model 3 is the best fitting model
RICLPM4B_m3_table <- sem_tables(RICLPM4B_m3.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM4B_m3_table

gtsave(RICLPM4B_m3_table, "RICLPM4B_m3.rtf")
```

## Creating scales for mod 5

## General conspiracy mentality -\> Political Partisanship media profile -\> COVID_CT

```{r}
## General conspiracy mentality
FULLDATA$GCM_W1 <- scale(FULLDATA$GCM_W1, center = T, scale = T)
FULLDATA$GCM_W2 <- scale(FULLDATA$GCM_W2, center = T, scale = T)
FULLDATA$GCM_W3 <- scale(FULLDATA$GCM_W3, center = T, scale = T)
FULLDATA$GCM_W4 <- scale(FULLDATA$GCM_W4, center = T, scale = T)

## Political Partisanship media profile
FULLDATA$PPMP_W1 <- scale(FULLDATA$PPMP_W1, center = T, scale = T)
FULLDATA$PPMP_W2 <- scale(FULLDATA$PPMP_W2, center = T, scale = T)
FULLDATA$PPMP_W3 <- scale(FULLDATA$PPMP_W3, center = T, scale = T)
FULLDATA$PPMP_W4 <- scale(FULLDATA$PPMP_W4, center = T, scale = T)

## creating and double centering interaction term
FULLDATA$int_term1 <- FULLDATA$GCM_W1 * FULLDATA$PPMP_W1
FULLDATA$int_term2 <- FULLDATA$GCM_W2 * FULLDATA$PPMP_W2
FULLDATA$int_term3 <- FULLDATA$GCM_W3 * FULLDATA$PPMP_W3
FULLDATA$int_term4 <- FULLDATA$GCM_W4 * FULLDATA$PPMP_W4

FULLDATA$int_term1 <- scale(FULLDATA$int_term1, center = T, scale = T)
FULLDATA$int_term2 <- scale(FULLDATA$int_term2, center = T, scale = T)
FULLDATA$int_term3 <- scale(FULLDATA$int_term3, center = T, scale = T)
FULLDATA$int_term4 <- scale(FULLDATA$int_term4, center = T, scale = T)
```

## H6 - RLCPM 5

```{r, results='asis'}
## Specify unconstrained model
RICLPM5_m1 <- '
    # Create between components (random intercepts)
  GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4
  CCB =~ 1*CCB_W1 + 1*CCB_W2 + 1*CCB_W3 + 1*CCB_W4
  PPMP =~ 1*PPMP_W1 + 1*PPMP_W2 + 1*PPMP_W3 + 1*PPMP_W4 
  int_term =~ 1*int_term1 + 1*int_term2 + 1*int_term3 + 1*int_term4

# Create within-person-centered variables including moderation for within differences
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4
wPPMP1 =~ 1*PPMP_W1
wPPMP2 =~ 1*PPMP_W2
wPPMP3 =~ 1*PPMP_W3
wPPMP4 =~ 1*PPMP_W4
wINT_TERM1 =~ 1*int_term1
wINT_TERM2 =~ 1*int_term2
wINT_TERM3 =~ 1*int_term3
wINT_TERM4 =~ 1*int_term4
wCCB1 =~ 1*CCB_W1
wCCB2 =~ 1*CCB_W2
wCCB3 =~ 1*CCB_W3
wCCB4 =~ 1*CCB_W4


# Modify the lagged effects to include the interaction terms between within-person variables
wGCM2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wPPMP2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wINT_TERM2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wCCB2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wGCM3 ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wPPMP3  ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wINT_TERM3 ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wCCB3 ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wGCM4 ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3
wPPMP4  ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3
wINT_TERM4 ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3
wCCB4 ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3

## estimate lagged effects between between-person variables (moderation)
CCB ~ GCM + PPMP + int_term

# Estimate covariance between within-person variables at wave 1
wGCM1 ~~ wCCB1
wGCM1 ~~ wPPMP1
wGCM1 ~~ wINT_TERM1
wCCB1 ~~ wPPMP1
wCCB1 ~~ wINT_TERM1
wPPMP1 ~~ wINT_TERM1

# Estimate covariances between residuals of within-person-centered variables (waves 2 - 4)
wGCM2 ~~ wCCB2
wGCM2 ~~ wPPMP2
wGCM2 ~~ wINT_TERM2
wCCB2 ~~ wPPMP2
wCCB2 ~~ wINT_TERM2
wPPMP2 ~~ wINT_TERM2
wGCM3 ~~ wCCB3
wGCM3 ~~ wPPMP3
wGCM3 ~~ wINT_TERM3
wCCB3 ~~ wPPMP3
wCCB3 ~~ wINT_TERM3
wPPMP3 ~~ wINT_TERM3
wGCM4 ~~ wCCB4
wGCM4 ~~ wPPMP4
wGCM4 ~~ wINT_TERM4
wCCB4 ~~ wPPMP4
wCCB4 ~~ wINT_TERM4
wPPMP4 ~~ wINT_TERM4

# Estimate (residual) variance of within-person centered variables
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4
wPPMP1 ~~ wPPMP1
wPPMP2 ~~ wPPMP2
wPPMP3 ~~ wPPMP3
wPPMP4 ~~ wPPMP4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ wINT_TERM2
wINT_TERM3 ~~ wINT_TERM3
wINT_TERM4 ~~ wINT_TERM4
wCCB1 ~~ wCCB1
wCCB2 ~~ wCCB2
wCCB3 ~~ wCCB3
wCCB4 ~~ wCCB4

# Estimate (residual) variance of random intercepts of endogenous variables
GCM ~~ GCM
PPMP ~~ PPMP
int_term ~~ int_term
CCB ~~ CCB

## Additional mods
PPMP ~~ int_term
'

# Fit the model
RICLPM5_m1.fit <- lavaan(RICLPM5_m1, data = FULLDATA, meanstructure = T, int.ov.free = T,
                         missing = "fiml", estimator = "MLR")

resid(RICLPM5_m1.fit, type = "standardized")
# Summarize the results
summary(RICLPM5_m1.fit, fit.measures = T, standardized = T)


# Specify partially constrained model
RICLPM5_m2 <- '
    # Create between components (random intercepts)
  GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4
  CCB =~ 1*CCB_W1 + 1*CCB_W2 + 1*CCB_W3 + 1*CCB_W4
  PPMP =~ 1*PPMP_W1 + 1*PPMP_W2 + 1*PPMP_W3 + 1*PPMP_W4 
  int_term =~ 1*int_term1 + 1*int_term2 + 1*int_term3 + 1*int_term4

# Create within-person-centered variables including moderation for within differences
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4
wPPMP1 =~ 1*PPMP_W1
wPPMP2 =~ 1*PPMP_W2
wPPMP3 =~ 1*PPMP_W3
wPPMP4 =~ 1*PPMP_W4
wINT_TERM1 =~ 1*int_term1
wINT_TERM2 =~ 1*int_term2
wINT_TERM3 =~ 1*int_term3
wINT_TERM4 =~ 1*int_term4
wCCB1 =~ 1*CCB_W1
wCCB2 =~ 1*CCB_W2
wCCB3 =~ 1*CCB_W3
wCCB4 =~ 1*CCB_W4


# Modify the lagged effects to include the interaction terms between within-person variables
wGCM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wPPMP2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wINT_TERM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wCCB2 ~ cl_y1*wGCM1 + cl_y2*wPPMP1 + cl_y3*wINT_TERM1 + ar_y*wCCB1
wGCM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wPPMP3  ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wINT_TERM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wCCB3 ~ cl_y1*wGCM2 + cl_y2*wPPMP2 + cl_y3*wINT_TERM2 + ar_y*wCCB2
wGCM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wPPMP4  ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wINT_TERM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wCCB4 ~ cl_y1*wGCM3 + cl_y2*wPPMP3 + cl_y3*wINT_TERM3 + ar_y*wCCB3

## estimate lagged effects between between-person variables (moderation)
CCB ~ GCM + PPMP + int_term
 
# Estimate covariance between within-person variables at wave 1
wGCM1 ~~ wCCB1
wGCM1 ~~ wPPMP1
wGCM1 ~~ wINT_TERM1
wCCB1 ~~ wPPMP1
wCCB1 ~~ wINT_TERM1
wPPMP1 ~~ wINT_TERM1

# Estimate covariances between residuals of within-person-centered variables (waves 2 - 4)
wGCM2 ~~ wCCB2
wGCM2 ~~ wPPMP2
wGCM2 ~~ wINT_TERM2
wCCB2 ~~ wPPMP2
wCCB2 ~~ wINT_TERM2
wPPMP2 ~~ wINT_TERM2
wGCM3 ~~ wCCB3
wGCM3 ~~ wPPMP3
wGCM3 ~~ wINT_TERM3
wCCB3 ~~ wPPMP3
wCCB3 ~~ wINT_TERM3
wPPMP3 ~~ wINT_TERM3
wGCM4 ~~ wCCB4
wGCM4 ~~ wPPMP4
wGCM4 ~~ wINT_TERM4
wCCB4 ~~ wPPMP4
wCCB4 ~~ wINT_TERM4
wPPMP4 ~~ wINT_TERM4

# Estimate (residual) variance of within-person centered variables
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4
wPPMP1 ~~ wPPMP1
wPPMP2 ~~ wPPMP2
wPPMP3 ~~ wPPMP3
wPPMP4 ~~ wPPMP4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ wINT_TERM2
wINT_TERM3 ~~ wINT_TERM3
wINT_TERM4 ~~ wINT_TERM4
wCCB1 ~~ wCCB1
wCCB2 ~~ wCCB2
wCCB3 ~~ wCCB3
wCCB4 ~~ wCCB4

# Estimate (residual) variance of random intercepts of endogenous variables
GCM ~~ GCM
PPMP ~~ PPMP
int_term ~~ int_term
CCB ~~ CCB

# Constrain covariance of the between factors and exogenous within factors to 0. 
GCM + PPMP + int_term + CCB ~~ 0*wGCM1 + 0*wPPMP1 + 0*wINT_TERM1 + 0*wCCB1

## additional mods
PPMP ~~ int_term
'

# Fit the model
RICLPM5_m2.fit <- lavaan(RICLPM5_m2, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                         missing = "fiml", estimator = "MLR")

# Summarize the results
summary(RICLPM5_m2.fit, fit.measures = T, standardized = T)

## Specify fully constrained model
RICLPM5_m3 <- '
    # Create between components (random intercepts)
  GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4
  CCB =~ 1*CCB_W1 + 1*CCB_W2 + 1*CCB_W3 + 1*CCB_W4
  PPMP =~ 1*PPMP_W1 + 1*PPMP_W2 + 1*PPMP_W3 + 1*PPMP_W4 
  int_term =~ 1*int_term1 + 1*int_term2 + 1*int_term3 + 1*int_term4

# Create within-person-centered variables including moderation for within differences
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4
wPPMP1 =~ 1*PPMP_W1
wPPMP2 =~ 1*PPMP_W2
wPPMP3 =~ 1*PPMP_W3
wPPMP4 =~ 1*PPMP_W4
wINT_TERM1 =~ 1*int_term1
wINT_TERM2 =~ 1*int_term2
wINT_TERM3 =~ 1*int_term3
wINT_TERM4 =~ 1*int_term4
wCCB1 =~ 1*CCB_W1
wCCB2 =~ 1*CCB_W2
wCCB3 =~ 1*CCB_W3
wCCB4 =~ 1*CCB_W4


# Modify the lagged effects to include the interaction terms between within-person variables
wGCM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wPPMP2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wINT_TERM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wCCB2 ~ cl_y1*wGCM1 + cl_y2*wPPMP1 + cl_y3*wINT_TERM1 + ar_y*wCCB1
wGCM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wPPMP3  ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wINT_TERM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wCCB3 ~ cl_y1*wGCM2 + cl_y2*wPPMP2 + cl_y3*wINT_TERM2 + ar_y*wCCB2
wGCM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wPPMP4  ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wINT_TERM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wCCB4 ~ cl_y1*wGCM3 + cl_y2*wPPMP3 + cl_y3*wINT_TERM3 + ar_y*wCCB3

## estimate lagged effects between between-person variables (moderation)
CCB ~ GCM + PPMP + int_term

# Constrained intercepts over time 
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1
PPMP_W1 + PPMP_W2 + PPMP_W3 + PPMP_W4 ~ i_ppmp*1
int_term1 + int_term2 + int_term3 + int_term4 ~ i_int*1
CCB_W1 + CCB_W2 + CCB_W3 + CCB_W4 ~ i_ccb*1
 
# Estimate covariance between within-person variables at wave 1
wGCM1 ~~ wCCB1
wGCM1 ~~ wPPMP1
wGCM1 ~~ wINT_TERM1
wCCB1 ~~ wPPMP1
wCCB1 ~~ wINT_TERM1
wPPMP1 ~~ wINT_TERM1

# Estimate covariances between residuals of within-person-centered variables (waves 2 - 4)
wGCM2 ~~ wCCB2
wGCM2 ~~ wPPMP2
wGCM2 ~~ wINT_TERM2
wCCB2 ~~ wPPMP2
wCCB2 ~~ wINT_TERM2
wPPMP2 ~~ wINT_TERM2
wGCM3 ~~ wCCB3
wGCM3 ~~ wPPMP3
wGCM3 ~~ wINT_TERM3
wCCB3 ~~ wPPMP3
wCCB3 ~~ wINT_TERM3
wPPMP3 ~~ wINT_TERM3
wGCM4 ~~ wCCB4
wGCM4 ~~ wPPMP4
wGCM4 ~~ wINT_TERM4
wCCB4 ~~ wPPMP4
wCCB4 ~~ wINT_TERM4
wPPMP4 ~~ wINT_TERM4

# Estimate (residual) variance of within-person centered variables (constrained start w = 2)
wGCM1 ~~ wGCM1
wGCM2 ~~ vx1*wGCM2
wGCM3 ~~ vx1*wGCM3
wGCM4 ~~ vx1*wGCM4
wPPMP1 ~~ wPPMP1
wPPMP2 ~~ vx2*wPPMP2
wPPMP3 ~~ vx2*wPPMP3
wPPMP4 ~~ vx2*wPPMP4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ vx3*wINT_TERM2
wINT_TERM3 ~~ vx3*wINT_TERM3
wINT_TERM4 ~~ vx3*wINT_TERM4
wCCB1 ~~ wCCB1
wCCB2 ~~ vy*wCCB2
wCCB3 ~~ vy*wCCB3
wCCB4 ~~ vy*wCCB4

# Estimate (residual) variance of random intercepts of endogenous variables
GCM ~~ GCM
PPMP ~~ PPMP
int_term ~~ int_term
CCB ~~ CCB

# Constrain covariance of the between factors and exogenous within factors to 0. 
GCM + PPMP + int_term + CCB ~~ 0*wGCM1 + 0*wPPMP1 + 0*wINT_TERM1 + 0*wCCB1

## additional mods
PPMP ~~ int_term
'

# Fit the model
RICLPM5_m3.fit <- lavaan(RICLPM5_m3, data = FULLDATA, meanstructure = T, int.ov.free = T, missing = "fiml", 
                      estimator = "MLR")

# Summarize the results
summary(RICLPM5_m3.fit, fit.measures = T, standardized = T)


# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM5_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM5_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM5_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM5_m1.fit, RICLPM5_m2.fit)
lrtest(RICLPM5_m2.fit, RICLPM5_m3.fit)
lrtest(RICLPM5_m1.fit, RICLPM5_m3.fit)

## probe best fitting model (model 1)
probe <- probe2WayMC(RICLPM5_m1.fit, c("GCM", "PPMP", "int_term"), "CCB", "PPMP", c(-sqrt(1.403), 0, sqrt(1.403)))

probe
plotProbe(probe, xlab = "General Conspiracy Mentality", ylab = "COVID-19 Conspiracy Beliefs", c(-3,3), legend = T, legendArgs = list(title = "Political Partisanship Media Profile"))

## build table for model 1
RICLPM5_m1_table <- sem_tables(RICLPM5_m1.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)
RICLPM5_m1_table

gtsave(RICLPM5_m1_table, "RICLPM5_m1.rtf")
```



#################################################
CODE FOR TWO GROUP BASED ANALYSES (RIGHT VS LEFT)
#################################################
```{r}
RICLPM1_m1 <- '
    # Create between components (random intercepts)
    SO =~ 1*SO_W1 + 1*SO_W2 + 1*SO_W3 + 1*SO_W4
    PPII =~ 1*PPII_W1 + 1*PPII_W2 + 1*PPII_W3 + 1*PPII_W4
    EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
    PMAP =~ 1*PMAP_W1 + 1*PMAP_W2 + 1*PMAP_W3 + 1*PMAP_W4
    EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
    

  # Create within-person-centered variables
wSO1 =~ 1*SO_W1
wSO2 =~ 1*SO_W2
wSO3 =~ 1*SO_W3
wSO4 =~ 1*SO_W4
wPPII1 =~ 1*PPII_W1
wPPII2 =~ 1*PPII_W2
wPPII3 =~ 1*PPII_W3
wPPII4 =~ 1*PPII_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wPMAP1 =~ 1*PMAP_W1
wPMAP2 =~ 1*PMAP_W2
wPMAP3 =~ 1*PMAP_W3
wPMAP4 =~ 1*PMAP_W4
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4


  # Estimate lagged effects between within-person-centered variables 
wSO2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wPPII2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wEA2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wPMAP2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wEI2 ~ wSO1 + wPPII1 + wEA1 + wPMAP1 + wEI1

wSO3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wPPII3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wEA3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wPMAP3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wEI3 ~ wSO2 + wPPII2 + wEA2 + wPMAP2 + wEI2

wSO4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wPPII4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wEA4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wPMAP4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

wEI4 ~ wSO3 + wPPII3 + wEA3 + wPMAP3 + wEI3

## Estimate lagged effects between between-person variables
EI ~ SO 
EI ~ PPII 
EI ~ EA 
EI ~ PMAP 

# Estimate covariance between within-person variables at wave 1
wSO1 ~~ wPPII1
wSO1 ~~ wEA1  
wSO1 ~~ wPMAP1
wSO1 ~~ wEI1
wPPII1 ~~ wEA1
wPPII1 ~~ wPMAP1
wPPII1 ~~ wEI1
wEA1 ~~ wPMAP1
wEA1 ~~ wEI1
wPMAP1 ~~ wEI1

# Estimate covariances between residuals of within-person centered variables waves 2 and 3
wSO2 ~~ wPPII2
wSO2 ~~ wEA2  
wSO2 ~~ wPMAP2
wSO2 ~~ wEI2
wPPII2 ~~ wEA2
wPPII2 ~~ wPMAP2
wPPII2 ~~ wEI2
wEA2 ~~ wPMAP2
wEA2 ~~ wEI2
wPMAP2 ~~ wEI2
wSO3 ~~ wPPII3
wSO3 ~~ wEA3 
wSO3 ~~ wPMAP3
wSO3 ~~ wEI3
wPPII3 ~~ wEA3
wPPII3 ~~ wPMAP3
wPPII3 ~~ wEI3
wEA3 ~~ wPMAP3
wEA3 ~~ wEI3
wPMAP3 ~~ wEI3
wSO4 ~~ wPPII4
wSO4 ~~ wEA4
wSO4 ~~ wPMAP4
wSO4 ~~ wEI4
wPPII4 ~~ wEA4
wPPII4 ~~ wPMAP4
wPPII4 ~~ wEI4
wEA4 ~~ wPMAP4
wEA4 ~~ wEI4
wPMAP4 ~~ wEI4

  # Estimate variance and covariance of random intercepts
SO ~~ SO
PPII ~~ PPII
EA ~~ EA
PMAP ~~ PMAP
EI ~~ EI
SO ~~ PPII
SO ~~ EA
SO ~~ PMAP
SO ~~ EI
PPII ~~ EA
PPII ~~ PMAP
PPII ~~ EI
EA ~~ PMAP
EA ~~ EI
PMAP ~~ EI

# Estimate (residual) variance of within-person centered variables
wSO1 ~~ wSO1
wSO2 ~~ wSO2
wSO3 ~~ wSO3
wSO4 ~~ wSO4
wPPII1 ~~ wPPII1
wPPII2 ~~ wPPII2
wPPII3 ~~ wPPII3
wPPII4 ~~ wPPII4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wPMAP1 ~~ wPMAP1
wPMAP2 ~~ wPMAP2
wPMAP3 ~~ wPMAP3
wPMAP4 ~~ wPMAP4
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4

# further mods
wEA1 ~~ wEA2
'

# Fit the model
RICLPM1_m1.fit <- lavaan(RICLPM1_m1, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                       missing = "fiml", estimator = "MLR", group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM1_m1.fit, fit.measures = T, standardized = T)
resid(RICLPM1_m1.fit, type = "standardized")


# Specify  partially constrained  model
RICLPM1_m2 <- '
    # Create between components (random intercepts)
    SO =~ 1*SO_W1 + 1*SO_W2 + 1*SO_W3 + 1*SO_W4
    PPII =~ 1*PPII_W1 + 1*PPII_W2 + 1*PPII_W3 + 1*PPII_W4
    EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
    PMAP =~ 1*PMAP_W1 + 1*PMAP_W2 + 1*PMAP_W3 + 1*PMAP_W4
    EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
    

  # Create within-person-centered variables
wSO1 =~ 1*SO_W1
wSO2 =~ 1*SO_W2
wSO3 =~ 1*SO_W3
wSO4 =~ 1*SO_W4
wPPII1 =~ 1*PPII_W1
wPPII2 =~ 1*PPII_W2
wPPII3 =~ 1*PPII_W3
wPPII4 =~ 1*PPII_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wPMAP1 =~ 1*PMAP_W1
wPMAP2 =~ 1*PMAP_W2
wPMAP3 =~ 1*PMAP_W3
wPMAP4 =~ 1*PMAP_W4
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4

# Constrained intercepts over time 
SO_W1 + SO_W2 + SO_W3 + SO_W4 ~ i_so*1
PPII_W1 + PPII_W2 + PPII_W3 + PPII_W4 ~ i_ppii*1
EA_W1 + EA_W2 + EA_W3 + EA_W4 ~ i_ea*1
PMAP_W1 + PMAP_W2 + PMAP_W3 + PMAP_W4 ~ i_pmap*1
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1


 # Estimate lagged effects between within-person-centered variables (constrained)
wSO2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPPII2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEA2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPMAP2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEI2 ~ cl_y1*wSO1 + cl_y2*wPPII1 + cl_y3*wEA1 + cl_y4*wPMAP1 + ar_y*wEI1

wSO3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPPII3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEA3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPMAP3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEI3 ~ cl_y1*wSO2 + cl_y2*wPPII2 + cl_y3*wEA2 + cl_y4*wPMAP2 + ar_y*wEI2

wSO4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPPII4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEA4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPMAP4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEI4 ~ cl_y1*wSO3 + cl_y2*wPPII3 + cl_y3*wEA3 + cl_y4*wPMAP3 + ar_y*wEI3

## Estimate laged effects between between-person variables
EI ~ SO 
EI ~ PPII 
EI ~ EA 
EI ~ PMAP 

# Estimate covariance between within-person variables at wave 1
wSO1 ~~ wPPII1
wSO1 ~~ wEA1  
wSO1 ~~ wPMAP1
wSO1 ~~ wEI1
wPPII1 ~~ wEA1
wPPII1 ~~ wPMAP1
wPPII1 ~~ wEI1
wEA1 ~~ wPMAP1
wEA1 ~~ wEI1
wPMAP1 ~~ wEI1

# Estimate covariances between residuals of within-person centered variables waves 2 and 3
wSO2 ~~ wPPII2
wSO2 ~~ wEA2  
wSO2 ~~ wPMAP2
wSO2 ~~ wEI2
wPPII2 ~~ wEA2
wPPII2 ~~ wPMAP2
wPPII2 ~~ wEI2
wEA2 ~~ wPMAP2
wEA2 ~~ wEI2
wPMAP2 ~~ wEI2
wSO3 ~~ wPPII3
wSO3 ~~ wEA3 
wSO3 ~~ wPMAP3
wSO3 ~~ wEI3
wPPII3 ~~ wEA3
wPPII3 ~~ wPMAP3
wPPII3 ~~ wEI3
wEA3 ~~ wPMAP3
wEA3 ~~ wEI3
wPMAP3 ~~ wEI3
wSO4 ~~ wPPII4
wSO4 ~~ wEA4
wSO4 ~~ wPMAP4
wSO4 ~~ wEI4
wPPII4 ~~ wEA4
wPPII4 ~~ wPMAP4
wPPII4 ~~ wEI4
wEA4 ~~ wPMAP4
wEA4 ~~ wEI4
wPMAP4 ~~ wEI4

  # Estimate variance and covariance of random intercepts
SO ~~ SO
PPII ~~ PPII
EA ~~ EA
PMAP ~~ PMAP
EI ~~ EI
SO ~~ PPII
SO ~~ EA
SO ~~ PMAP
SO ~~ EI
PPII ~~ EA
PPII ~~ PMAP
PPII ~~ EI
EA ~~ PMAP
EA ~~ EI
PMAP ~~ EI

# Estimate (residual) variance of within-person centered variables
wSO1 ~~ wSO1
wSO2 ~~ wSO2
wSO3 ~~ wSO3
wSO4 ~~ wSO4
wPPII1 ~~ wPPII1
wPPII2 ~~ wPPII2
wPPII3 ~~ wPPII3
wPPII4 ~~ wPPII4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wPMAP1 ~~ wPMAP1
wPMAP2 ~~ wPMAP2
wPMAP3 ~~ wPMAP3
wPMAP4 ~~ wPMAP4
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4

 # Constrain covariance of the between factors and exogenous within factors to 0. 
SO + PPII + EA + PMAP + EI ~~ 0*wSO1 + 0*wPPII1 + 0*wEA1 + 0*wPMAP1 + 0*wEI1

# further mods
wEA1 ~~ wEA2
'

# Fit the model
RICLPM1_m2.fit <- lavaan(RICLPM1_m2, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                      missing = "fiml", estimator = "MLR", group = "Political_Orientation_group_W1")

resid(RICLPM1_m2.fit, type = "standardized")

# Summarize the results
summary(RICLPM1_m2.fit, fit.measures = T, standardized = T)


# Specify  fully constrained  model
RICLPM1_m3 <- '
    # Create between components (random intercepts)
    SO =~ 1*SO_W1 + 1*SO_W2 + 1*SO_W3 + 1*SO_W4
    PPII =~ 1*PPII_W1 + 1*PPII_W2 + 1*PPII_W3 + 1*PPII_W4
    EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
    PMAP =~ 1*PMAP_W1 + 1*PMAP_W2 + 1*PMAP_W3 + 1*PMAP_W4
    EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
    

  # Create within-person-centered variables
wSO1 =~ 1*SO_W1
wSO2 =~ 1*SO_W2
wSO3 =~ 1*SO_W3
wSO4 =~ 1*SO_W4
wPPII1 =~ 1*PPII_W1
wPPII2 =~ 1*PPII_W2
wPPII3 =~ 1*PPII_W3
wPPII4 =~ 1*PPII_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wPMAP1 =~ 1*PMAP_W1
wPMAP2 =~ 1*PMAP_W2
wPMAP3 =~ 1*PMAP_W3
wPMAP4 =~ 1*PMAP_W4
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4

# Constrained intercepts over time 
SO_W1 + SO_W2 + SO_W3 + SO_W4 ~ i_so*1
PPII_W1 + PPII_W2 + PPII_W3 + PPII_W4 ~ i_ppii*1
EA_W1 + EA_W2 + EA_W3 + EA_W4 ~ i_ea*1
PMAP_W1 + PMAP_W2 + PMAP_W3 + PMAP_W4 ~ i_pmap*1
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1


 # Estimate lagged effects between within-person-centered variables (constrained)
wSO2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPPII2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEA2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wPMAP2 ~ ar_x1*wSO1 + ar_x2*wPPII1 + ar_x3*wEA1 + ar_x4*wPMAP1 + cl_x*wEI1

wEI2 ~ cl_y1*wSO1 + cl_y2*wPPII1 + cl_y3*wEA1 + cl_y4*wPMAP1 + ar_y*wEI1

wSO3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPPII3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEA3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wPMAP3 ~ ar_x1*wSO2 + ar_x2*wPPII2 + ar_x3*wEA2 + ar_x4*wPMAP2 + cl_x*wEI2

wEI3 ~ cl_y1*wSO2 + cl_y2*wPPII2 + cl_y3*wEA2 + cl_y4*wPMAP2 + ar_y*wEI2

wSO4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPPII4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEA4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wPMAP4 ~ ar_x1*wSO3 + ar_x2*wPPII3 + ar_x3*wEA3 + ar_x4*wPMAP3 + cl_x*wEI3

wEI4 ~ cl_y1*wSO3 + cl_y2*wPPII3 + cl_y3*wEA3 + cl_y4*wPMAP3 + ar_y*wEI3

## Estimate laged effects between between-person variables
EI ~ SO 
EI ~ PPII 
EI ~ EA 
EI ~ PMAP 

# Estimate covariance between within-person variables at wave 1
wSO1 ~~ wPPII1
wSO1 ~~ wEA1  
wSO1 ~~ wPMAP1
wSO1 ~~ wEI1
wPPII1 ~~ wEA1
wPPII1 ~~ wPMAP1
wPPII1 ~~ wEI1
wEA1 ~~ wPMAP1
wEA1 ~~ wEI1
wPMAP1 ~~ wEI1

# Estimate covariances between residuals of within-person centered variables waves 2 and 3
wSO2 ~~ wPPII2
wSO2 ~~ wEA2  
wSO2 ~~ wPMAP2
wSO2 ~~ wEI2
wPPII2 ~~ wEA2
wPPII2 ~~ wPMAP2
wPPII2 ~~ wEI2
wEA2 ~~ wPMAP2
wEA2 ~~ wEI2
wPMAP2 ~~ wEI2
wSO3 ~~ wPPII3
wSO3 ~~ wEA3 
wSO3 ~~ wPMAP3
wSO3 ~~ wEI3
wPPII3 ~~ wEA3
wPPII3 ~~ wPMAP3
wPPII3 ~~ wEI3
wEA3 ~~ wPMAP3
wEA3 ~~ wEI3
wPMAP3 ~~ wEI3
wSO4 ~~ wPPII4
wSO4 ~~ wEA4
wSO4 ~~ wPMAP4
wSO4 ~~ wEI4
wPPII4 ~~ wEA4
wPPII4 ~~ wPMAP4
wPPII4 ~~ wEI4
wEA4 ~~ wPMAP4
wEA4 ~~ wEI4
wPMAP4 ~~ wEI4

  # Estimate variance and covariance of random intercepts
SO ~~ SO
PPII ~~ PPII
EA ~~ EA
PMAP ~~ PMAP
EI ~~ EI
SO ~~ PPII
SO ~~ EA
SO ~~ PMAP
SO ~~ EI
PPII ~~ EA
PPII ~~ PMAP
PPII ~~ EI
EA ~~ PMAP
EA ~~ EI
PMAP ~~ EI

# Estimate (residual) variance of within-person centered variables starting with w = 2 (constrained)
wSO1 ~~ wSO1
wSO2 ~~ vx1*wSO2
wSO3 ~~ vx1*wSO3
wSO4 ~~ vx1*wSO4
wPPII1 ~~ wPPII1
wPPII2 ~~ vx2*wPPII2
wPPII3 ~~ vx2*wPPII3
wPPII4 ~~ vx2*wPPII4
wEA1 ~~ wEA1
wEA2 ~~ vx3*wEA2
wEA3 ~~ vx3*wEA3
wEA4 ~~ vx3*wEA4
wPMAP1 ~~ wPMAP1
wPMAP2 ~~ vx4*wPMAP2
wPMAP3 ~~ vx4*wPMAP3
wPMAP4 ~~ vx4*wPMAP4
wEI1 ~~ wEI1
wEI2 ~~ vy*wEI2
wEI3 ~~ vy*wEI3
wEI4 ~~ vy*wEI4
  
  # Constrain covariance of the between factors and exogenous within factors to 0. 
SO + PPII + EA + PMAP + EI ~~ 0*wSO1 + 0*wPPII1 + 0*wEA1 + 0*wPMAP1 + 0*wEI1

# further mods
wEA1 ~~ wEA2
'

# Fit the model
RICLPM1_m3.fit <- lavaan(RICLPM1_m3, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                      missing = "fiml", estimator = "MLR", group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM1_m3.fit, fit.measures = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM1_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM1_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM1_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

## Likelihood Ratio Test used to compare models Gonzales & Griffin (2001)
lrtest(RICLPM1_m1.fit, RICLPM1_m2.fit)
lrtest(RICLPM1_m3.fit, RICLPM1_m2.fit)
lrtest(RICLPM1_m1.fit, RICLPM1_m3.fit)


## MODEL 2 BEST FITTING MODEL ACCORDING TO MODEL COMPARISONS and LRT results
## Create table for mod 2

RICLPM1_m2_table <- sem_tables(RICLPM1_m2.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM1_m2_table

gtsave(RICLPM1_m2_table, "RICLPM1_m2.rtf")

```

## Creating scales for mod 2 and 3

```{r}
## Event Impact
FULLDATA$EI_W1 <- scale(FULLDATA$EI_W1, center = T, scale = T)
FULLDATA$EI_W2 <- scale(FULLDATA$EI_W2, center = T, scale = T)
FULLDATA$EI_W3 <- scale(FULLDATA$EI_W3, center = T, scale = T)
FULLDATA$EI_W4 <- scale(FULLDATA$EI_W4, center = T, scale = T)

## Political Orientation 
FULLDATA$Pol_Orientation_W1 <- scale(FULLDATA$Pol_Orientation_W1, center = T, scale = T)
FULLDATA$Pol_Orientation_W2 <- scale(FULLDATA$Pol_Orientation_W2, center = T, scale = T)
FULLDATA$Pol_Orientation_W3 <- scale(FULLDATA$Pol_Orientation_W3, center = T, scale = T)
FULLDATA$Pol_Orientation_W4 <- scale(FULLDATA$Pol_Orientation_W4, center = T, scale = T)

## Emotion Appraisal
FULLDATA$EMOTION_APPRAISAL_W1 <- scale(FULLDATA$EMOTION_APPRAISAL_W1, center = T, scale = T)
FULLDATA$EMOTION_APPRAISAL_W2 <- scale(FULLDATA$EMOTION_APPRAISAL_W2, center = T, scale = T)
FULLDATA$EMOTION_APPRAISAL_W3 <- scale(FULLDATA$EMOTION_APPRAISAL_W3, center = T, scale = T)
FULLDATA$EMOTION_APPRAISAL_W4 <- scale(FULLDATA$EMOTION_APPRAISAL_W4, center = T, scale = T)
```

## H2 to 4B - RLCPM 2-4

## removed time invariant moderator since it doesn't vary.

## See more details and reporting in supp materials

## Event impact -\> Political orientation -\> system justification

```{r}
## Specify unconstrained model
 RICLPM2_m1 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 POL =~ 1*Pol_Orientation_W1 + 1*Pol_Orientation_W2 + 1*Pol_Orientation_W3 + 1*Pol_Orientation_W4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wPOL1 =~ 1*Pol_Orientation_W1
wPOL2 =~ 1*Pol_Orientation_W2
wPOL3 =~ 1*Pol_Orientation_W3
wPOL4 =~ 1*Pol_Orientation_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ wEI1 + wPOL1 + wSJ1  
wPOL2 ~ wEI1 + wPOL1 + wSJ1 
wSJ2 ~ wEI1 + wPOL1 + wSJ1  
wEI3 ~ wEI2 + wPOL2 + wSJ2 
wPOL3 ~ wEI2 + wPOL2 + wSJ2 
wSJ3 ~ wEI2 + wPOL2 + wSJ2 
wEI4 ~ wEI3 + wPOL3 + wSJ3 
wPOL4 ~ wEI3 + wPOL3 + wSJ3 
wSJ4 ~ wEI3 + wPOL3 + wSJ3 

# Estimate lagged mediation effects between between-person variables
SJ ~ c*EI
POL ~ a*EI
SJ ~ b*POL 

# Indirect and total effects (between)
direct:= c
ab:= a*b
total:= ab+c

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wPOL1
wEI1 ~~ wSJ1  
wPOL1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wPOL2
wEI2 ~~ wSJ2  
wPOL2 ~~ wSJ2
wEI3 ~~ wPOL3
wEI3 ~~ wSJ3
wPOL3 ~~ wSJ3
wEI4 ~~ wPOL4
wEI4 ~~ wSJ4
wPOL4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wPOL1 ~~ wPOL1
wPOL2 ~~ wPOL2
wPOL3 ~~ wPOL3
wPOL4 ~~ wPOL4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
POL ~~ POL
SJ ~~ SJ
'
# Fit the model
RICLPM2_m1.fit <- lavaan(RICLPM2_m1, data = FULLDATA,  
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T, 
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM2_m1.fit, fit = T, standardized = T)

# Specify partially constrained model
RICLPM2_m2 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 POL =~ 1*Pol_Orientation_W1 + 1*Pol_Orientation_W2 + 1*Pol_Orientation_W3 + 1*Pol_Orientation_W4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wPOL1 =~ 1*Pol_Orientation_W1
wPOL2 =~ 1*Pol_Orientation_W2
wPOL3 =~ 1*Pol_Orientation_W3
wPOL4 =~ 1*Pol_Orientation_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1  
wPOL2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1 
wSJ2 ~ cl_y1*wEI1 + cl_y2*wPOL1 + ar_y*wSJ1  
wEI3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wPOL3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wSJ3 ~ cl_y1*wEI2 + cl_y2*wPOL2 + ar_y*wSJ2 
wEI4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wPOL4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wSJ4 ~ cl_y1*wEI3 + cl_y2*wPOL3 + ar_y*wSJ3 

# Estimate lagged mediation effects between between-person variables
SJ ~ c*EI
POL ~ a*EI
SJ ~ b*POL 

# Indirect and total effects (between)
direct1:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
Pol_Orientation_W1 + Pol_Orientation_W2 + Pol_Orientation_W3 + Pol_Orientation_W4 ~ i_po*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wPOL1
wEI1 ~~ wSJ1  
wPOL1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wPOL2
wEI2 ~~ wSJ2  
wPOL2 ~~ wSJ2
wEI3 ~~ wPOL3
wEI3 ~~ wSJ3
wPOL3 ~~ wSJ3
wEI4 ~~ wPOL4
wEI4 ~~ wSJ4
wPOL4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wPOL1 ~~ wPOL1
wPOL2 ~~ wPOL2
wPOL3 ~~ wPOL3
wPOL4 ~~ wPOL4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
POL ~~ POL
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + POL + SJ ~~ 0*wEI1 + 0*wPOL1 + 0*wSJ1 
'

# Fit the model
RICLPM2_m2.fit <- lavaan(RICLPM2_m2, data = FULLDATA, 
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T,
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM2_m2.fit, fit = T, standardized = T)



# Specify fully constrained model
RICLPM2_m3 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 POL =~ 1*Pol_Orientation_W1 + 1*Pol_Orientation_W2 + 1*Pol_Orientation_W3 + 1*Pol_Orientation_W4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wPOL1 =~ 1*Pol_Orientation_W1
wPOL2 =~ 1*Pol_Orientation_W2
wPOL3 =~ 1*Pol_Orientation_W3
wPOL4 =~ 1*Pol_Orientation_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1  
wPOL2 ~ ar_x1*wEI1 + ar_x2*wPOL1 + cl_x*wSJ1 
wSJ2 ~ cl_y1*wEI1 + cl_y2*wPOL1 + ar_y*wSJ1  
wEI3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wPOL3 ~ ar_x1*wEI2 + ar_x2*wPOL2 + cl_x*wSJ2 
wSJ3 ~ cl_y1*wEI2 + cl_y2*wPOL2 + ar_y*wSJ2 
wEI4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wPOL4 ~ ar_x1*wEI3 + ar_x2*wPOL3 + cl_x*wSJ3 
wSJ4 ~ cl_y1*wEI3 + cl_y2*wPOL3 + ar_y*wSJ3 

# Estimate lagged mediation effects between between-person variables
SJ ~ c*EI
POL ~ a*EI
SJ ~ b*POL 

# Indirect and total effects (between)
direct1:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (within)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
Pol_Orientation_W1 + Pol_Orientation_W2 + Pol_Orientation_W3 + Pol_Orientation_W4 ~ i_po*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wPOL1
wEI1 ~~ wSJ1  
wPOL1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wPOL2
wEI2 ~~ wSJ2  
wPOL2 ~~ wSJ2
wEI3 ~~ wPOL3
wEI3 ~~ wSJ3
wPOL3 ~~ wSJ3
wEI4 ~~ wPOL4
wEI4 ~~ wSJ4
wPOL4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ vx1*wEI2
wEI3 ~~ vx1*wEI3
wEI4 ~~ vx1*wEI4
wPOL1 ~~ wPOL1
wPOL2 ~~ vx2*wPOL2
wPOL3 ~~ vx2*wPOL3
wPOL4 ~~ vx2*wPOL4
wSJ1 ~~ wSJ1
wSJ2 ~~ vy*wSJ2
wSJ3 ~~ vy*wSJ3
wSJ4 ~~ vy*wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
POL ~~ POL
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + POL + SJ ~~ 0*wEI1 + 0*wPOL1 + 0*wSJ1 
'

# Fit the model
RICLPM2_m3.fit <- lavaan(RICLPM2_m3, data = FULLDATA, 
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T,
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM2_m3.fit, fit = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM2_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM2_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM2_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM2_m1.fit, RICLPM2_m2.fit)
lrtest(RICLPM2_m3.fit, RICLPM2_m2.fit)
lrtest(RICLPM2_m1.fit, RICLPM2_m3.fit)

## Best model is model 2
RICLPM2_m2_table <- sem_tables(RICLPM2_m2.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM2_m2_table

gtsave(RICLPM2_m2_table, "RICLPM2_m2.rtf")

```

## RLCPM 3

## Event impact -\> emotional appraisal -\> system justification

## Emotion Appraisal has a negative variance (lv variances are negative) only during the unconstrained model
## but model fit is poor for the partial and fully constrained model

```{r}
## Specify unconstrained model
RICLPM3_m1 <- '
  # Measurement model
    # Create between components (random intercepts)
  EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
  EA =~ 1*EMOTION_APPRAISAL_W1 + 1*EMOTION_APPRAISAL_W2 + 1*EMOTION_APPRAISAL_W3 + 1*EMOTION_APPRAISAL_W4
  SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

 # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EMOTION_APPRAISAL_W1
wEA2 =~ 1*EMOTION_APPRAISAL_W2
wEA3 =~ 1*EMOTION_APPRAISAL_W3
wEA4 =~ 1*EMOTION_APPRAISAL_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

# Estimate lagged effects between within-person-centered variables
wEI2 ~ wEI1 + wEA1 + wSJ1
wEA2 ~ wEI1 + wEA1 + wSJ1
wSJ2 ~ wEI1 + wEA1 + wSJ1
wEI3 ~ wEI2 + wEA2 + wSJ2
wEA3 ~ wEI2 + wEA2 + wSJ2
wSJ3 ~ wEI2 + wEA2 + wSJ2
wEI4 ~ wEI3 + wEA3 + wSJ3
wEA4 ~ wEI3 + wEA3 + wSJ3
wSJ4 ~ wEI3 + wEA3 + wSJ3

# Estimate lagged mediation effects between between-person variables 
SJ ~ c*EI
EA ~ a*EI
SJ ~ b*EA 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wSJ1  
wEA1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wSJ2  
wEA2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wSJ3
wEA3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wSJ4
wEA4 ~~ wSJ4

# Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
SJ ~~ SJ
'

# Fit the model
RICLPM3_m1.fit <- lavaan(RICLPM3_m1, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T, 
                   group = "Political_Orientation_group_W1")

resid(RICLPM3_m1.fit, type = "standardized")
inspect(RICLPM3_m1.fit, "modindices")

# Summarize the results
summary(RICLPM3_m1.fit, fit = T, standardized = T)

# Specify partially constrained model
RICLPM3_m2 <- '
  # Measurement model
    # Create between components (random intercepts)
  EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
  EA =~ 1*EMOTION_APPRAISAL_W1 + 1*EMOTION_APPRAISAL_W2 + 1*EMOTION_APPRAISAL_W3 + 1*EMOTION_APPRAISAL_W4
  SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

 # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EMOTION_APPRAISAL_W1
wEA2 =~ 1*EMOTION_APPRAISAL_W2
wEA3 =~ 1*EMOTION_APPRAISAL_W3
wEA4 =~ 1*EMOTION_APPRAISAL_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

# Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wEA2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wSJ2 ~ cl_y1*wEI1 + cl_y2*wEA1 + ar_y*wSJ1
wEI3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wEA3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wSJ3 ~ cl_y1*wEI2 + cl_y2*wEA2 + ar_y*wSJ2
wEI4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wEA4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wSJ4 ~ cl_y1*wEI3 + cl_y2*wEA3 + ar_y*wSJ3

# Estimate lagged mediation effects between between-person variables 
SJ ~ c*EI
EA ~ a*EI
SJ ~ b*EA 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
EMOTION_APPRAISAL_W1 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 ~ i_ea*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wSJ1  
wEA1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wSJ2  
wEA2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wSJ3
wEA3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wSJ4
wEA4 ~~ wSJ4

# Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + EA + SJ ~~ 0*wEI1 + 0*wEA1 + 0*wSJ1 
'

# Fit the model
RICLPM3_m2.fit <- lavaan(RICLPM3_m2, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T, 
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM3_m2.fit, fit = T, standardized = T)

# Specify fully constrained model
RICLPM3_m3 <- '
  # Measurement model
    # Create between components (random intercepts)
  EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
  EA =~ 1*EMOTION_APPRAISAL_W1 + 1*EMOTION_APPRAISAL_W2 + 1*EMOTION_APPRAISAL_W3 + 1*EMOTION_APPRAISAL_W4
  SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

 # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EMOTION_APPRAISAL_W1
wEA2 =~ 1*EMOTION_APPRAISAL_W2
wEA3 =~ 1*EMOTION_APPRAISAL_W3
wEA4 =~ 1*EMOTION_APPRAISAL_W4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

# Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wEA2 ~ ar_x1*wEI1 + ar_x2*wEA1 + cl_x*wSJ1
wSJ2 ~ cl_y1*wEI1 + cl_y2*wEA1 + ar_y*wSJ1
wEI3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wEA3 ~ ar_x1*wEI2 + ar_x2*wEA2 + cl_x*wSJ2
wSJ3 ~ cl_y1*wEI2 + cl_y2*wEA2 + ar_y*wSJ2
wEI4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wEA4 ~ ar_x1*wEI3 + ar_x2*wEA3 + cl_x*wSJ3
wSJ4 ~ cl_y1*wEI3 + cl_y2*wEA3 + ar_y*wSJ3

# Estimate lagged mediation effects between between-person variables 
SJ ~ c*EI
EA ~ a*EI
SJ ~ b*EA 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
EMOTION_APPRAISAL_W1 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 + EMOTION_APPRAISAL_W2 ~ i_ea*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wSJ1  
wEA1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wSJ2  
wEA2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wSJ3
wEA3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wSJ4
wEA4 ~~ wSJ4

# Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ vx1*wEI2
wEI3 ~~ vx1*wEI3
wEI4 ~~ vx1*wEI4
wEA1 ~~ wEA1
wEA2 ~~ vx2*wEA2
wEA3 ~~ vx2*wEA3
wEA4 ~~ vx2*wEA4
wSJ1 ~~ wSJ1
wSJ2 ~~ vy*wSJ2
wSJ3 ~~ vy*wSJ3
wSJ4 ~~ vy*wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + EA + SJ ~~ 0*wEI1 + 0*wEA1 + 0*wSJ1 
'

# Fit the model
RICLPM3_m3.fit <- lavaan(RICLPM3_m3, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T,
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM3_m3.fit, fit = T, standardized = T)


# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM3_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM3_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM3_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM3_m1.fit, RICLPM3_m2.fit)
lrtest(RICLPM3_m3.fit, RICLPM3_m2.fit)
lrtest(RICLPM3_m1.fit, RICLPM3_m3.fit)

resid(RICLPM3_m1.fit, type = "standardized")
inspect(RICLPM3_m1.fit, "modindices")


## Best fit is model 2
RICLPM3_m2_table <- sem_tables(RICLPM3_m2.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM3_m2_table

gtsave(RICLPM3_m2_table, "RICLPM3_m2.rtf")
```

## Creating scales for mod 4 (Hypothesis 5)

```{r}
## System justification
FULLDATA$SJ_W1 <- scale(FULLDATA$SJ_W1, center = T, scale = T)
FULLDATA$SJ_W2 <- scale(FULLDATA$SJ_W2, center = T, scale = T)
FULLDATA$SJ_W3 <- scale(FULLDATA$SJ_W3, center = T, scale = T)
FULLDATA$SJ_W4 <- scale(FULLDATA$SJ_W4, center = T, scale = T)

## Systemic Trust
FULLDATA$ST_W1 <- scale(FULLDATA$ST_W1, center = T, scale = T)
FULLDATA$ST_W2 <- scale(FULLDATA$ST_W2, center = T, scale = T)
FULLDATA$ST_W3 <- scale(FULLDATA$ST_W3, center = T, scale = T)
FULLDATA$ST_W4 <- scale(FULLDATA$ST_W4, center = T, scale = T)

## Governmental Distrust
FULLDATA$GD_W1 <- scale(FULLDATA$GD_W1, center = T, scale = T)
FULLDATA$GD_W2 <- scale(FULLDATA$GD_W2, center = T, scale = T)
FULLDATA$GD_W3 <- scale(FULLDATA$GD_W3, center = T, scale = T)
FULLDATA$GD_W4 <- scale(FULLDATA$GD_W4, center = T, scale = T)
```

## Decided to seperate mediational models into two sep models which allowed models to converge (see below)

## H5 - RLCPM4A

## SJ -\> systemic trust -\> General conspiracy mentality

```{r}
## Specify unconstrained model
RICLPM4A_m1 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    ST =~ 1*ST_W1 + 1*ST_W2 + 1*ST_W3 + 1*ST_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wST1 =~ 1*ST_W1
wST2 =~ 1*ST_W2
wST3 =~ 1*ST_W3
wST4 =~ 1*ST_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ wSJ1 + wST1 + wGCM1
wST2 ~ wSJ1 + wST1 + wGCM1
wGCM2 ~ wSJ1 + wST1 + wGCM1
wSJ3 ~ wSJ2 + wST2 + wGCM2
wST3 ~ wSJ2 + wST2 + wGCM2
wGCM3 ~ wSJ2 + wST2 + wGCM2
wSJ4 ~ wSJ3 + wST3 + wGCM3
wST4 ~ wSJ3 + wST3 + wGCM3
wGCM4 ~ wSJ3 + wST3 + wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
ST ~ a*SJ
GCM ~ b*ST

## Direct and indirect effects
direct:= c
ab:=a*b
total1:= ab+c

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wST1
wSJ1 ~~ wGCM1
wST1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wST2
wSJ2 ~~ wGCM2
wST2 ~~ wGCM2
wSJ3 ~~ wST3
wSJ3 ~~ wGCM3
wST3 ~~ wGCM3
wSJ4 ~~ wST4
wSJ4 ~~ wGCM4
wST4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wST1 ~~ wST1
wST2 ~~ wST2
wST3 ~~ wST3
wST4 ~~ wST4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
ST ~~ ST
GCM ~~ GCM
'

# Fit the model
RICLPM4A_m1.fit <- lavaan(RICLPM4A_m1, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T,
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM4A_m1.fit, fit = T, standardized = T)


# Specify partially constrained model
RICLPM4A_m2 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    ST =~ 1*ST_W1 + 1*ST_W2 + 1*ST_W3 + 1*ST_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wST1 =~ 1*ST_W1
wST2 =~ 1*ST_W2
wST3 =~ 1*ST_W3
wST4 =~ 1*ST_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wST2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wST1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wST3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wST2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wST4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wST3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
ST ~ a*SJ
GCM ~ b*ST

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
ST_W1 + ST_W2 + ST_W3 + ST_W4 ~ i_st*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wST1
wSJ1 ~~ wGCM1
wST1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wST2
wSJ2 ~~ wGCM2
wST2 ~~ wGCM2
wSJ3 ~~ wST3
wSJ3 ~~ wGCM3
wST3 ~~ wGCM3
wSJ4 ~~ wST4
wSJ4 ~~ wGCM4
wST4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wST1 ~~ wST1
wST2 ~~ wST2
wST3 ~~ wST3
wST4 ~~ wST4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
ST ~~ ST
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + ST + GCM ~~ 0*wSJ1 + 0*wST1 + 0*wGCM1
'

# Fit the model
RICLPM4A_m2.fit <- lavaan(RICLPM4A_m2, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T,
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM4A_m2.fit, fit = T, standardized = T)


# Specify fully constrained model
RICLPM4A_m3 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    ST =~ 1*ST_W1 + 1*ST_W2 + 1*ST_W3 + 1*ST_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wST1 =~ 1*ST_W1
wST2 =~ 1*ST_W2
wST3 =~ 1*ST_W3
wST4 =~ 1*ST_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wST2 ~ ar_x1*wSJ1 + ar_y2*wST1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wST1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wST3 ~ ar_x1*wSJ2 + ar_y2*wST2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wST2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wST4 ~ ar_x1*wSJ3 + ar_y2*wST3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wST3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
ST ~ a*SJ
GCM ~ b*ST

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
ST_W1 + ST_W2 + ST_W3 + ST_W4 ~ i_st*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wST1
wSJ1 ~~ wGCM1
wST1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wST2
wSJ2 ~~ wGCM2
wST2 ~~ wGCM2
wSJ3 ~~ wST3
wSJ3 ~~ wGCM3
wST3 ~~ wGCM3
wSJ4 ~~ wST4
wSJ4 ~~ wGCM4
wST4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables (contrained starting with w = 2)
wSJ1 ~~ wSJ1
wSJ2 ~~ vx1*wSJ2
wSJ3 ~~ vx1*wSJ3
wSJ4 ~~ vx1*wSJ4
wST1 ~~ wST1
wST2 ~~ vx2*wST2
wST3 ~~ vx2*wST3
wST4 ~~ vx2*wST4
wGCM1 ~~ wGCM1
wGCM2 ~~ vy*wGCM2
wGCM3 ~~ vy*wGCM3
wGCM4 ~~ vy*wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
ST ~~ ST
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + ST + GCM ~~ 0*wSJ1 + 0*wST1 + 0*wGCM1
'

# Fit the model
RICLPM4A_m3.fit <- lavaan(RICLPM4A_m3, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T,
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM4A_m3.fit, fit = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM4A_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4A_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4A_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM4A_m1.fit, RICLPM4A_m2.fit)
lrtest(RICLPM4A_m3.fit, RICLPM4A_m2.fit)
lrtest(RICLPM4A_m1.fit, RICLPM4A_m3.fit)

## mod 3 (fully constrained) is the best fitting model - build table for mod 3
RICLPM4A_m2_table <- sem_tables(RICLPM4A_m3.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM4A_m2_table

gtsave(RICLPM4A_m2_table, "RICLPM4A_m2.rtf")
```

## H5 - RICLPM4B

## SJ -\> governmental distrust -\> General conspiracy mentality

```{r}
## Specify unconstrained model
RICLPM4B_m1 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    GD =~ 1*GD_W1 + 1*GD_W2 + 1*GD_W3 + 1*GD_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wGD1 =~ 1*GD_W1
wGD2 =~ 1*GD_W2
wGD3 =~ 1*GD_W3
wGD4 =~ 1*GD_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ wSJ1 + wGD1 + wGCM1
wGD2 ~ wSJ1 + wGD1 + wGCM1
wGCM2 ~ wSJ1 + wGD1 + wGCM1
wSJ3 ~ wSJ2 + wGD2 + wGCM2
wGD3 ~ wSJ2 + wGD2 + wGCM2
wGCM3 ~ wSJ2 + wGD2 + wGCM2
wSJ4 ~ wSJ3 + wGD3 + wGCM3
wGD4 ~ wSJ3 + wGD3 + wGCM3
wGCM4 ~ wSJ3 + wGD3 + wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
GD ~ a*SJ
GCM ~ b*GD 

## Direct and indirect effects
direct:= c
ab:=a*b
total:= ab+c

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wGD1
wSJ1 ~~ wGCM1
wGD1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wGD2
wSJ2 ~~ wGCM2
wGD2 ~~ wGCM2
wSJ3 ~~ wGD3
wSJ3 ~~ wGCM3
wGD3 ~~ wGCM3
wSJ4 ~~ wGD4
wSJ4 ~~ wGCM4
wGD4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wGD1 ~~ wGD1
wGD2 ~~ wGD2
wGD3 ~~ wGD3
wGD4 ~~ wGD4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
GD ~~ GD
GCM ~~ GCM
'

# Fit the model
RICLPM4B_m1.fit <- lavaan(RICLPM4B_m1, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T,
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM4B_m1.fit, fit = T, standardized = T)

## Specify partially constrained model
RICLPM4B_m2 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    GD =~ 1*GD_W1 + 1*GD_W2 + 1*GD_W3 + 1*GD_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wGD1 =~ 1*GD_W1
wGD2 =~ 1*GD_W2
wGD3 =~ 1*GD_W3
wGD4 =~ 1*GD_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGD2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wGD1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGD3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wGD2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGD4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wGD3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
GD ~ a*SJ
GCM ~ b*GD 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
GD_W1 + GD_W2 + GD_W3 + GD_W4 ~ i_GD*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wGD1
wSJ1 ~~ wGCM1
wGD1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wGD2
wSJ2 ~~ wGCM2
wGD2 ~~ wGCM2
wSJ3 ~~ wGD3
wSJ3 ~~ wGCM3
wGD3 ~~ wGCM3
wSJ4 ~~ wGD4
wSJ4 ~~ wGCM4
wGD4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4
wGD1 ~~ wGD1
wGD2 ~~ wGD2
wGD3 ~~ wGD3
wGD4 ~~ wGD4
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
GD ~~ GD
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + GD + GCM ~~ 0*wSJ1 + 0*wGD1 + 0*wGCM1
'

# Fit the model
RICLPM4B_m2.fit <- lavaan(RICLPM4B_m2, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T, 
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM4B_m2.fit, fit = T, standardized = T)

## Specify fully constrained model
RICLPM4B_m3 <- '
    # Create between components (random intercepts)
    SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4
    GD =~ 1*GD_W1 + 1*GD_W2 + 1*GD_W3 + 1*GD_W4
    GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4

# Create within-person-centered variables
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4
wGD1 =~ 1*GD_W1
wGD2 =~ 1*GD_W2
wGD3 =~ 1*GD_W3
wGD4 =~ 1*GD_W4
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4


# Estimate lagged effects between within-person-centered variables
wSJ2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGD2 ~ ar_x1*wSJ1 + ar_x2*wGD1 + cl_x*wGCM1
wGCM2 ~ cl_y1*wSJ1 + cl_y2*wGD1 + ar_y*wGCM1
wSJ3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGD3 ~ ar_x1*wSJ2 + ar_x2*wGD2 + cl_x*wGCM2
wGCM3 ~ cl_y1*wSJ2 + cl_y2*wGD2 + ar_y*wGCM2
wSJ4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGD4 ~ ar_x1*wSJ3 + ar_x2*wGD3 + cl_x*wGCM3
wGCM4 ~ cl_y1*wSJ3 + cl_y2*wGD3 + ar_y*wGCM3


## Estimate lagged effect between between-person variables
GCM ~ c*SJ
GD ~ a*SJ
GCM ~ b*GD 

# Indirect and total effects
direct:= c
ab:= a*b
total:= ab+c

# Estimate lagged mediation effects between within-person variables (direct, indirect, total)
direct2:= cl_y1
df:= ar_x1*cl_y2
total2:= (ar_x1*cl_y2) + cl_y1

# Constrained intercepts over time 
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1
GD_W1 + GD_W2 + GD_W3 + GD_W4 ~ i_GD*1
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1

# Estimate covariance between within-person variables at wave 1
wSJ1 ~~ wGD1
wSJ1 ~~ wGCM1
wGD1 ~~ wGCM1

# Estimate covariances between residuals of within-person-centered variables (wave 2 & 3)
wSJ2 ~~ wGD2
wSJ2 ~~ wGCM2
wGD2 ~~ wGCM2
wSJ3 ~~ wGD3
wSJ3 ~~ wGCM3
wGD3 ~~ wGCM3
wSJ4 ~~ wGD4
wSJ4 ~~ wGCM4
wGD4 ~~ wGCM4

# Estimate (residual) variance of within-person centered variables (constrained from w = 2)
wSJ1 ~~ wSJ1
wSJ2 ~~ vx1*wSJ2
wSJ3 ~~ vx1*wSJ3
wSJ4 ~~ vx1*wSJ4
wGD1 ~~ wGD1
wGD2 ~~ vx2*wGD2
wGD3 ~~ vx2*wGD3
wGD4 ~~ vx2*wGD4
wGCM1 ~~ wGCM1
wGCM2 ~~ vy*wGCM2
wGCM3 ~~ vy*wGCM3
wGCM4 ~~ vy*wGCM4

# Estimate (residual) variance of random intercepts of endogenous variables
SJ ~~ SJ
GD ~~ GD
GCM ~~ GCM

# Constrain covariance of the between factors and exogenous within factors to 0. 
SJ + GD + GCM ~~ 0*wSJ1 + 0*wGD1 + 0*wGCM1
'

# Fit the model
RICLPM4B_m3.fit <- lavaan(RICLPM4B_m3, data = FULLDATA, missing = "fiml", 
                   estimator = "MLR", meanstructure = T, int.ov.free = T, 
                   group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM4B_m3.fit, fit = T, standardized = T)

# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM4B_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4B_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM4B_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM4B_m1.fit, RICLPM4B_m2.fit)
lrtest(RICLPM4B_m3.fit, RICLPM4B_m2.fit)
lrtest(RICLPM4B_m1.fit, RICLPM4B_m3.fit)

# model 3 is the best fitting model
RICLPM4B_m3_table <- sem_tables(RICLPM4B_m3.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)

RICLPM4B_m3_table

gtsave(RICLPM4B_m3_table, "RICLPM4B_m3.rtf")
```

## Creating scales for mod 5

## General conspiracy mentality -\> Political Partisanship media profile -\> COVID_CT

```{r}
## General conspiracy mentality
FULLDATA$GCM_W1 <- scale(FULLDATA$GCM_W1, center = T, scale = T)
FULLDATA$GCM_W2 <- scale(FULLDATA$GCM_W2, center = T, scale = T)
FULLDATA$GCM_W3 <- scale(FULLDATA$GCM_W3, center = T, scale = T)
FULLDATA$GCM_W4 <- scale(FULLDATA$GCM_W4, center = T, scale = T)

## Political Partisanship media profile
FULLDATA$PPMP_W1 <- scale(FULLDATA$PPMP_W1, center = T, scale = T)
FULLDATA$PPMP_W2 <- scale(FULLDATA$PPMP_W2, center = T, scale = T)
FULLDATA$PPMP_W3 <- scale(FULLDATA$PPMP_W3, center = T, scale = T)
FULLDATA$PPMP_W4 <- scale(FULLDATA$PPMP_W4, center = T, scale = T)

## creating and double centering interaction term
FULLDATA$int_term1 <- FULLDATA$GCM_W1 * FULLDATA$PPMP_W1
FULLDATA$int_term2 <- FULLDATA$GCM_W2 * FULLDATA$PPMP_W2
FULLDATA$int_term3 <- FULLDATA$GCM_W3 * FULLDATA$PPMP_W3
FULLDATA$int_term4 <- FULLDATA$GCM_W4 * FULLDATA$PPMP_W4

FULLDATA$int_term1 <- scale(FULLDATA$int_term1, center = T, scale = T)
FULLDATA$int_term2 <- scale(FULLDATA$int_term2, center = T, scale = T)
FULLDATA$int_term3 <- scale(FULLDATA$int_term3, center = T, scale = T)
FULLDATA$int_term4 <- scale(FULLDATA$int_term4, center = T, scale = T)
```

## H6 - RLCPM 5

```{r, results='asis'}
## Specify unconstrained model
RICLPM5_m1 <- '
    # Create between components (random intercepts)
  GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4
  CCB =~ 1*CCB_W1 + 1*CCB_W2 + 1*CCB_W3 + 1*CCB_W4
  PPMP =~ 1*PPMP_W1 + 1*PPMP_W2 + 1*PPMP_W3 + 1*PPMP_W4 
  int_term =~ 1*int_term1 + 1*int_term2 + 1*int_term3 + 1*int_term4

# Create within-person-centered variables including moderation for within differences
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4
wPPMP1 =~ 1*PPMP_W1
wPPMP2 =~ 1*PPMP_W2
wPPMP3 =~ 1*PPMP_W3
wPPMP4 =~ 1*PPMP_W4
wINT_TERM1 =~ 1*int_term1
wINT_TERM2 =~ 1*int_term2
wINT_TERM3 =~ 1*int_term3
wINT_TERM4 =~ 1*int_term4
wCCB1 =~ 1*CCB_W1
wCCB2 =~ 1*CCB_W2
wCCB3 =~ 1*CCB_W3
wCCB4 =~ 1*CCB_W4


# Modify the lagged effects to include the interaction terms between within-person variables
wGCM2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wPPMP2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wINT_TERM2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wCCB2 ~ wGCM1 + wPPMP1 + wINT_TERM1 + wCCB1
wGCM3 ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wPPMP3  ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wINT_TERM3 ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wCCB3 ~ wGCM2 + wPPMP2 + wINT_TERM2 + wCCB2
wGCM4 ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3
wPPMP4  ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3
wINT_TERM4 ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3
wCCB4 ~ wGCM3 + wPPMP3 + wINT_TERM3 + wCCB3

## estimate lagged effects between between-person variables (moderation)
CCB ~ GCM + PPMP + int_term

# Estimate covariance between within-person variables at wave 1
wGCM1 ~~ wCCB1
wGCM1 ~~ wPPMP1
wGCM1 ~~ wINT_TERM1
wCCB1 ~~ wPPMP1
wCCB1 ~~ wINT_TERM1
wPPMP1 ~~ wINT_TERM1

# Estimate covariances between residuals of within-person-centered variables (waves 2 - 4)
wGCM2 ~~ wCCB2
wGCM2 ~~ wPPMP2
wGCM2 ~~ wINT_TERM2
wCCB2 ~~ wPPMP2
wCCB2 ~~ wINT_TERM2
wPPMP2 ~~ wINT_TERM2
wGCM3 ~~ wCCB3
wGCM3 ~~ wPPMP3
wGCM3 ~~ wINT_TERM3
wCCB3 ~~ wPPMP3
wCCB3 ~~ wINT_TERM3
wPPMP3 ~~ wINT_TERM3
wGCM4 ~~ wCCB4
wGCM4 ~~ wPPMP4
wGCM4 ~~ wINT_TERM4
wCCB4 ~~ wPPMP4
wCCB4 ~~ wINT_TERM4
wPPMP4 ~~ wINT_TERM4

# Estimate (residual) variance of within-person centered variables
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4
wPPMP1 ~~ wPPMP1
wPPMP2 ~~ wPPMP2
wPPMP3 ~~ wPPMP3
wPPMP4 ~~ wPPMP4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ wINT_TERM2
wINT_TERM3 ~~ wINT_TERM3
wINT_TERM4 ~~ wINT_TERM4
wCCB1 ~~ wCCB1
wCCB2 ~~ wCCB2
wCCB3 ~~ wCCB3
wCCB4 ~~ wCCB4

# Estimate (residual) variance of random intercepts of endogenous variables
GCM ~~ GCM
PPMP ~~ PPMP
int_term ~~ int_term
CCB ~~ CCB

## Additional mods
PPMP ~~ int_term
'

# Fit the model
RICLPM5_m1.fit <- lavaan(RICLPM5_m1, data = FULLDATA, meanstructure = T, int.ov.free = T,
                         missing = "fiml", estimator = "MLR", group = "Political_Orientation_group_W1")

resid(RICLPM5_m1.fit, type = "standardized")
# Summarize the results
summary(RICLPM5_m1.fit, fit.measures = T, standardized = T)


# Specify partially constrained model
RICLPM5_m2 <- '
    # Create between components (random intercepts)
  GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4
  CCB =~ 1*CCB_W1 + 1*CCB_W2 + 1*CCB_W3 + 1*CCB_W4
  PPMP =~ 1*PPMP_W1 + 1*PPMP_W2 + 1*PPMP_W3 + 1*PPMP_W4 
  int_term =~ 1*int_term1 + 1*int_term2 + 1*int_term3 + 1*int_term4

# Create within-person-centered variables including moderation for within differences
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4
wPPMP1 =~ 1*PPMP_W1
wPPMP2 =~ 1*PPMP_W2
wPPMP3 =~ 1*PPMP_W3
wPPMP4 =~ 1*PPMP_W4
wINT_TERM1 =~ 1*int_term1
wINT_TERM2 =~ 1*int_term2
wINT_TERM3 =~ 1*int_term3
wINT_TERM4 =~ 1*int_term4
wCCB1 =~ 1*CCB_W1
wCCB2 =~ 1*CCB_W2
wCCB3 =~ 1*CCB_W3
wCCB4 =~ 1*CCB_W4


# Modify the lagged effects to include the interaction terms between within-person variables
wGCM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wPPMP2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wINT_TERM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wCCB2 ~ cl_y1*wGCM1 + cl_y2*wPPMP1 + cl_y3*wINT_TERM1 + ar_y*wCCB1
wGCM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wPPMP3  ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wINT_TERM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wCCB3 ~ cl_y1*wGCM2 + cl_y2*wPPMP2 + cl_y3*wINT_TERM2 + ar_y*wCCB2
wGCM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wPPMP4  ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wINT_TERM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wCCB4 ~ cl_y1*wGCM3 + cl_y2*wPPMP3 + cl_y3*wINT_TERM3 + ar_y*wCCB3

## estimate lagged effects between between-person variables (moderation)
CCB ~ GCM + PPMP + int_term
 
# Estimate covariance between within-person variables at wave 1
wGCM1 ~~ wCCB1
wGCM1 ~~ wPPMP1
wGCM1 ~~ wINT_TERM1
wCCB1 ~~ wPPMP1
wCCB1 ~~ wINT_TERM1
wPPMP1 ~~ wINT_TERM1

# Estimate covariances between residuals of within-person-centered variables (waves 2 - 4)
wGCM2 ~~ wCCB2
wGCM2 ~~ wPPMP2
wGCM2 ~~ wINT_TERM2
wCCB2 ~~ wPPMP2
wCCB2 ~~ wINT_TERM2
wPPMP2 ~~ wINT_TERM2
wGCM3 ~~ wCCB3
wGCM3 ~~ wPPMP3
wGCM3 ~~ wINT_TERM3
wCCB3 ~~ wPPMP3
wCCB3 ~~ wINT_TERM3
wPPMP3 ~~ wINT_TERM3
wGCM4 ~~ wCCB4
wGCM4 ~~ wPPMP4
wGCM4 ~~ wINT_TERM4
wCCB4 ~~ wPPMP4
wCCB4 ~~ wINT_TERM4
wPPMP4 ~~ wINT_TERM4

# Estimate (residual) variance of within-person centered variables
wGCM1 ~~ wGCM1
wGCM2 ~~ wGCM2
wGCM3 ~~ wGCM3
wGCM4 ~~ wGCM4
wPPMP1 ~~ wPPMP1
wPPMP2 ~~ wPPMP2
wPPMP3 ~~ wPPMP3
wPPMP4 ~~ wPPMP4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ wINT_TERM2
wINT_TERM3 ~~ wINT_TERM3
wINT_TERM4 ~~ wINT_TERM4
wCCB1 ~~ wCCB1
wCCB2 ~~ wCCB2
wCCB3 ~~ wCCB3
wCCB4 ~~ wCCB4

# Estimate (residual) variance of random intercepts of endogenous variables
GCM ~~ GCM
PPMP ~~ PPMP
int_term ~~ int_term
CCB ~~ CCB

# Constrain covariance of the between factors and exogenous within factors to 0. 
GCM + PPMP + int_term + CCB ~~ 0*wGCM1 + 0*wPPMP1 + 0*wINT_TERM1 + 0*wCCB1

## additional mods
PPMP ~~ int_term
'

# Fit the model
RICLPM5_m2.fit <- lavaan(RICLPM5_m2, data = FULLDATA, meanstructure = T, int.ov.free = T, 
                         missing = "fiml", estimator = "MLR", group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM5_m2.fit, fit.measures = T, standardized = T)

## Specify fully constrained model
RICLPM5_m3 <- '
    # Create between components (random intercepts)
  GCM =~ 1*GCM_W1 + 1*GCM_W2 + 1*GCM_W3 + 1*GCM_W4
  CCB =~ 1*CCB_W1 + 1*CCB_W2 + 1*CCB_W3 + 1*CCB_W4
  PPMP =~ 1*PPMP_W1 + 1*PPMP_W2 + 1*PPMP_W3 + 1*PPMP_W4 
  int_term =~ 1*int_term1 + 1*int_term2 + 1*int_term3 + 1*int_term4

# Create within-person-centered variables including moderation for within differences
wGCM1 =~ 1*GCM_W1
wGCM2 =~ 1*GCM_W2
wGCM3 =~ 1*GCM_W3
wGCM4 =~ 1*GCM_W4
wPPMP1 =~ 1*PPMP_W1
wPPMP2 =~ 1*PPMP_W2
wPPMP3 =~ 1*PPMP_W3
wPPMP4 =~ 1*PPMP_W4
wINT_TERM1 =~ 1*int_term1
wINT_TERM2 =~ 1*int_term2
wINT_TERM3 =~ 1*int_term3
wINT_TERM4 =~ 1*int_term4
wCCB1 =~ 1*CCB_W1
wCCB2 =~ 1*CCB_W2
wCCB3 =~ 1*CCB_W3
wCCB4 =~ 1*CCB_W4


# Modify the lagged effects to include the interaction terms between within-person variables
wGCM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wPPMP2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wINT_TERM2 ~ ar_x1*wGCM1 + ar_x2*wPPMP1 + ar_x3*wINT_TERM1 + cl_x*wCCB1
wCCB2 ~ cl_y1*wGCM1 + cl_y2*wPPMP1 + cl_y3*wINT_TERM1 + ar_y*wCCB1
wGCM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wPPMP3  ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wINT_TERM3 ~ ar_x1*wGCM2 + ar_x2*wPPMP2 + ar_x3*wINT_TERM2 + cl_x*wCCB2
wCCB3 ~ cl_y1*wGCM2 + cl_y2*wPPMP2 + cl_y3*wINT_TERM2 + ar_y*wCCB2
wGCM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wPPMP4  ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wINT_TERM4 ~ ar_x1*wGCM3 + ar_x2*wPPMP3 + ar_x3*wINT_TERM3 + cl_x*wCCB3
wCCB4 ~ cl_y1*wGCM3 + cl_y2*wPPMP3 + cl_y3*wINT_TERM3 + ar_y*wCCB3

## estimate lagged effects between between-person variables (moderation)
CCB ~ GCM + PPMP + int_term

# Constrained intercepts over time 
GCM_W1 + GCM_W2 + GCM_W3 + GCM_W4 ~ i_gcm*1
PPMP_W1 + PPMP_W2 + PPMP_W3 + PPMP_W4 ~ i_ppmp*1
int_term1 + int_term2 + int_term3 + int_term4 ~ i_int*1
CCB_W1 + CCB_W2 + CCB_W3 + CCB_W4 ~ i_ccb*1
 
# Estimate covariance between within-person variables at wave 1
wGCM1 ~~ wCCB1
wGCM1 ~~ wPPMP1
wGCM1 ~~ wINT_TERM1
wCCB1 ~~ wPPMP1
wCCB1 ~~ wINT_TERM1
wPPMP1 ~~ wINT_TERM1

# Estimate covariances between residuals of within-person-centered variables (waves 2 - 4)
wGCM2 ~~ wCCB2
wGCM2 ~~ wPPMP2
wGCM2 ~~ wINT_TERM2
wCCB2 ~~ wPPMP2
wCCB2 ~~ wINT_TERM2
wPPMP2 ~~ wINT_TERM2
wGCM3 ~~ wCCB3
wGCM3 ~~ wPPMP3
wGCM3 ~~ wINT_TERM3
wCCB3 ~~ wPPMP3
wCCB3 ~~ wINT_TERM3
wPPMP3 ~~ wINT_TERM3
wGCM4 ~~ wCCB4
wGCM4 ~~ wPPMP4
wGCM4 ~~ wINT_TERM4
wCCB4 ~~ wPPMP4
wCCB4 ~~ wINT_TERM4
wPPMP4 ~~ wINT_TERM4

# Estimate (residual) variance of within-person centered variables (constrained start w = 2)
wGCM1 ~~ wGCM1
wGCM2 ~~ vx1*wGCM2
wGCM3 ~~ vx1*wGCM3
wGCM4 ~~ vx1*wGCM4
wPPMP1 ~~ wPPMP1
wPPMP2 ~~ vx2*wPPMP2
wPPMP3 ~~ vx2*wPPMP3
wPPMP4 ~~ vx2*wPPMP4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ vx3*wINT_TERM2
wINT_TERM3 ~~ vx3*wINT_TERM3
wINT_TERM4 ~~ vx3*wINT_TERM4
wCCB1 ~~ wCCB1
wCCB2 ~~ vy*wCCB2
wCCB3 ~~ vy*wCCB3
wCCB4 ~~ vy*wCCB4

# Estimate (residual) variance of random intercepts of endogenous variables
GCM ~~ GCM
PPMP ~~ PPMP
int_term ~~ int_term
CCB ~~ CCB

# Constrain covariance of the between factors and exogenous within factors to 0. 
GCM + PPMP + int_term + CCB ~~ 0*wGCM1 + 0*wPPMP1 + 0*wINT_TERM1 + 0*wCCB1

## additional mods
PPMP ~~ int_term
'

# Fit the model
RICLPM5_m3.fit <- lavaan(RICLPM5_m3, data = FULLDATA, meanstructure = T, int.ov.free = T, missing = "fiml", 
                      estimator = "MLR", group = "Political_Orientation_group_W1")

# Summarize the results
summary(RICLPM5_m3.fit, fit.measures = T, standardized = T)


# Compare the goodness of fit of three RI-CLPMS models
fitmeasures(RICLPM5_m1.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM5_m2.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))
fitmeasures(RICLPM5_m3.fit,  c("chisq", "df", "pvalue", "cfi", "rmsea", "aic", "bic", "ecvi", "srmr"))

lrtest(RICLPM5_m1.fit, RICLPM5_m2.fit)
lrtest(RICLPM5_m2.fit, RICLPM5_m3.fit)
lrtest(RICLPM5_m1.fit, RICLPM5_m3.fit)

## probe best fitting model (model 1)
probe <- probe2WayMC(RICLPM5_m1.fit, c("GCM", "PPMP", "int_term"), "CCB", "PPMP", c(-sqrt(1.403), 0, sqrt(1.403)))

probe
plotProbe(probe, xlab = "General Conspiracy Mentality", ylab = "COVID-19 Conspiracy Beliefs", c(-3,3), legend = T, legendArgs = list(title = "Political Partisanship Media Profile"))

## build table for model 1
RICLPM5_m1_table <- sem_tables(RICLPM5_m1.fit, standardized = T, unstandardized = T, robust = T, 
                        digits = 2, ci_level = 0.95)
RICLPM5_m1_table

gtsave(RICLPM5_m1_table, "RICLPM5_m1.rtf")
```



#########################
CODE FOR EXPLORATORY WORK
#########################
## Exploratory analysis mods 6 and 7

## Clear memory and do not center system justifcation and general conspiracy mentality (W1 and W2)

```{r}
## Candidate prediction certainty
FULLDATA <- FULLDATA %>%
      mutate(CPC = Election_Win_Certain_1 - mean(Election_Win_Certain_1, na.rm = T))

## Election outcome JAWS
FULLDATA <- FULLDATA %>%
      mutate(EOJ = rowMeans(select(., Election_JAWS_W2_1, Election_JAWS_W2_2, Election_JAWS_W2_3),
                            na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EOJ = EOJ - mean(EOJ, na.rm = T))

## Interaction term
FULLDATA$int_term5 <- FULLDATA$CPC * FULLDATA$EOJ
FULLDATA <- FULLDATA %>%
      mutate(int_term5 = int_term5 - mean(int_term5, na.rm = T))

FULLDATA$int_term5 <- scale(FULLDATA$int_term5, center = T, scale = T)
FULLDATA$CPC <- scale(FULLDATA$CPC, center = T, scale = T)

CLPM6 <- '
CPC ~ a*Election_Win
SJ_W2 ~ b*CPC + EOJ + int_term5 + c*Election_Win 

# indirect and total effects
ab:= a*b
total1:= ab + c

int_term5 ~~ int_term5
EOJ ~~ EOJ

'

fit <- sem(model = CLPM6, data = FULLDATA, meanstructure = T, int.ov.free = T, estimator = "MLR")
summary(fit, fit.measures = T, standardized = TRUE)

probe <- probe2WayMC(fit, c("CPC", "EOJ", "int_term5"), "SJ_W2", "EOJ",
                     c(-sqrt(1.075), 0, sqrt(1.075)))

probe
plotProbe(probe, c(-3,3))


CLPM7 <- '
CPC ~ a*Election_Win
GCM_W2 ~ b*CPC + EOJ + int_term5 + c*Election_Win

# indirect and total effects
ab:= a*b
total1:= ab + c

int_term5 ~~ int_term5
EOJ ~~ EOJ
CPC ~~ CPC
GCM_W2 ~~ GCM_W2
'
fit <- sem(model = CLPM7, data = FULLDATA, meanstructure = T, int.ov.free = T, estimator = "MLR")
summary(fit, fit.measures = T, standardized = TRUE)

probe <- probe2WayMC(fit, c("CPC", "EOJ", "int_term5"), "GCM_W2", "EOJ",
                     c(-sqrt(1.075), 0, sqrt(1.075)))

probe
plotProbe(probe, c(-3,3))
```

## Association between Event Impact and System Justification moderating by event affect
## could be explored for H2 but may not be necessary

```{r}

FULLDATA$EA_int_term1 <- FULLDATA$EA_W1*FULLDATA$EI_W1
FULLDATA$EA_int_term2 <- FULLDATA$EA_W2*FULLDATA$EI_W2
FULLDATA$EA_int_term3 <- FULLDATA$EA_W3*FULLDATA$EI_W3
FULLDATA$EA_int_term4 <- FULLDATA$EA_W4*FULLDATA$EI_W4

FULLDATA <- FULLDATA %>%
      mutate(EA_int_term1 = EA_int_term1 - mean(EA_int_term1, na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EA_int_term2 = EA_int_term2 - mean(EA_int_term2, na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EA_int_term3 = EA_int_term3 - mean(EA_int_term3, na.rm = T))

FULLDATA <- FULLDATA %>%
      mutate(EA_int_term4 = EA_int_term4 - mean(EA_int_term4, na.rm = T))

## unconstrained model
RICLPM2_m1 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
 int_term =~ 1*EA_int_term1 + 1*EA_int_term2 + 1*EA_int_term3 + 1*EA_int_term4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4

  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wINT_TERM1 =~ 1*EA_int_term1
wINT_TERM2 =~ 1*EA_int_term2
wINT_TERM3 =~ 1*EA_int_term3
wINT_TERM4 =~ 1*EA_int_term4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ wEI1 + wEA1 + wINT_TERM1 + wSJ1  
wEA2 ~ wEI1 + wEA1 + wINT_TERM1 + wSJ1 
wINT_TERM2 ~ wEI1 + wEA1 + wINT_TERM1 + wSJ1
wSJ2 ~ wEI1 + wEA1 + wINT_TERM1 + wSJ1  
wEI3 ~ wEI2 + wEA2 + wINT_TERM2 + wSJ2 
wEA3 ~ wEI2 + wEA2 + wINT_TERM2 + wSJ2 
wINT_TERM3 ~ wEI2 + wEA2 + wINT_TERM2 + wSJ2
wSJ3 ~ wEI2 + wEA2 + wINT_TERM2 + wSJ2 
wEI4 ~ wEI3 + wEA3 + wINT_TERM3 + wSJ3 
wEA4 ~ wEI3 + wEA3 + wINT_TERM3 + wSJ3 
wINT_TERM4 ~ wEI3 + wEA3 + wINT_TERM3 + wSJ3
wSJ4 ~ wEI3 + wEA3 + wINT_TERM3 + wSJ3 

## estimate lagged effects between between-person variables (moderation)
SJ ~ EI + EA + int_term

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wINT_TERM1
wEI1 ~~ wSJ1 
wEA1 ~~ wINT_TERM1
wEA1 ~~ wSJ1
wINT_TERM1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wINT_TERM2
wEI2 ~~ wSJ2 
wEA2 ~~ wINT_TERM2
wEA2 ~~ wSJ2
wINT_TERM2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wINT_TERM3
wEI3 ~~ wSJ3
wEA3 ~~ wINT_TERM3
wEA3 ~~ wSJ3
wINT_TERM3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wINT_TERM4
wEI4 ~~ wSJ4 
wEA4 ~~ wINT_TERM4
wEA4 ~~ wSJ4
wINT_TERM4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ wINT_TERM2
wINT_TERM3 ~~ wINT_TERM3
wINT_TERM4 ~~ wINT_TERM4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
int_term ~~ int_term
SJ ~~ SJ
'
# Fit the model
RICLPM2_m1.fit <- lavaan(RICLPM2_m1, data = FULLDATA,  
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T)

modificationindices(RICLPM2_m1.fit, sort. = T)
# Summarize the results
summary(RICLPM2_m1.fit, fit = T, standardized = T)

# Specify partially constrained model
RICLPM2_m2 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
 int_term =~ 1*EA_int_term1 + 1*EA_int_term2 + 1*EA_int_term3 + 1*EA_int_term4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4


  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wINT_TERM1 =~ 1*EA_int_term1
wINT_TERM2 =~ 1*EA_int_term2
wINT_TERM3 =~ 1*EA_int_term3
wINT_TERM4 =~ 1*EA_int_term4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wEA1 + ar_x3*wINT_TERM1 + cl_x*wSJ1  
wEA2 ~ ar_x1*wEI1 + ar_x2*wEA1 + ar_x3*wINT_TERM1 + cl_x*wSJ1 
wINT_TERM2 ~ ar_x1*wEI1 + ar_x2*wEA1 + ar_x3*wINT_TERM1 + cl_x*wSJ1
wSJ2 ~ cl_y1*wEI1 + cl_y2*wEA1 + cl_y3*wINT_TERM1 + ar_y*wSJ1  
wEI3 ~ ar_x1*wEI2 + ar_x2*wEA2 + ar_x3*wINT_TERM2 + cl_x*wSJ2 
wEA3 ~ ar_x1*wEI2 + ar_x2*wEA2 + ar_x3*wINT_TERM2 + cl_x*wSJ2 
wINT_TERM3 ~ ar_x1*wEI2 + ar_x2*wEA2 + ar_x3*wINT_TERM2 + cl_x*wSJ2
wSJ3 ~ cl_y1*wEI2 + cl_y2*wEA2 + cl_y3*wINT_TERM2 + ar_y*wSJ2 
wEI4 ~ ar_x1*wEI3 + ar_x2*wEA3 + ar_x3*wINT_TERM1 + cl_x*wSJ3 
wEA4 ~ ar_x1*wEI3 + ar_x2*wEA3 + ar_x3*wINT_TERM1 + cl_x*wSJ3 
wINT_TERM4 ~ ar_x1*wEI3 + ar_x2*wEA3 + ar_x3*wINT_TERM1 + cl_x*wSJ3
wSJ4 ~ cl_y1*wEI3 + cl_y2*wEA3 + cl_y3*wINT_TERM1 + ar_y*wSJ3 

## estimate lagged effects between between-person variables (moderation)
SJ ~ EI + EA + int_term

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
EA_W1 + EA_W2 + EA_W3 + EA_W4 ~ i_ea*1
EA_int_term1 + EA_int_term2 + EA_int_term3 + EA_int_term4 ~ i_int*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1

# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wINT_TERM1
wEI1 ~~ wSJ1 
wEA1 ~~ wINT_TERM1
wEA1 ~~ wSJ1
wINT_TERM1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wINT_TERM2
wEI2 ~~ wSJ2 
wEA2 ~~ wINT_TERM2
wEA2 ~~ wSJ2
wINT_TERM2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wINT_TERM3
wEI3 ~~ wSJ3
wEA3 ~~ wINT_TERM3
wEA3 ~~ wSJ3
wINT_TERM3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wINT_TERM4
wEI4 ~~ wSJ4 
wEA4 ~~ wINT_TERM4
wEA4 ~~ wSJ4
wINT_TERM4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ wEI2
wEI3 ~~ wEI3
wEI4 ~~ wEI4
wEA1 ~~ wEA1
wEA2 ~~ wEA2
wEA3 ~~ wEA3
wEA4 ~~ wEA4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ wINT_TERM2
wINT_TERM3 ~~ wINT_TERM3
wINT_TERM4 ~~ wINT_TERM4
wSJ1 ~~ wSJ1
wSJ2 ~~ wSJ2
wSJ3 ~~ wSJ3
wSJ4 ~~ wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
int_term ~~ int_term
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + EA + int_term + SJ ~~ 0*wEI1 + 0*wEA1 + 0*wINT_TERM1 + 0*wSJ1 

'

# Fit the model
RICLPM2_m2.fit <- lavaan(RICLPM2_m2, data = FULLDATA, 
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM2_m2.fit, fit = T, standardized = T)


# Specify fully constrained model
RICLPM2_m3 <- '
 # Create between components (random intercepts)
 EI =~ 1*EI_W1 + 1*EI_W2 + 1*EI_W3 + 1*EI_W4
 EA =~ 1*EA_W1 + 1*EA_W2 + 1*EA_W3 + 1*EA_W4
 int_term =~ 1*EA_int_term1 + 1*EA_int_term2 + 1*EA_int_term3 + 1*EA_int_term4
 SJ =~ 1*SJ_W1 + 1*SJ_W2 + 1*SJ_W3 + 1*SJ_W4


  # Create within-person-centered variables
wEI1 =~ 1*EI_W1
wEI2 =~ 1*EI_W2
wEI3 =~ 1*EI_W3
wEI4 =~ 1*EI_W4
wEA1 =~ 1*EA_W1
wEA2 =~ 1*EA_W2
wEA3 =~ 1*EA_W3
wEA4 =~ 1*EA_W4
wINT_TERM1 =~ 1*EA_int_term1
wINT_TERM2 =~ 1*EA_int_term2
wINT_TERM3 =~ 1*EA_int_term3
wINT_TERM4 =~ 1*EA_int_term4
wSJ1 =~ 1*SJ_W1
wSJ2 =~ 1*SJ_W2
wSJ3 =~ 1*SJ_W3
wSJ4 =~ 1*SJ_W4

 # Estimate lagged effects between within-person-centered variables
wEI2 ~ ar_x1*wEI1 + ar_x2*wEA1 + ar_x3*wINT_TERM1 + cl_x*wSJ1  
wEA2 ~ ar_x1*wEI1 + ar_x2*wEA1 + ar_x3*wINT_TERM1 + cl_x*wSJ1 
wINT_TERM2 ~ ar_x1*wEI1 + ar_x2*wEA1 + ar_x3*wINT_TERM1 + cl_x*wSJ1
wSJ2 ~ cl_y1*wEI1 + cl_y2*wEA1 + cl_y3*wINT_TERM1 + ar_y*wSJ1  
wEI3 ~ ar_x1*wEI2 + ar_x2*wEA2 + ar_x3*wINT_TERM2 + cl_x*wSJ2 
wEA3 ~ ar_x1*wEI2 + ar_x2*wEA2 + ar_x3*wINT_TERM2 + cl_x*wSJ2 
wINT_TERM3 ~ ar_x1*wEI2 + ar_x2*wEA2 + ar_x3*wINT_TERM2 + cl_x*wSJ2
wSJ3 ~ cl_y1*wEI2 + cl_y2*wEA2 + cl_y3*wINT_TERM2 + ar_y*wSJ2 
wEI4 ~ ar_x1*wEI3 + ar_x2*wEA3 + ar_x3*wINT_TERM1 + cl_x*wSJ3 
wEA4 ~ ar_x1*wEI3 + ar_x2*wEA3 + ar_x3*wINT_TERM1 + cl_x*wSJ3 
wINT_TERM4 ~ ar_x1*wEI3 + ar_x2*wEA3 + ar_x3*wINT_TERM1 + cl_x*wSJ3
wSJ4 ~ cl_y1*wEI3 + cl_y2*wEA3 + cl_y3*wINT_TERM1 + ar_y*wSJ3 

## estimate lagged effects between between-person variables (moderation)
SJ ~ EI + EA + int_term

# Constrained intercepts over time 
EI_W1 + EI_W2 + EI_W3 + EI_W4 ~ i_ei*1
EA_W1 + EA_W2 + EA_W3 + EA_W4 ~ i_ea*1
EA_int_term1 + EA_int_term2 + EA_int_term3 + EA_int_term4 ~ i_int*1
SJ_W1 + SJ_W2 + SJ_W3 + SJ_W4 ~ i_sj*1


# Estimate covariance between within-person variables at wave 1
wEI1 ~~ wEA1
wEI1 ~~ wINT_TERM1
wEI1 ~~ wSJ1 
wEA1 ~~ wINT_TERM1
wEA1 ~~ wSJ1
wINT_TERM1 ~~ wSJ1

# Estimate covariances between residuals of within-person-centered variables (waves 2 & 3)
wEI2 ~~ wEA2
wEI2 ~~ wINT_TERM2
wEI2 ~~ wSJ2 
wEA2 ~~ wINT_TERM2
wEA2 ~~ wSJ2
wINT_TERM2 ~~ wSJ2
wEI3 ~~ wEA3
wEI3 ~~ wINT_TERM3
wEI3 ~~ wSJ3
wEA3 ~~ wINT_TERM3
wEA3 ~~ wSJ3
wINT_TERM3 ~~ wSJ3
wEI4 ~~ wEA4
wEI4 ~~ wINT_TERM4
wEI4 ~~ wSJ4 
wEA4 ~~ wINT_TERM4
wEA4 ~~ wSJ4
wINT_TERM4 ~~ wSJ4

 # Estimate (residual) variance of within-person centered variables
wEI1 ~~ wEI1
wEI2 ~~ vx1*wEI2
wEI3 ~~ vx1*wEI3
wEI4 ~~ vx1*wEI4
wEA1 ~~ wEA1
wEA2 ~~ vx2*wEA2
wEA3 ~~ vx2*wEA3
wEA4 ~~ vx2*wEA4
wINT_TERM1 ~~ wINT_TERM1
wINT_TERM2 ~~ vx3*wINT_TERM2
wINT_TERM3 ~~ vx3*wINT_TERM3
wINT_TERM4 ~~ vx3*wINT_TERM4
wSJ1 ~~ wSJ1
wSJ2 ~~ vy*wSJ2
wSJ3 ~~ vy*wSJ3
wSJ4 ~~ vy*wSJ4

# Estimate (residual) variance of random intercepts of endogenous variables
EI ~~ EI
EA ~~ EA
int_term ~~ 1*int_term
SJ ~~ SJ

# Constrain covariance of the between factors and exogenous within factors to 0. 
EI + EA + int_term + SJ ~~ 0*wEI1 + 0*wEA1 + 0*wINT_TERM1 + 0*wSJ1  
'

# Fit the model
RICLPM2_m3.fit <- lavaan(RICLPM2_m3, data = FULLDATA, 
                   estimator = "MLR", missing = "fiml", meanstructure = T, int.ov.free = T)

# Summarize the results
summary(RICLPM2_m3.fit, fit = T, standardized = T)

```

```
